
<!DOCTYPE html>
<html>
<head>
            <link rel="canonical" href="http://blog.csdn.net/ltyqljhwcm/article/details/52155097"/> 

    <script type="text/javascript">
        var username = "ltyqljhwcm";var _blogger = username;var blog_address = "http://blog.csdn.net/ltyqljhwcm";var static_host = "http://static.blog.csdn.net";
        var currentUserName = ""; var fileName = '52155097';var commentscount = 0; var islock = false
        window.quickReplyflag = true;
        var totalFloor=0;
                
                 var isBole = false;
                
                
                 var isDigg = false;
                
          
             var isExpert=false;
          
    </script>

<meta http-equiv="content-type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <script src="http://c.csdnimg.cn/public/common/libs/jquery/jquery-1.9.1.min.js" type="text/javascript"></script>
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/common/libs/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/static/css/avatar.css">
    <link type="text/css" rel="stylesheet" href="http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/default.css" />
    <link rel="stylesheet" href="http://static.blog.csdn.net/Skin/skin3-template/css/style.css?v=2017.032">
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/common/toolbar/content_toolbar_css/content_toolbar.css">

    <script type="text/javascript" src="http://static.blog.csdn.net/Skin/skin3-template/fonts/iconfont.js"></script>
    <script src="//csdnimg.cn/rabbit/exposure-click/main.js?v1.15.23"></script>
    <script type="text/javascript" src="http://c.csdnimg.cn/pubfooter/js/tracking_for_recommend.js?v=0911" charset="utf-8"></script>
    <script type="text/javascript" src="http://csdnimg.cn/pubfooter/js/tracking.js" charset="utf-8"></script>
    <script type="text/javascript" src="http://static.blog.csdn.net/scripts/cnick.js" charset="utf-8"></script>
 
    <link rel="stylesheet" href="http://static.blog.csdn.net/code/prettify.css" />
    <script type="text/javascript" src="http://static.blog.csdn.net/code/prettify.js"></script>
<script src="http://dup.baidustatic.com/js/ds.js"></script>
    <script type="text/javascript">

        // Traffic Stats of the entire Web site By baidu
        var _hmt = _hmt || [];
        (function() {
            var hm = document.createElement("script");
            hm.src = "https://hm.baidu.com/hm.js?6bcd52f51e9b3dce32bec4a3997715ac";
            var s = document.getElementsByTagName("script")[0];
            s.parentNode.insertBefore(hm, s);
        })();
        // Traffic Stats of the entire Web site By baidu end



    </script>
    <meta name="description" content="手摇算法最完整的讲解
附带讲解手摇算法对归并排序的优化，你值得一看" />
    <meta name="keywords" content="优化,算法" />
    <meta http-equiv="Cache-Control" content="no-siteapp" /><link rel="alternate" media="handheld" href="#" />
    <meta name="shenma-site-verification" content="5a59773ab8077d4a62bf469ab966a63b_1497598848">


    <title>手摇算法（三重反转算法/内存反转算法） - CSDN博客</title>
</head>
<body>
<script id="toolbar-tpl-scriptId" prod="download" skin="black" src="http://c.csdnimg.cn/public/common/toolbar/js/content_toolbar.js" type="text/javascript" domain="http://blog.csdn.net"></script>

<div class="container clearfix">
    <main>
        <article>
            <h1 class="csdn_top">手摇算法（三重反转算法/内存反转算法）</h1>
            <div class="article_bar clearfix">
                <div class="artical_tag">
                    <span class="original">原创</span>
                    <span class="time">2016年08月08日 21:48:35</span>
                </div>
				<ul class="article_tags clearfix csdn-tracking-statistics" data-mod="popu_377">
					<li class="tit">标签：</li>
					
					<li><a href="http://so.csdn.net/so/search/s.do?q=优化&t=blog" target="_blank">优化</a> <span>/</span></li>
					
					<li><a href="http://so.csdn.net/so/search/s.do?q=算法&t=blog" target="_blank">算法</a> <span>/</span></li>
					
					<li><a href="http://so.csdn.net/so/search/s.do?q=归并排序&t=blog" target="_blank">归并排序</a> <span>/</span></li>
					
					<li><a href="http://so.csdn.net/so/search/s.do?q=二叉树&t=blog" target="_blank">二叉树</a> <span>/</span></li>
					
					<li><a href="http://so.csdn.net/so/search/s.do?q=数据结构&t=blog" target="_blank">数据结构</a> <span>/</span></li>
					
				</ul>
                <ul class="right_bar">
                    <li><button class="btn-noborder"><i class="icon iconfont icon-read"></i><span class="txt">674</span></button></li>
                    <!--<li><button class="btn-noborder"><i class="icon iconfont icon-dashang-"></i><span class="txt">0</span></button></li>-->

                    <li class="edit">
                        <a class="btn-noborder" href="" >
                            <i class="icon iconfont icon-bianji"></i><span class="txt">编辑</span>
                        </a>
                    </li>
                    <li class="del">
                        <a class="btn-noborder" onclick="javascript:deleteArticle(fileName);return false;">
                            <i class="icon iconfont icon-shanchu"></i><span class="txt">删除</span>
                        </a>
                    </li>
                </ul>
            </div>
            <div id="article_content" class="article_content csdn-tracking-statistics" data-mod="popu_307" data-dsm="post">
                
<p>本次我们介绍一种在字符串处理和大量的算法优化方面都有突出作用的算法——手摇算法（三重反转算法/内存反转算法）</p>
<h2>1.何为手摇算法：</h2>
<div>我们在初学程序设计语言的时候可能都会接触过一种问题，如何将字符串中的元素反转一下，就是逆序排列一遍</div>
<div>可能我们都会毫不犹豫的写出如下的代码段：</div>
<div><pre code_snippet_id="1817299" snippet_file_name="blog_20160808_1_6224333"  name="code" class="cpp">//这里采用模板来举例：
T* p1=&amp;data[left];
T* p2=&amp;data[right];
while(p1&lt;p2)
{
	T t=*p1;
	*p1=*p2;
	*p2=*p1;
	p1++;
	p2--; 
} </pre>我们不要以为手摇算法多么的高级，实际上手摇算法非常的好理解</div>
<div><br>
</div>
<div>那么如果我们将问题稍微的变一下，反转字符串中两块元素的位置，该怎么做呢？</div>
<div>可能有的人会说，没问题，我们在开辟一块内存保存一部风的元素块到时候我们再复制两次就可以了</div>
<div><br>
</div>
<div>那么如果题目加上限制，我们要求空间复杂度只能是O(1)，又该如何解决呢？</div>
<div>这里我们就要引入手摇算法的概念了：</div>
<div>手摇算法的处理方式非常的灵活，我们可以转换大小不均衡的元素块，那么他的原理该怎么解释呢？</div>
<div>举例：A B C D E F,我们要求A B和C D E F转换位置</div>
<div>1.我们先观察</div>
<div>根据上面的逆序交换的手段，我们怎么通过逆序交换的手段来实现位置的转换呢：</div>
<div>A B C D E F</div>
<div>C D E F A B</div>
<div><br>
</div>
<div>首先：我们推导一遍就明白了</div>
<div>A B C D E F</div>
<div>B A F E D C</div>
<div>C D E F A B (转换完成)</div>
<div>所以说算法存在三次反转的过程，实如其名：</div>
<div>1.反转前一段</div>
<div>2.反转后一段</div>
<div>2.反转整体</div>
<div>很明显我们的空间复杂度仅仅只是交换操作的t，O(1)实至名归</div>
<div><br>
</div>
<h2>2.代码实现：</h2>
<div><pre code_snippet_id="1817299" snippet_file_name="blog_20160808_2_9888830"  name="code" class="cpp">#include&quot;iostream&quot;
#include&quot;cstdio&quot;
#include&quot;cstdlib&quot;
#include&quot;cstring&quot;
#define N 100

using namespace std;

template&lt;typename T&gt;
class triple
{
	public:
		triple()
		{
			memset(data,0,sizeof(data));
			num=ask=0;
		}
		void set();
		void print();
		void heart(int,int);
		void reverse(int,int);
		int returnnum()
		{
			return num;
		}
	private:
		T data[N];
		int num;
		int ask;
};

template&lt;typename T&gt;
void triple&lt;T&gt;::set()
{
	cout&lt;&lt;&quot;please input the number of the data!&quot;&lt;&lt;endl;
	cin&gt;&gt;num;
	cout&lt;&lt;&quot;please input the ask number!&quot;&lt;&lt;endl;
	cin&gt;&gt;ask;
	cout&lt;&lt;&quot;please input the data!&quot;&lt;&lt;endl;
	for(int i=1;i&lt;=num;i++) cin&gt;&gt;data[i];
}

template&lt;typename T&gt;
void triple&lt;T&gt;::print()
{
	cout&lt;&lt;&quot;After reverse,the data is now!&quot;&lt;&lt;endl;
	for(int i=1;i&lt;=num;i++) cout&lt;&lt;data[i]&lt;&lt;&#39; &#39;;
	cout&lt;&lt;endl; 
}

template&lt;typename T&gt;
void triple&lt;T&gt;::reverse(int left,int right)   //上面写过的逆序操作
{
    T* p1; 
	T* p2;
	p1=&amp;data[left];
	p2=&amp;data[right];
	while(p1&lt;p2)
	{
		T t=*p1;
		*p1=*p2;
		*p2=t;
		p1++;
		p2--;
	}
}

template&lt;typename T&gt;
void triple&lt;T&gt;::heart(int left,int right)   //三重反转
{
	 reverse(left,ask);
	 reverse(ask+1,right);
	 reverse(left,right);
}

int main()
{
	triple&lt;int&gt; my;
	my.set();
	my.heart(1,my.returnnum());
	my.print();
	return 0;
}</pre><br>
<h2>3.应用（归并排序的空间复杂度优化）</h2>
</div>
<div>众所周知，归并排序虽然拥有可以匹敌快排的速度，但是致命硬伤是我们牺牲了大量的内存（和待排空间一样大小的内存）来进行了时间效率上的优化，但是在小内存的计算机上我们如何才能实现归并排序，而不导致内存溢出呢</div>
<div>这里我们就可以通过手摇算法加以应用，<strong>但是我们要明确一点，手摇算法的优化是对时间复杂度是有所牺牲的，下面我会给出手摇算法优化后，时间复杂度到底退化了多少。</strong></div>
<div><br>
</div>
<div>先要知道，我们优化的是归并排序的插入排序部分，不开辟新的内存从而实现排序（左右各自有序的状态下）</div>
<div><br>
</div>
<div>归并排序就不在多余赘述了，如果有所遗忘 ，欢迎参考我的博客 &nbsp;&nbsp;<a target="_blank" href="http://blog.csdn.net/ltyqljhwcm/article/details/52149080">地址在这</a></div>
<div>在进行讲解之前，我们首先要先明确一点：</div>
<div><strong>在递归回溯的过程中，归并排序的左子段和右子段都是各自有序的，这一点非常重要</strong></div>
<h3>3.1元素准备：</h3>
<div>1.指针p1，指向左子段的开头</div>
<div>2.指针p2，指向右子段的开头</div>
<h3><span style="font-size:12px">3.2算法描述：</span></h3>
<div><span style="font-size:12px">1.i指针不断向后移动，直到找到第一个比j指向的元素大的元素或者直到和j相遇</span></div>
<div><span style="font-size:12px">2.index指针先代替j指向右端的第一个元素</span></div>
<div><span style="font-size:12px">3.j指针不断向后移动，知道找到第一个比i指向元素大的元素或者直到遇到数组的末尾</span></div>
<div><span style="font-size:12px">4.将i——index-1段和index——j段进行手摇，之后将i移动j-index&#43;1空位，然后继续上述操作（一旦相遇i，j或者j到达末尾，在该操作4结束后直接结束算法）</span></div>
<div><span style="font-size:12px"><br>
</span></div>
<h3><span style="font-size:12px">3.3区间段解释：</span></h3>
<div>1 2 3 4 5 6 7 8 9 10</div>
<div>&nbsp;i &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;j</div>
<div>在上述算法的过程中，i--index段都比index&#43;1--j段大，换言之，index&#43;1--j段（这一小段是有序的）应该整体位于i--index段之前，之后的都很好理解了</div>
<div>附上例题解释图就好理解了：</div>
<div><img src="http://img.blog.csdn.net/20140421162245765" alt=""><br>
</div>
<div><img src="http://img.blog.csdn.net/20140421175043781" alt=""><br>
</div>
<div><img src="http://img.blog.csdn.net/20140421175812906" alt=""><br>
</div>
<div><br>
</div>
<h3>3.4代码封装：</h3>
<div><pre code_snippet_id="1817299" snippet_file_name="blog_20160808_3_3618585"  name="code" class="cpp">#include&quot;iostream&quot;
#include&quot;cstdio&quot;
#include&quot;cstring&quot;
#include&quot;cstdlib&quot;
#define N 100

using namespace std;

template&lt;typename T&gt;
class bettermerge
{
	public:
		bettermerge()
		{
			memset(data,0,sizeof(data));
			num=0;
		}
		void set();
		void print();
		void premerge()
		{
			merge(1,num);
		}
		void merge(int,int);
		void tripleone(int,int,int);
		void tripletwo(int,int,int);
		void reverse(int left,int right);
	private:
		T data[N];
		int num;
};

template&lt;typename T&gt;
void bettermerge&lt;T&gt;::set()
{
	cout&lt;&lt;&quot;please input the number the data!&quot;&lt;&lt;endl;
	cin&gt;&gt;num;
	cout&lt;&lt;&quot;please input the data!&quot;&lt;&lt;endl;
	for(int i=1;i&lt;=num;i++) cin&gt;&gt;data[i];
}

template&lt;typename T&gt;
void bettermerge&lt;T&gt;::print()
{
	cout&lt;&lt;&quot;After the sort，the data is now:&quot;&lt;&lt;endl;
	for(int i=1;i&lt;=num;i++) cout&lt;&lt;data[i]&lt;&lt;&#39; &#39;;
	cout&lt;&lt;endl;
}

template&lt;typename T&gt;
void bettermerge&lt;T&gt;::merge(int left,int right)
{
	if(left&gt;=right) return ;
	else
	{
		int mid=(left+right)/2;
		merge(left,mid);
		merge(mid+1,right);
		tripleone(left,mid,right);
	}
}

template&lt;typename T&gt;
void bettermerge&lt;T&gt;::tripleone(int left,int mid,int right)
{
	int i=left;
	int j=mid+1;
	int index=j;
	while(j&lt;=right&amp;&amp;i&lt;j)
	{
		while(data[i]&lt;=data[j]&amp;&amp;i&lt;j)   //注意这里，如果是 &lt;= 那么优化后的归并排序是稳定的，否则就是不稳定的
		{
			i++;
		}
		if(i==j) break;
		index=j;
		while(data[j]&lt;data[i]&amp;&amp;j&lt;=right) j++;   //这里没有上面的影响，仔细想一下就会明白 
		tripletwo(i,index-1,j-1);
		i+=j-index;   //j-1-index+1=j-index(后一段的长度)，记住小心这里j是比data[i]大的，data[j-1]才是要移动的字段的后端 
	}
}

template&lt;typename T&gt;
void bettermerge&lt;T&gt;::tripletwo(int left,int mid,int right)
{
	reverse(left,mid);
	reverse(mid+1,right);
	reverse(left,right);
} 

template&lt;typename T&gt;
void bettermerge&lt;T&gt;::reverse(int left,int right)
{
	T* p1=&amp;data[left];
	T* p2=&amp;data[right];
	while(p1&lt;p2)
	{
		T t=*p1;
		*p1=*p2;
		*p2=t;
		p1++;
		p2--;
	}
}

int main()
{
	bettermerge&lt;int&gt; my;
	my.set();
	my.premerge();
	my.print();
	return 0;
}</pre><br>
<h4>3.5时间复杂度退化计算：</h4>
</div>
<div>首先我们要明确手摇算法的时间复杂度：</div>
<div>因为手摇算法相当于将数组惊醒了两次遍历，去掉常数项之后，时间复杂度是O(n)</div>
<div><br>
</div>
<div>最好的情况：左子段和右子段直接全部交换</div>
<div>很明显此时原地归并的复杂度还是O(n*logn<span style="font-size:12px">)</span></div>
<div><span style="font-size:12px"><br>
</span></div>
<div><span style="font-size:12px">最坏的情况：</span></div>
<div><span style="font-size:12px">一段一段的缓慢前进的情况;此时算法的时间复杂度就是n*n</span></div>
<div><span style="font-size:12px">原地归并的复杂度就是O(n*n*logn)</span></div>
<div><span style="font-size:12px">显然这时候，虽然我们手摇算法将空间复杂度优化到了O(1)，但是我们牺牲了相对的时间</span></div>
<div><span style="font-size:12px"><br>
</span></div>
<div><span style="font-size:12px">综合起来原地归并的时间复杂度在O(n*logn)--O(n*n*logn</span><span style="font-size:12px">)之间，而空间复杂度降到了O(1)，是可以满足我们特定的要求的</span></div>
<link rel="stylesheet" href="http://static.blog.csdn.net/public/res-min/markdown_views.css?v=2.0" />
            </div>
        </article>
        <div class="readall_box csdn-tracking-statistics" data-mod="popu_376">
			<div class="read_more_mask"></div>
            <a class="btn btn-large btn-gray-fred read_more_btn" target="_self">阅读全文</a>
        </div>
        <div class="article_copyright">
            版权声明：本文为博主原创文章，未经博主允许不得转载。
        </div>
        <!--  <div class="reward_box">
            <div class="tit">
              <button class="btn_reward"><i class="icon iconfont icon-dashang-"></i></button>
            </div>
            <dl class="clearfix">
              <dt><a href="#" target="_blank">近期打赏</a></dt>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
            </dl>
          </div>-->

        <ul class="article_collect clearfix csdn-tracking-statistics"  data-mod="popu_378">
            <li class="tit">本文已收录于以下专栏：</li>
            
            <li><a href="http://blog.csdn.net/column/details/12704.html" target="_blank">算法与数据结构</a></li>
            
        </ul>
        <div class="comment_box clearfix">
            <div id="comment_form">
                <div id="commentsbmitarear">
                    <!-- <h6><span>0</span>条评论</h6> -->
           <!--          <dl class="clearfix" id="commentbox">
                        <dt>
                            <a href="http://my.csdn.net/"><img src="" ></a>
                        </dt>
                        <dd>
                            <a href="http://my.csdn.net/" target="_blank"></a>
                        </dd>
                        <dd class="txt_tip"><span id="tip_comment" class="tip"></span></dd>
                    </dl> -->
                    <div class="comment_area clearfix">
						<div class="userimg"><a href="http://my.csdn.net/"><img src=""></a></div>
                        <form action="/ltyqljhwcm/comment/submit?id=52155097" method="post" onsubmit="return subform(this);" id="commentform">
                            <textarea class="comment_content" name="comment_content" id="comment_content" placeholder="发表你的评论"></textarea>
                            <div class="bot_bar clearfix">
                                <div id="ubbtools" class="add_code">
                                    <a href="#insertcode" code="code" target="_self"><i class="icon iconfont icon-daima"></i></a>
                                </div>

                                <input type="hidden" id="comment_replyId" name="comment_replyId">
                                <input type="hidden" id="comment_userId" name="comment_userId" value="">
                                <input type="hidden" id="commentId" name="commentId" value="">
                                <input type="submit" class="btn btn-redborder" value="发表评论">
								<span id="tip_comment" class="tip">
                                <div style="display: none;" class="csdn-tracking-statistics" data-mod="popu_384"><a href="#" target="_blank" class="comment_area_btn">发表评论</a></div>

                                <div id="lang_list" code="code">
                                    <a href="#html" style="width:95px;" class="long_name" target="_self">HTML/XML</a>
                                    <a href="#objc" style="width:95px;" class="long_name" target="_self">objective-c</a>
                                    <a href="#delphi" style="width:58px;" class="zhong_name" target="_self">Delphi</a>
                                    <a href="#ruby" class="zhong_name" target="_self">Ruby</a>
                                    <a href="#php" target="_self">PHP</a>
                                    <a href="#csharp" class="duan_name" target="_self">C#</a>
                                    <a style=" border-right: none;" href="#cpp" class="duan_name" target="_self">C++</a>
                                    <a style=" border-bottom:none;width:95px;" href="#javascript" class="long_name" target="_self">JavaScript</a>
                                    <a style=" border-bottom:none;width:95px;" href="#vb" class="long_name" target="_self">Visual Basic</a>
                                    <a style=" border-bottom:none;" href="#python" class="zhong_name" target="_self">Python</a>
                                    <a style=" border-bottom:none;" href="#java" class="zhong_name" target="_self">Java</a>
                                    <a style="border-bottom:none;" href="#css" class="duan_name" target="_self">CSS</a>
                                    <a style="border-bottom:none;" href="#sql" class="duan_name" target="_self">SQL</a>
                                    <a style="border:none; " href="#plain" class="duan_name" target="_self">其它</a>
                                    <span class="arrb"></span>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="comment_li_outbox">
            <div id="comment_list"></div>
        </div>

        <div class="more_comment">
            <div id="comment_bar" class="trackgin-ad" data-mod="popu_385"></div>
        </div>

        <h3 class="recommend_tit">相关文章推荐</h3>
        <div class="recommend_list clearfix">
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/perfectnihil/article/details/76721521"  target="_blank" strategy="BlogCommendFromBaidu_0">异或运算及其在交换变量值中的使用</a></h2>
                    <div class="summary">
                        在计算机中，如果想要交换变量的值：
Demo1:
常规的算法是

public static void  doSwitch(int a,int b){
    int temp = a;
  ...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/perfectnihil" target="_blank" strategy="BlogCommendFromBaidu_0"><img src="http://avatar.csdn.net/8/C/8/2_perfectnihil.jpg" alt="perfectnihil" title="perfectnihil"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/perfectnihil">perfectnihil</a></li>
                        <li class="time">2017-08-05 15:17</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>72</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/kamsau/article/details/44317739"  target="_blank" strategy="BlogCommendFromBaidu_1">手摇算法</a></h2>
                    <div class="summary">
                        如何实现字符串倒置呢，直接用头尾两个指针从两边向中间扫，并且不断交换两个指针的内容，
void reverse(int a[], int n){
    if(n &lt; 2) return;
    f...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/kamsau" target="_blank" strategy="BlogCommendFromBaidu_1"><img src="http://avatar.csdn.net/9/A/E/2_kamsau.jpg" alt="kamsau" title="kamsau"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/kamsau">kamsau</a></li>
                        <li class="time">2015-03-16 23:30</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>900</span></li>
                    </ul>
                </dd>
            </dl>
            
            <!--dl class="clearfix csdn-tracking-statistics" data-mod="popu_393">
                <dt><a href="http://edu.csdn.net/huiyiCourse/series_detail/64?utm_source=blog10" target="_blank"><img class="maxwidth" src="http://img.blog.csdn.net/20170928113144608" alt="" title=""></a></dt>
                <dd>
                    <div class="summary">
                        <h2><a href='http://edu.csdn.net/topic/python1?utm_source=blog10' target='_blank'>伤心啊！年度热门编程语言排行榜出来了...</a></h2>  <div class="summary">近期，IEEE Spectrum 发布了第四届顶级编程语言交互排行榜。结合 10 个线上数据源的 12 个标准，对 48 种语言进行了排行！此外，七牛云许式伟曾说过Go语言会取代Java...气氛... </div> 
                    </div>
                </dd>
            </dl-->
	<script>
		(function() {
		    var s = "_" + Math.random().toString(36).slice(2);
		    document.write('<div id="' + s + '"></div>');
		    (window.slotbydup=window.slotbydup || []).push({
			id: '4765209',
			container: s,
			size: '808,120',
			display: 'inlay-fix'
		    });
		})();
	</script>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/u010033948/article/details/50814153"  target="_blank" strategy="BlogCommendFromBaidu_2">手摇算法及其应用</a></h2>
                    <div class="summary">
                        手摇算法及其应用
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/u010033948" target="_blank" strategy="BlogCommendFromBaidu_2"><img src="http://avatar.csdn.net/A/C/D/2_u010033948.jpg" alt="u010033948" title="u010033948"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/u010033948">u010033948</a></li>
                        <li class="time">2016-03-06 17:01</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>205</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/tommyzht/article/details/47165797"  target="_blank" strategy="BlogCommendFromBaidu_3">字符串反转之——手摇算法</a></h2>
                    <div class="summary">
                        手摇算法（也叫三次反转算法）

看题：将字符串abcdefg，变成efgabcd，要求空间复杂度O(1)。

解答：


第一步：将子串abcd反转，变成dcba。源字符串变成dcbae...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/TommyZht" target="_blank" strategy="BlogCommendFromBaidu_3"><img src="http://avatar.csdn.net/2/3/0/2_tommyzht.jpg" alt="TommyZht" title="TommyZht"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/TommyZht">TommyZht</a></li>
                        <li class="time">2015-07-31 10:05</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>521</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/shuxiangxingkong/article/details/52531660"  target="_blank" strategy="BlogCommendFromBaidu_4">手摇算法</a></h2>
                    <div class="summary">
                        f为翻转映射 
假设AB要翻转成BA，f(f(A)f(B))=f(f(B))f(f(A))=BA
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/shuxiangxingkong" target="_blank" strategy="BlogCommendFromBaidu_4"><img src="http://avatar.csdn.net/F/3/F/2_shuxiangxingkong.jpg" alt="shuxiangxingkong" title="shuxiangxingkong"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/shuxiangxingkong">shuxiangxingkong</a></li>
                        <li class="time">2016-09-14 00:53</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>164</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/sysuwzl/article/details/7540316"  target="_blank" strategy="BlogCommendFromBaidu_5">利用手摇算法实现原地归并排序</a></h2>
                    <div class="summary">
                        归并排序很基础，通常的实现需要O(n)的空间复杂度，思路简单，不赘述。
今年的百度笔试题考了一个原地归并排序的归并算法：
要求用O(1)的空间复杂度，合并2个已经有序的子数组a[0,mid-1] ...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/sysuwzl" target="_blank" strategy="BlogCommendFromBaidu_5"><img src="http://avatar.csdn.net/8/4/F/2_sysuwzl.jpg" alt="sysuwzl" title="sysuwzl"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/sysuwzl">sysuwzl</a></li>
                        <li class="time">2012-05-06 21:12</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>1426</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics downloadElement" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
               	<dt><a href="http://download.csdn.net/detail/lxzhii/3790574" target="_blank" strategy="BlogCommendFromCsdn_6"><img class="maxwidth" src="http://download.csdn.net/images/minetype/rar.svg" alt="" title=""></a></dt>
		<dd>
			<div class="summary">
				<h2><a href="http://download.csdn.net/detail/lxzhii/3790574" target="_blank" strategy="BlogCommendFromCsdn_6">C#数据结构反转线性表算法</a></h2>
				<div class="summary">
				  <ul>
					  <li class="time">2011-11-13 18:27</li>
					  <li class="visited_num fileSize">24KB</li>
					  <li class="download_btn"><a href="http://download.csdn.net/detail/lxzhii/3790574">下载</a></li>
				  </ul>
				</div> 
			</div>
		</dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/lammonpeter/article/details/74924269"  target="_blank" strategy="BlogCommendFromCsdn_7">反转排序算法（Reverse Sort）</a></h2>
                    <div class="summary">
                        反转排序算法的java代码实现。
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/Lammonpeter" target="_blank" strategy="BlogCommendFromCsdn_7"><img src="http://avatar.csdn.net/4/9/E/2_lammonpeter.jpg" alt="Lammonpeter" title="Lammonpeter"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/Lammonpeter">Lammonpeter</a></li>
                        <li class="time">2017-07-10 15:32</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>119</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/kimylrong/article/details/30047867"  target="_blank" strategy="BlogCommendFromCsdn_8">c语言实现bit反转的最佳算法-从msb-lsb到lsb-msb</a></h2>
                    <div class="summary">
                        问题
实现如下转换的最佳算法是什么？
0010 0000 =&gt; 0000 0100

具体的转换是从MSB-&gt;LSB到LSB-&gt;MSB, 所有的Bit都必须反转，那意味着，这并不是字节顺序的交换。
最...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/kimylrong" target="_blank" strategy="BlogCommendFromCsdn_8"><img src="http://avatar.csdn.net/E/E/F/2_kimylrong.jpg" alt="kimylrong" title="kimylrong"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/kimylrong">kimylrong</a></li>
                        <li class="time">2014-06-11 13:17</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>8187</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/firechungelaile/article/details/39377901"  target="_blank" strategy="BlogCommendFromCsdn_9">LeetCode之186_Reverse Words in a String 字符串词序反转算法</a></h2>
                    <div class="summary">
                        给定一个字符串S，反转其中存在的单词顺序，将
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/firechungelaile" target="_blank" strategy="BlogCommendFromCsdn_9"><img src="http://avatar.csdn.net/E/8/1/2_firechungelaile.jpg" alt="firechungelaile" title="firechungelaile"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/firechungelaile">firechungelaile</a></li>
                        <li class="time">2014-09-18 20:40</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>393</span></li>
                    </ul>
                </dd>
            </dl>
            

	   

            

            
        </div>
    </main>
    <aside>
        <div class="right_box user_info">
            <dl class="inf_bar clearfix">
                <dt class="csdn-tracking-statistics" data-mod="popu_381">
                    <a href="http://blog.csdn.net/ltyqljhwcm" target="_blank">
                        <img src="http://avatar.csdn.net/A/7/0/1_ltyqljhwcm.jpg" class="avatar_pic">
                    </a>
                    <span class="medals" title="">
                <svg class="icon" aria-hidden="true">
                    
                </svg>
              </span>
                </dt>
                <dd>
                    <h3 class="csdn-tracking-statistics"  data-mod="popu_380"><a href="http://blog.csdn.net/ltyqljhwcm" target="_blank" id="uid">ltyqljhwcm</a></h3>
                    <span  class="csdn-tracking-statistics" data-mod="popu_379"><a class="btn btn-redborder-small "  id="span_add_follow" target="_self">＋关注</a></span>
                </dd>
            </dl>
            <div class="inf_number_box clearfix">
                <dl>
                    <dt>原创</dt>
                    <dd>219</dd>
                </dl>
                <dl>
                    <dt>粉丝</dt>
                    <dd id='fan'>39</dd>
                </dl>
                <dl>
                    <dt>喜欢</dt>
                    <dd>0</dd>
                </dl>
								 <dl>
              <dt>码云</dt>
              <dd>&nbsp;</dd>
            </dl>

            </div>
	    <div class="writings">
              <div class="public_signal clearfix">
                <h3>他的最新文章</h3>
                <a href="http://blog.csdn.net/ltyqljhwcm" target="_blank" class="more_z"><span>更多文章</span></a>
              </div>
                <ul class="inf_list clearfix csdn-tracking-statistics" data-mod="popu_382">
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53454971" target="_blank">POJ 3295 - 位运算 + 模拟 +递归</a>
                    </li>
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53444306" target="_blank">NYOJ 118 次小生成树</a>
                    </li>
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53434466" target="_blank">胜者树 败者树 K-路最佳归并树 高效外部排序</a>
                    </li>
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53411183" target="_blank">POJ 1062 - 昂贵的聘礼 - 经典题</a>
                    </li>
                    
                </ul>
            </div>
        </div>
        <div class="extension_other csdn-tracking-statistics" data-mod="popu_389">
						<!--u3032528-->
			<div class="flashrecommend">
            <script type="text/javascript" src="http://mpb1.iteye.com/bwocoltlyzdec.js"></script>
		    </div>
        </div>

		<div class="host-column">
          <h3>博主专栏</h3>
          <ul class="column-list">

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/13704.html">
                  <img src="http://img.blog.csdn.net/20161126164008952" alt="">
                  <div>15</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/13704.html">NYOJ 好题总结</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>3080</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/13628.html">
                  <img src="http://img.blog.csdn.net/20161121124730884" alt="">
                  <div>56</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/13628.html">POJ 专项题解</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>19375</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/13409.html">
                  <img src="http://img.blog.csdn.net/20161102193750895" alt="">
                  <div>4</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/13409.html">Leetcode</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>1266</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/12932.html">
                  <img src="http://img.blog.csdn.net/20160915093249392" alt="">
                  <div>8</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/12932.html">读书笔记</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2246</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/12704.html">
                  <img src="http://img.blog.csdn.net/20160826002037987" alt="">
                  <div>37</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/12704.html">算法与数据结构</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>41992</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/mystudyrecord001.html">
                  <img src="http://img.blog.csdn.net/20160809183336359" alt="">
                  <div>15</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/mystudyrecord001.html">微软面试百题</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>8448</span></div>
              </div>
            </li>

          </ul>
          <div class="unfold-btn">
            <span>展开</span><i class="icon iconfont icon-xiajiantou"></i>
          </div>
        </div>
		
        
        <div class="fixRight">
            <div class="right_box padb0 csdn-tracking-statistics" data-mod="popu_391">
                <h3 class="tit"><span><em>在线课程</em></span></h3>
                <ul class="edu_li clearfix">
                  
                  <li>
                    <div>
                      <a href="http://edu.csdn.net/huiyiCourse/series_detail/64?utm_source=blog7" target="_blank">
                        <img src="http://img.bss.csdn.net/201710111134087930.png" alt="Presto服务治理与架构优化在京东的实践应用" title="Presto服务治理与架构优化在京东的实践应用">
                      </a>
                    </div>
                    <div>
                      <p><a href="http://edu.csdn.net/huiyiCourse/series_detail/64?utm_source=blog7" target="_blank">Presto服务治理与架构优化在京东的实践应用</a></p>
                      <p>讲师：王哲涵</p>
                    </div>
                  </li>
                  
                  <li>
                    <div>
                      <a href="http://edu.csdn.net/huiyiCourse/detail/581?utm_source=blog7" target="_blank">
                        <img src="http://img.bss.csdn.net/201710111123195350.png" alt="【免费直播】Python最佳学习路线" title="【免费直播】Python最佳学习路线">
                      </a>
                    </div>
                    <div>
                      <p><a href="http://edu.csdn.net/huiyiCourse/detail/581?utm_source=blog7" target="_blank">【免费直播】Python最佳学习路线</a></p>
                      <p>讲师：韦玮</p>
                    </div>
                  </li>
                  
                </ul>
            </div>
			<!--u3032529-->
            <!-- <div class="extension_other csdn-tracking-statistics baidu_box" data-mod="popu_395">
								
                <script type="text/javascript" src="http://mpb1.iteye.com/cxpdpmumfaedgm.js"></script>
            </div> -->
			<div class="extension_other csdn-tracking-statistics bottomRcom" data-mod="popu_389" style="position:absolute;z-index:-5;opacity:0;pointer-events:none">
						<!--u3032528-->
				<div class="flashrecommend">
				<script type="text/javascript" src="http://mpb1.iteye.com/bwocoltlyzdec.js"></script>
				</div>
			</div>
        </div>
		<div class="user-hotArticle">
          <h3>热门文章</h3>
          <ul class="hotArticle-list">
 
            <li>
              <a href="/ltyqljhwcm/article/details/53043646">快速幂取模算法详解</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>5853</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/51952942">最短路径算法汇总</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>4540</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/52966874">ELFhash - 优秀的字符串哈希算法</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2787</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/52145746">快速排序全面讲解（含复杂度证明）——即将引出八大排序算法</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2041</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/52497853">2016BIT小学期——电话号码问题（哈希+位运算）</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>1921</span></div>
            </li>
 
          </ul>
        </div>


    </aside>
</div>

<div class="left_fixed">
      <div class="left_show_button">
        <span>
          <i class="icon iconfont icon-youjiantou"></i>
        </span>
      </div>
    <ul class="left_menu">

        <li>
            <button class="left-fixed-btn btn-like csdn-tracking-statistics" data-mod="popu_373" target="_self">
                <span class="iconbox border_red"><i class="icon iconfont icon-dianzan"></i></span>
				<span class="txt">3</span>
            </button>
        </li>
		<li id="blog_artical_directory">
            <button class="left-fixed-btn left_menu_btn csdn-tracking-statistics" data-mod="popu_372" target="_self">
                <span class="iconbox border_black"><i class="icon iconfont icon-mulu"></i></span>
            </button>
        </li>
        <li class="menu_con">
            <div class="list_father">
                <div class="arr_box">
                    <button class="btn-noborder arr-btn scroll-down  left_scroll_down"><i class="icon iconfont icon-xiajiantou"></i></button>
                    <button class="btn-noborder arr-btn scroll-up left_scroll_top"><i class="icon iconfont icon-shangjiantou"></i></button>
                </div>
                <div class="arr"></div>
                <div id="csdnBlogDir"></div>
            </div>
        </li>
        <li>
            <button class="left-fixed-btn csdn-tracking-statistics" data-mod="popu_374"  id="com-quick-collect" target="_self">
                <span class="iconbox border_purple"><i class="icon iconfont icon-shoucang"></i></span>
    
            </button>
        </li>
		<li>
          <button class="left-fixed-btn btn-pinglun" >
            <span class="iconbox border_purple"><i class="icon iconfont icon-pinglun"></i></span>
          </button>
        </li>
        <li id="share_box">
            <button class="left-fixed-btn  csdn-tracking-statistics"  data-mod="popu_375" target="_self">
                <span class="iconbox border_orange"><i class="icon iconfont icon-fenxiang"></i></span>
            </button>
            <div class="bdsharebuttonbox csdn-tracking-statistics" data-mod="popu_172">
                <div class="outside">
                    <span class="iconbox border_red2"><i class="icon iconfont icon-xinlang"></i></span>
                    <a href="#" class="bds_tsina" data-cmd="tsina" title="分享到新浪微博"> </a>
                </div>
                <div class="outside">
                    <span class="iconbox border_green"><i class="icon iconfont icon-weixin"></i></span>
                    <a href="#" class="bds_weixin" data-cmd="weixin" title="分享到微信"> </a>
                </div>
                <div class="outside">
                    <span class="iconbox border_blue"><i class="icon iconfont icon-QQ"></i></span>
                    <a href="#" class="bds_qzone" data-cmd="qzone" title="分享到QQ空间"> </a>
                </div>
            </div>
        </li>
    </ul>
</div>
<div class="right_fixed">
  <div class="r_ico">
	<i class="icon iconfont icon-jubao"></i>
	<span class="txt" id="reportBtn">内容举报</span>
  </div>
  <div class="returnTop">
   <i class="icon iconfont icon-fanhuidingbu"></i>
   <span>返回顶部</span>
 </div>
</div>
<div id="pop_win"></div>
<div id="popup_mask"></div>
<div class="pop_CA_cover" ></div>
<div class="pop pop_CA" >
    <div class="CA_header">
        收藏助手
        <span class="cancel_icon"  id="fapancle" ></span>
    </div>
    <iframe src="" id="collectIframe" frameborder="0" width="100%" height="360"  scrolling="no" ></iframe>
</div>
<!--举报-->
<div id="report_dialog" style="top: 250px; left: 343.5px;"><div id="panel_report">
    <div class="panel_head">不良信息举报</div>
    <form method="post" id="frmReport" class="panel_body">
        <table border="0" cellpadding="0" cellspacing="4" class="pop_table">
            <tbody><tr><td colspan="2">您举报文章：<a href="http://blog.csdn.net/raintungli/article/details/76583070" target="_blank">深度学习：神经网络中的前向传播和反向传播算法推导</a></td></tr>
            <tr>
                <th style="width:60px;">举报原因：</th>
                <td id="panel_reporttype">
                    <label><input type="radio" class="report_type" id="report_sex" name="report_type" value="1">色情</label>
                    <label><input type="radio" class="report_type" id="report_Politics" name="report_type" value="2">政治</label>
                    <label><input type="radio" class="report_type" id="report_copy" name="report_type" value="3">抄袭</label>
                    <label><input type="radio" class="report_type" id="report_ad" name="report_type" value="4">广告</label>
                    <label><input type="radio" class="report_type" id="report_want" name="report_type" value="5">招聘</label>
                    <label><input type="radio" class="report_type" id="report_call" name="report_type" value="6">骂人</label>
                    <br>
                    <label><input type="radio" class="report_type" id="report_other" name="report_type" value="7">其他</label>
                    <input type="text" name="report_other_content" id="report_other_content" maxlength="30" style="display: none;">
                </td>
            </tr>
            <tr id="panel_originalurl" style="display: none;">
                <th>原文地址：</th>
                <td>
                    <input id="originalurl" value="http://" name="originalurl" type="text" style="width: 90%;">
                </td>
            </tr>
            <tr>
                <th id="sp_reason">原因补充：</th>
                <td>
                    <textarea id="report_description" style="width: 300px;" rows="3" name="report_description"></textarea>
                    <p id="sp_n" style="color:#999;margin:0px;padding:0px;">(最多只允许输入30个字)</p>
                </td>
            </tr>
            <tr>
                <td></td>
                <td>
                    <input id="btnSubmitReport" name="submit" type="image" align="middle" class="btn_1" src="http://static.blog.csdn.net/images/btn_submit.jpg">
                    <span style="padding-left:20px;"></span>
                    <img id="btnCloseReportDialog" src="http://static.blog.csdn.net/images/btn_cancel.jpg" align="middle">
                    <div id="error" style="color: Red">
                    </div>
                </td>
            </tr>
            </tbody></table>
    </form>
</div>
    <script language="javascript" type="text/javascript">
        var isComment=0;
        //显示隐藏地址
        $(function () {
            if(isComment){
                $("#report_description").attr("disabled",true);
                $("#sp_n").hide();
                $("#sp_reason").html("评论内容：");
            }
            $(".report_type").click(function () {
                $("#panel_originalurl,#report_other_content").hide();
                switch ($(this).val()) {
                    case '3':
                        $("#panel_originalurl").show();
                        $("#originalurl").focus();
                        break;
                    case '7':
                        if(isComment){
                            $("#report_other_content").show().focus();
                        }
                        break;
                }

            });

            $("#frmReport").submit(function () {
                if (!currentUserName) {

                    if (confirm("您的操作必须登录，是否登录？")) {
                        location.href = "http://passport.csdn.net/account/login?from=" + encodeURIComponent(location.href);
                        return false;
                    }
                    return false;
                }

                var reportType = $("input[name=report_type]:checked").val();
                if(!reportType){
                    alert("请选择举报原因！");
                    return false;
                }
                var otherInfo = "";
                switch (reportType) {
                    case '3':
                        otherInfo = $("#originalurl").val();
                        if (otherInfo == ""||otherInfo=="http://") {
                            alert("举报抄袭必须提供原创文章地址！");
                            $("#originalurl").focus();
                            return false;
                        } else if(!checkeURL(otherInfo)) {
                            alert("请输入正确的原创文章地址！");
                            $("#originalurl").focus();
                            return false;
                        }
                        break;
                    case '7':
                        otherInfo = $("#report_other_content").val();
                        if (isComment && !otherInfo) {
                            alert("请填写举报的具体原因！");
                            $("#report_other_content").focus();
                            return false;
                        }
                        if(!isComment){
                            if(!$("#report_description").val()){
                                alert("请填写举报的具体原因！");
                                $("#report_description").focus();
                                return false;
                            }
                        }
                        break;
                }
                if(!isComment){
                    if($("#report_description").val().length>30){
                        alert("举报原因最多只允许输入30个字！");
                        return false;
                    }
                }

                var data = {
                    articleId: 76583070,
                    commentId: 0,
                    reportType: reportType,
                    originalurl: $("#originalurl").val(),
                    report_other_content: $("#report_other_content").val(),
                    report_description: $("#report_description").val(),
                    currentUserName: currentUserName,
                    updatetime: "2017/8/8 16:54:12",
                    blogUser: "raintungli"
                };
                if(!isComment){//如果是举报文章
                    data.report_other_content = data.report_description;
                    data.report_description = "1. 神经网络这是一个常见的神经网络的图：这是一个常见的三层神经网络的基本构成，Layer L1是输入层，Layer L2是隐含层";
                }

                $.post(blog_address + "/common/report?id=76583070&t=2", data, function (data) {
                    if (data.result == 1){
                        SetError("感谢您的举报，我们会尽快审核！");
                    }else{
                        if (data.content) alert(data.content);
                    }

                });
                return false;
            });

            $("#btnCloseReportDialog").click(function () {
                CloseDiv();
            });

        });

        //提示后关闭方法
        function SetError(error) {
            $("#btnCloseReportDialog").trigger("click");
            alert(error);
            CloseDiv();
        }

        //关闭方法
        function CloseDiv() {

            $.removeMask();
            $("#report_dialog").hide().html("");
            return false;
        }

        //验证url
        function checkeURL(url){
            return /^http(s)?:\/\/([\w-]+\.)+[\w-]+/i.test(url);
        }
    </script>
</div>

<script src="http://c.csdnimg.cn/public/common/libs/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/public/res/bower-libs/MathJax/MathJax.js?config=TeX-AMS_HTML"></script>
<script type="text/javascript" src="http://passport.csdn.net/content/loginbox/login.js"></script>

<script type="text/javascript" src="http://static.blog.csdn.net/Skin/skin3-template/js/blog_ver.js?v=3"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/Skin/skin3-template/js/skin2017.js?v=2017.032"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/cnick.js"></script>
<script>window._bd_share_config = { "common": { "bdSnsKey": {}, "bdText": "", "bdMini": "1", "bdMiniList": false, "bdPic": "", "bdStyle": "0", "bdSize": "16" }, "share": {} }; with (document) 0[(getElementsByTagName('head')[0] || body).appendChild(createElement('script')).src = 'http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion=' + ~(-new Date() / 36e5)];</script>
<script type="text/javascript" >
    if($(".article_collect li").length==1){$(".article_collect").hide();}
    if($(".article_tags li").length==1){$(".article_tags").hide();}
    $(".edit a").attr("href","http://write.blog.csdn.net/postedit/"+fileName);
    $.each($(".edu_li a"),function(){$(this).attr("href",$(this).attr("href").replace("blog7","blog9"))});
    new CNick('#uid').showNickname();
if($("#fan").html()=="")
{
$("#fan").html(0);	
}
</script>
</body>

<script  type="text/javascript">
    var fromjs=$("#fromjs");
    if(fromjs.length>0)
    {                  
        $("#fromjs .markdown_views pre").addClass("prettyprint");       
        prettyPrint();

        $('pre.prettyprint code').each(function () {
            var lines = $(this).text().split('\n').length;
            var $numbering = $('<ul/>').addClass('pre-numbering').hide();
            $(this).addClass('has-numbering').parent().append($numbering);
            for (i = 1; i <= lines; i++) {
                $numbering.append($('<li/>').text(i));
            };
            $numbering.fadeIn(1700);
        });

        $('.pre-numbering li').css("color","#999");             
    }

    $(function(){
        setTimeout(function(){
            $(".math").each(function(index,value){$(this).find("span").last().css("color","#fff"); })
        },500);         
       

    });

    setTimeout(function () {
        $(".toc a[target='_blank']").attr("target", "");
    }, 500);

</script>
</html>

