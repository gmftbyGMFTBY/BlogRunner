
<!DOCTYPE html>
<html>
<head>
            <link rel="canonical" href="http://blog.csdn.net/ltyqljhwcm/article/details/52081538"/> 

    <script type="text/javascript">
        var username = "ltyqljhwcm";var _blogger = username;var blog_address = "http://blog.csdn.net/ltyqljhwcm";var static_host = "http://static.blog.csdn.net";
        var currentUserName = ""; var fileName = '52081538';var commentscount = 0; var islock = false
        window.quickReplyflag = true;
        var totalFloor=0;
                
                 var isBole = false;
                
                
                 var isDigg = false;
                
          
             var isExpert=false;
          
    </script>

<meta http-equiv="content-type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <script src="http://c.csdnimg.cn/public/common/libs/jquery/jquery-1.9.1.min.js" type="text/javascript"></script>
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/common/libs/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/static/css/avatar.css">
    <link type="text/css" rel="stylesheet" href="http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/default.css" />
    <link rel="stylesheet" href="http://static.blog.csdn.net/Skin/skin3-template/css/style.css?v=2017.032">
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/common/toolbar/content_toolbar_css/content_toolbar.css">

    <script type="text/javascript" src="http://static.blog.csdn.net/Skin/skin3-template/fonts/iconfont.js"></script>
    <script src="//csdnimg.cn/rabbit/exposure-click/main.js?v1.15.23"></script>
    <script type="text/javascript" src="http://c.csdnimg.cn/pubfooter/js/tracking_for_recommend.js?v=0911" charset="utf-8"></script>
    <script type="text/javascript" src="http://csdnimg.cn/pubfooter/js/tracking.js" charset="utf-8"></script>
    <script type="text/javascript" src="http://static.blog.csdn.net/scripts/cnick.js" charset="utf-8"></script>
 
    <link rel="stylesheet" href="http://static.blog.csdn.net/code/prettify.css" />
    <script type="text/javascript" src="http://static.blog.csdn.net/code/prettify.js"></script>
<script src="http://dup.baidustatic.com/js/ds.js"></script>
    <script type="text/javascript">

        // Traffic Stats of the entire Web site By baidu
        var _hmt = _hmt || [];
        (function() {
            var hm = document.createElement("script");
            hm.src = "https://hm.baidu.com/hm.js?6bcd52f51e9b3dce32bec4a3997715ac";
            var s = document.getElementsByTagName("script")[0];
            s.parentNode.insertBefore(hm, s);
        })();
        // Traffic Stats of the entire Web site By baidu end



    </script>
    <meta name="description" content="二叉查找树BST总结分析
1.ADT（抽象数据类型）
ADT BST
{
&#160; &#160; &#160; &#160;&#160; 数据元素：数据节点（键值，位置信息）
数据关系：父子关系
基本操作：
插入节点
查找节点
删除节点
遍历节点（前中后层序）
}
2.二叉查找树性质：（不存在相同键值的节点）
1.空树
2.非空树并且左子树所有节点的键值均小于本节点的键值
&#160; &#160; 
&#160;&#160; 右子树所有的节点的键值" />
    <meta name="keywords" content="数据,adt" />
    <meta http-equiv="Cache-Control" content="no-siteapp" /><link rel="alternate" media="handheld" href="#" />
    <meta name="shenma-site-verification" content="5a59773ab8077d4a62bf469ab966a63b_1497598848">


    <title>二叉查找树BST总结 - CSDN博客</title>
</head>
<body>
<script id="toolbar-tpl-scriptId" prod="download" skin="black" src="http://c.csdnimg.cn/public/common/toolbar/js/content_toolbar.js" type="text/javascript" domain="http://blog.csdn.net"></script>

<div class="container clearfix">
    <main>
        <article>
            <h1 class="csdn_top">二叉查找树BST总结</h1>
            <div class="article_bar clearfix">
                <div class="artical_tag">
                    <span class="original">原创</span>
                    <span class="time">2016年07月31日 22:59:16</span>
                </div>
				<ul class="article_tags clearfix csdn-tracking-statistics" data-mod="popu_377">
					<li class="tit">标签：</li>
					
					<li><a href="http://so.csdn.net/so/search/s.do?q=数据&t=blog" target="_blank">数据</a> <span>/</span></li>
					
					<li><a href="http://so.csdn.net/so/search/s.do?q=adt&t=blog" target="_blank">adt</a> <span>/</span></li>
					
					<li><a href="http://so.csdn.net/so/search/s.do?q=class&t=blog" target="_blank">class</a> <span>/</span></li>
					
					<li><a href="http://so.csdn.net/so/search/s.do?q=数据结构&t=blog" target="_blank">数据结构</a> <span>/</span></li>
					
					<li><a href="http://so.csdn.net/so/search/s.do?q=算法&t=blog" target="_blank">算法</a> <span>/</span></li>
					
				</ul>
                <ul class="right_bar">
                    <li><button class="btn-noborder"><i class="icon iconfont icon-read"></i><span class="txt">1380</span></button></li>
                    <!--<li><button class="btn-noborder"><i class="icon iconfont icon-dashang-"></i><span class="txt">0</span></button></li>-->

                    <li class="edit">
                        <a class="btn-noborder" href="" >
                            <i class="icon iconfont icon-bianji"></i><span class="txt">编辑</span>
                        </a>
                    </li>
                    <li class="del">
                        <a class="btn-noborder" onclick="javascript:deleteArticle(fileName);return false;">
                            <i class="icon iconfont icon-shanchu"></i><span class="txt">删除</span>
                        </a>
                    </li>
                </ul>
            </div>
            <div id="article_content" class="article_content csdn-tracking-statistics" data-mod="popu_307" data-dsm="post">
                
<h1>二叉查找树BST总结分析</h1>
<h2>1.ADT（抽象数据类型）</h2>
<div><span style="white-space:pre"></span>ADT BST</div>
<div><span style="white-space:pre"></span>{</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span style="white-space:pre"> </span>数据元素：数据节点（键&#20540;，位置信息）</div>
<div><span style="white-space:pre"></span>数据关系：父子关系</div>
<div><span style="white-space:pre"></span>基本操作：</div>
<div><span style="white-space:pre"></span>插入节点</div>
<div><span style="white-space:pre"></span>查找节点</div>
<div><span style="white-space:pre"></span>删除节点</div>
<div><span style="white-space:pre"></span>遍历节点（前中后层序）</div>
<div><span style="white-space:pre"></span>}</div>
<h2>2.二叉查找树性质：（不存在相同键&#20540;的节点）</h2>
<div><span style="white-space:pre"></span>1.空树</div>
<div><span style="white-space:pre"></span>2.非空树并且左子树所有节点的键&#20540;均小于本节点的键&#20540;</div>
<div><span style="white-space:pre"></span>&nbsp; &nbsp;<span style="white-space:pre"> </span>
&nbsp;&nbsp;<span style="white-space:pre"> </span>右子树所有的节点的键&#20540;均大于本节点的键&#20540;</div>
<div><span style="white-space:pre"></span>该节点的左右子树均为二叉查找树</div>
<h2>3.二叉查找树的核心操作复杂度分析：</h2>
<div><span style="font-family:'microsoft yahei'; font-size:14px; line-height:1.25; white-space:pre">T( n ) = T( n/2 ) &#43; O( 1 )&nbsp;</span><span style="white-space:pre"></span>
<p style="margin-top:0px; margin-bottom:1.1em; padding-top:0px; padding-bottom:0px; line-height:1.25; font-family:'microsoft yahei'; font-size:14px">
T( n ) = T( n/4 ) &#43; 2 O( 1 )&nbsp;<br style="">
T( n ) = T( n/8 ) &#43; 3 O( 1 )&nbsp;<br style="">
…&nbsp;<br style="">
…[共 logN 次]&nbsp;<br style="">
…&nbsp;<br style="">
T( n ) = T( 1 ) &#43; logN·O( 1 )</p>
<p style="margin-top:0px; margin-bottom:0px; padding-top:0px; padding-bottom:0px; line-height:1.25; font-family:'microsoft yahei'; font-size:14px">
T( n ) = O(logN)</p>
<h2>4.二叉查找树的基本操作分析：</h2>
<h3><span></span>1.插入节点：</h3>
<div><span></span>插入节点的核心在于查找到当前的节点的父亲节点，对于空树来说，插入的节点直接充当根节点</div>
<div><span></span>对于非空树来说，操作步骤如下：（c节点代表当前访问到的的节点的位置，p节点代表带插入的节点，n代表待插入节点的父节点）</div>
<div><span></span>1.c节点为空，那么n即为c节点的父亲节点，此时我们要进行大小比较少，如果p节点的键&#20540;比n节点的键&#20540;小，那么p作为n的左孩子否则作为右孩子</div>
<div><span></span>2.否则，比较p节点的键&#20540;与c节点的键&#20540;</div>
<div><span></span>3.如果键&#20540;相同，说明用户正在试图插入一个已经存在的节点，此时根据情况，我们可以抛出异常或者我们提醒用户</div>
<div><span></span>4.如果p节点的键&#20540;比c节点的键&#20540;要小，说明p节点应该存在于c节点的左子树中，此时，n节点为c节点，我们将c转移到左孩子上，跳转到操作1</div>
<div><span></span>5.否则，跳转到右孩子上，然后执行操作1</div>
<div><br>
</div>
<h3><span></span>2.查找节点：</h3>
<div><span></span>查找节点的操作和插入节点的操作大致是相同的，复杂度都是logN：（k代表待查找的键&#20540;，c代表当前的节点（初始为根节点））</div>
<div><span></span>1.如果k等于c的键&#20540;，说明该节点我们已经查找到了，返回查找到的地址就好</div>
<div><span></span>2.如果c节点为空，说明该节点查找失败，该节点不存在，返回NULL即可</div>
<div><span></span>3.否则，我们进行判断，如果k的键&#20540;相对较小，说明待查找的节点要么不存在要么就在左子树中，我们将c跳转到左子树中，执行操作1</div>
<div><span></span>4.否则，说明待查找的节点要么不存在，要么就存在在右子树中，我们将c跳转到右孩子中，执行操作1</div>
<div><span></span></div>
<h3><span></span>3.遍历结点：（前中后层序遍历二叉树是一样的）</h3>
<h3><span></span>4.删除节点：</h3>
<div><span><span style="font-size:13.3333px"></span></span>
<p style="margin:10px auto; padding-top:0px; padding-bottom:0px; font-size:16px; font-family:Helvetica,'Microsoft Yahei',Verdana,Arial,sans-serif">
从 BST 中删除节点比插入节点难度更大。因为删除一个非叶子节点，就必须选择其他节点来填补因删除节点所造成的树的断裂。如果不选择节点来填补这个断裂，那么就违背了 BST 的性质要求。</p>
<p style="margin:10px auto; padding-top:0px; padding-bottom:0px; font-size:16px; font-family:Helvetica,'Microsoft Yahei',Verdana,Arial,sans-serif">
删除节点算法的第一步是定位要被删除的节点，这可以使用前面介绍的查找算法，因此运行时间为 O(log­<sub style="margin:0px; padding:0px">2</sub>n)。接着应该选择合适的节点来代替删除节点的位置，它共有三种情况需要考虑。</p>
<ul style="margin:6px 0px 0px 50px; padding:0px; line-height:25px; font-family:Helvetica,'Microsoft Yahei',Verdana,Arial,sans-serif; font-size:13.92px">
<li style="margin:0px; padding:0px; list-style:disc; font-size:16px"><span style="margin:0px; padding:0px">情况 1：</span>如果删除的节点没有右孩子，那么就选择它的左孩子来代替原来的节点。二叉查找树的性质保证了被删除节点的左子树必然符合二叉查找树的性质。因此左子树的&#20540;要么都大于，要么都小于被删除节点的父节点的&#20540;，这取决于被删除节点是左孩子还是右孩子。因此用被删除节点的左子树来替代被删除节点，是完全符合二叉搜索树的性质的。</li><li style="margin:0px; padding:0px; list-style:disc; font-size:16px"><span style="margin:0px; padding:0px">情况 2：</span>如果被删除节点的右孩子没有左孩子，那么这个右孩子被用来替换被删除节点。因为被删除节点的右孩子都大于被删除节点左子树的所有节点，同时也大于或小于被删除节点的父节点，这同样取决于被删除节点是左孩子还是右孩子。因此，用右孩子来替换被删除节点，符合二叉查找树的性质。</li><li style="margin:0px; padding:0px; list-style:disc; font-size:16px"><span style="margin:0px; padding:0px">情况 3：</span>如果被删除节点的右孩子有左孩子，就需要用被删除节点右孩子的左子树中的最下面的节点来替换它，就是说，我们用被删除节点的右子树中最小&#20540;的节点来替换。</li></ul>
<p style="margin:10px auto; padding-top:0px; padding-bottom:0px; font-size:16px; font-family:Helvetica,'Microsoft Yahei',Verdana,Arial,sans-serif">
<img src="http://images.cnitblog.com/i/175043/201406/291214353511360.gif" alt="" style="max-width:800px; margin:0px auto; padding:0px; border:0px; display:block"><br style="margin:0px; padding:0px">
我们知道，在 BST 中，最小&#20540;的节点总是在最左边，最大&#20540;的节点总是在最右边。因此替换被删除节点右子树中最小的一个节点，就保证了该节点一定大于被删除节点左子树的所有节点。同时，也保证它替代了被删除节点的位置后，它的右子树的所有节点&#20540;都大于它。因此这种选择策略符合二叉查找树的性质。</p>
<p style="margin:10px auto; padding-top:0px; padding-bottom:0px; font-size:16px; font-family:Helvetica,'Microsoft Yahei',Verdana,Arial,sans-serif">
和查找、插入算法类&#20284;，<span style="margin:0px; padding:0px">删除算法的运行时间也与 BST 的拓扑结构有关，最佳情况是&nbsp;O(log­<sub style="margin:0px; padding:0px">2</sub>n)，而最坏情况是&nbsp;O(n)。</span></p>
<h2><span style="margin:0px; padding:0px">5.C&#43;&#43;类封装（代码示例）:</span></h2>
<div style="font-size:13.3333px"><span style="margin:0px; padding:0px"></span><pre code_snippet_id="1797958" snippet_file_name="blog_20160731_1_5784966"  name="code" class="cpp">#include&quot;iostream&quot;
#include&quot;cstdio&quot;
#include&quot;cstring&quot;
#include&quot;cstdlib&quot;

using namespace std;

typedef struct node
{
	int key;
	struct node* left;
	struct node* right;
}point;

class errorsame
{
}; 

class bst
{
	public:
		bst()
		{
			root=NULL;
			num=0;
		}
		~bst()
		{
			clear(root);
		}
		void add(int);
		void del(int);
		point* find(int);
		void clear(point*);
		void preorder(point*);
		void midorder(point*);
		void aftorder(point*);
		void rankorder();
		point* returnroot() 
		{
			return root;
		}
	private:
		point* root;
		int num;
};

void bst::clear(point* p)
{
	if(p==NULL) return ;
	else
	{
		clear(p-&gt;left);
		clear(p-&gt;right);
		free(p);
	}
}

void bst::add(int p)
{
	if(num==0) 
	{
		root=new point;
		root-&gt;right=root-&gt;left=NULL;
		root-&gt;key=p;
		num++;
		return ;
	}
	else
	{
		try
		{
			point *k=root;
			point* w=root;
		    while(w!=NULL)
		    {
	     		if(w-&gt;key==p) throw errorsame();
	     		else
	     		{
	     			if(w-&gt;key&gt;p) w=w-&gt;left;
	     			else w=w-&gt;right;
	     		}
	     		if(w!=NULL) k=w;
		    }
		    if(k-&gt;key&gt;p) 
		    {
		    	point *a=new point();
		    	a-&gt;left=a-&gt;right=NULL;a-&gt;key=p;
		    	k-&gt;left=a;
		    }
		    else
		    {
		    	point *a=new point();
		    	a-&gt;left=a-&gt;right=NULL;a-&gt;key=p;
		    	k-&gt;right=a;
		    }
		    num++;
		}
		catch(errorsame e)
		{
			cout&lt;&lt;&quot;try to add the same point in the tree!&quot;&lt;&lt;endl;
		}
	}
}

void bst::del(int p)
{
	point* now=root;
	point* father=NULL;
	while(now-&gt;key!=p)
	{
		if(now-&gt;key&gt;p)
		{
			father=now;
			now=now-&gt;left;
		}
		else
		{
			father=now;
			now=now-&gt;right;
		}
		if(now==NULL) 
		{
			cout&lt;&lt;&quot;can not find the point!&quot;&lt;&lt;endl;
			return ;
		}
	}
	if(father==NULL) 
	{
		point* help=root;
		if(root-&gt;right==NULL) root=root-&gt;left;
		else
		{
			if(root-&gt;right-&gt;left==NULL) 
			{
				root-&gt;right-&gt;left=root-&gt;left;
				root=root-&gt;right;
			} 
			else
			{
				point* z=NULL;
				point* k=root-&gt;right;
				point* w=root;
				while(k-&gt;left!=NULL) 
				{
					if(k-&gt;left-&gt;left==NULL) z=k; 
					k=k-&gt;left;
				}
				z-&gt;left=k-&gt;right;
				k-&gt;left=root-&gt;left;
		    	k-&gt;right=root-&gt;right;
		    	root=k;
			}
		} 
		free(help);
	}
	else if(now-&gt;right==NULL)
	{
		point* help=now;
		if(father-&gt;left==now) father-&gt;left=now-&gt;left;
		else father-&gt;right=now-&gt;left;
		free(help);
	}
	else
	{
		if(now-&gt;right-&gt;left==NULL)
		{
			point* help=now;
			now-&gt;right-&gt;left=now-&gt;left;
			if(father-&gt;left==now) father-&gt;left=now-&gt;right;
			else father-&gt;right=now-&gt;right;
			free(help);
		}
		else
		{
			point* z;
			point* k=now-&gt;right;
			while(k-&gt;left!=NULL) 
			{
				if(k-&gt;left-&gt;left==NULL) z=k;
				k=k-&gt;left;
			} 
			if(father-&gt;left==now)
			{
                z-&gt;left=k-&gt;right;
				father-&gt;left=k;
				k-&gt;left=now-&gt;left;
				k-&gt;right=now-&gt;right;
			}
			else
			{
				z-&gt;left=k-&gt;right;
				father-&gt;right=k;
				k-&gt;left=now-&gt;left;
				k-&gt;right=now-&gt;right;
			}
		}
	}
}

point* bst::find(int p)
{
	point* a=root;
	while(a!=NULL)
	{
		if(a-&gt;key==p) return a; 
		if(a-&gt;key&gt;p) a=a-&gt;left;
		else a=a-&gt;right;
	}
} 

void bst::preorder(point* p)
{
	if(p==NULL) return ;
	else
	{
		printf(&quot;%d &quot;,p-&gt;key);
		preorder(p-&gt;left);
		preorder(p-&gt;right);
	}
}

void bst::midorder(point* p)
{
	if(p==NULL) return ;
	else
	{
		midorder(p-&gt;left);
		printf(&quot;%d &quot;,p-&gt;key);
		midorder(p-&gt;right);
	}
}

void bst::aftorder(point* p)
{
	if(p==NULL) return ;
	else
	{
		aftorder(p-&gt;left);
		aftorder(p-&gt;right);
		printf(&quot;%d &quot;,p-&gt;key);
	}
}

void bst::rankorder()
{
	point* queue[100];
	int head=1;
	int tail=2;
	queue[1]=root;
	while(head!=tail)
	{
		if(queue[head]-&gt;left!=NULL) queue[tail++]=queue[head]-&gt;left;
		if(queue[head]-&gt;right!=NULL) queue[tail++]=queue[head]-&gt;right;
		head++;
	}
	for(int i=1;i&lt;=tail-1;i++) printf(&quot;%d &quot;,queue[i]-&gt;key);
}

int main()
{
	bst my;
	my.add(1);
	my.add(15);
	my.add(7);
	my.add(5);
	my.add(11);
	my.add(2);
	my.add(9);
	my.preorder(my.returnroot());
	cout&lt;&lt;endl;
	my.midorder(my.returnroot());
	cout&lt;&lt;endl;
	my.aftorder(my.returnroot());
	cout&lt;&lt;endl;
	my.rankorder();
	cout&lt;&lt;endl;
	cout&lt;&lt;my.find(7)-&gt;key&lt;&lt;endl;
	my.del(1);
	my.preorder(my.returnroot());
	return 0;
} </pre><br>
<br>
</div>
<h2><span style="margin:0px; padding:0px">6.效率低下的原因：</span></h2>
<div style="font-size:13.3333px"><span style="margin:0px; padding:0px"><span></span>因为作为二叉查找树，根据输入的顺序的不同，最终构造的二叉查找树的拓扑状态是不一样的，所以我们有可能最后构造出来的二叉查找树是类&#20284;于一个链表，所以我们的查找的效率会大大的降低，不会打到我们期望的logN的水平，会不断的趋近于n发展，所以说我们需要对BST进行一种优化，即将引出SBT自平衡二叉树。</span></div>
<div style="font-size:13.3333px"><span style="margin:0px; padding:0px"><br>
</span></div>
<h2><span style="margin:0px; padding:0px">7.遗留问题：</span></h2>
<div style="font-size:13.3333px"><span style="margin:0px; padding:0px"><span></span>1.二叉查找树在退化线性结构的时候，复杂度的计算目前尚且不熟练</span></div>
<div style="font-size:13.3333px"><span style="margin:0px; padding:0px"><span></span>2.二分法和二叉链表的核心区别</span></div>
<div style="font-size:13.3333px"><span></span>3.为什么说遍历儿茶查找树的效率相对来说会低于线性结构的数据结构，是因为访问点回溯的原因吗</div>
<div style="font-size:13.3333px"><br>
</div>
<h2>8.参考文献：</h2>
<div style="font-size:13.3333px"><a target="_blank" href="http://http//www.cnblogs.com/gaochundong/p/binary_search_tree.html">Scale-out Thinking的博客</a><br>
</div>
<div style="font-size:13.3333px"><a target="_blank" href="http://http//bbs.csdn.net/topics/50383955">CSDN论坛</a><br>
</div>
<div style="font-size:13.3333px"><a target="_blank" href="http://http//blog.csdn.net/qilei2010/article/details/51345278">递推式的复杂度分析</a><br>
</div>
<div style="font-size:13.3333px"><a target="_blank" href="http://http//blog.csdn.net/npy_lp/article/details/7426431">tanglinux的博客</a><br>
</div>
<div><br>
</div>
</div>
</div>
<link rel="stylesheet" href="http://static.blog.csdn.net/public/res-min/markdown_views.css?v=2.0" />
            </div>
        </article>
        <div class="readall_box csdn-tracking-statistics" data-mod="popu_376">
			<div class="read_more_mask"></div>
            <a class="btn btn-large btn-gray-fred read_more_btn" target="_self">阅读全文</a>
        </div>
        <div class="article_copyright">
            版权声明：本文为博主原创文章，未经博主允许不得转载。
        </div>
        <!--  <div class="reward_box">
            <div class="tit">
              <button class="btn_reward"><i class="icon iconfont icon-dashang-"></i></button>
            </div>
            <dl class="clearfix">
              <dt><a href="#" target="_blank">近期打赏</a></dt>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
            </dl>
          </div>-->

        <ul class="article_collect clearfix csdn-tracking-statistics"  data-mod="popu_378">
            <li class="tit">本文已收录于以下专栏：</li>
            
            <li><a href="http://blog.csdn.net/column/details/12704.html" target="_blank">算法与数据结构</a></li>
            
        </ul>
        <div class="comment_box clearfix">
            <div id="comment_form">
                <div id="commentsbmitarear">
                    <!-- <h6><span>0</span>条评论</h6> -->
           <!--          <dl class="clearfix" id="commentbox">
                        <dt>
                            <a href="http://my.csdn.net/"><img src="" ></a>
                        </dt>
                        <dd>
                            <a href="http://my.csdn.net/" target="_blank"></a>
                        </dd>
                        <dd class="txt_tip"><span id="tip_comment" class="tip"></span></dd>
                    </dl> -->
                    <div class="comment_area clearfix">
						<div class="userimg"><a href="http://my.csdn.net/"><img src=""></a></div>
                        <form action="/ltyqljhwcm/comment/submit?id=52081538" method="post" onsubmit="return subform(this);" id="commentform">
                            <textarea class="comment_content" name="comment_content" id="comment_content" placeholder="发表你的评论"></textarea>
                            <div class="bot_bar clearfix">
                                <div id="ubbtools" class="add_code">
                                    <a href="#insertcode" code="code" target="_self"><i class="icon iconfont icon-daima"></i></a>
                                </div>

                                <input type="hidden" id="comment_replyId" name="comment_replyId">
                                <input type="hidden" id="comment_userId" name="comment_userId" value="">
                                <input type="hidden" id="commentId" name="commentId" value="">
                                <input type="submit" class="btn btn-redborder" value="发表评论">
								<span id="tip_comment" class="tip">
                                <div style="display: none;" class="csdn-tracking-statistics" data-mod="popu_384"><a href="#" target="_blank" class="comment_area_btn">发表评论</a></div>

                                <div id="lang_list" code="code">
                                    <a href="#html" style="width:95px;" class="long_name" target="_self">HTML/XML</a>
                                    <a href="#objc" style="width:95px;" class="long_name" target="_self">objective-c</a>
                                    <a href="#delphi" style="width:58px;" class="zhong_name" target="_self">Delphi</a>
                                    <a href="#ruby" class="zhong_name" target="_self">Ruby</a>
                                    <a href="#php" target="_self">PHP</a>
                                    <a href="#csharp" class="duan_name" target="_self">C#</a>
                                    <a style=" border-right: none;" href="#cpp" class="duan_name" target="_self">C++</a>
                                    <a style=" border-bottom:none;width:95px;" href="#javascript" class="long_name" target="_self">JavaScript</a>
                                    <a style=" border-bottom:none;width:95px;" href="#vb" class="long_name" target="_self">Visual Basic</a>
                                    <a style=" border-bottom:none;" href="#python" class="zhong_name" target="_self">Python</a>
                                    <a style=" border-bottom:none;" href="#java" class="zhong_name" target="_self">Java</a>
                                    <a style="border-bottom:none;" href="#css" class="duan_name" target="_self">CSS</a>
                                    <a style="border-bottom:none;" href="#sql" class="duan_name" target="_self">SQL</a>
                                    <a style="border:none; " href="#plain" class="duan_name" target="_self">其它</a>
                                    <span class="arrb"></span>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="comment_li_outbox">
            <div id="comment_list"></div>
        </div>

        <div class="more_comment">
            <div id="comment_bar" class="trackgin-ad" data-mod="popu_385"></div>
        </div>

        <h3 class="recommend_tit">相关文章推荐</h3>
        <div class="recommend_list clearfix">
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/qq_27687701/article/details/53179041"  target="_blank" strategy="BlogCommendFromBaidu_0">二叉排序树中查找效率最高的是</a></h2>
                    <div class="summary">
                        二叉排序树中查找效率最高的是平衡二叉树
二叉查找数的查找速度取决于树的深度 相同节点数深度最小的是平衡二叉树
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/qq_27687701" target="_blank" strategy="BlogCommendFromBaidu_0"><img src="http://avatar.csdn.net/C/F/4/2_qq_27687701.jpg" alt="qq_27687701" title="qq_27687701"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/qq_27687701">qq_27687701</a></li>
                        <li class="time">2016-11-15 22:38</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>1058</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/stpeace/article/details/9067029"  target="_blank" strategy="BlogCommendFromBaidu_1">二叉排序树（BST）/二叉查找树的建立(BST是笔试面试的常客)</a></h2>
                    <div class="summary">
                        二叉排序树又叫二叉查找树，英文名称是：Binary Sort Tree. &#160;BST的定义就不详细说了，我用一句话概括：左 。 根据这个原理，我们可以推断：BST的中序遍历必定是严格递增的。
&#160; &#160; &#160;...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/stpeace" target="_blank" strategy="BlogCommendFromBaidu_1"><img src="http://avatar.csdn.net/8/D/5/2_stpeace.jpg" alt="stpeace" title="stpeace"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/stpeace">stpeace</a></li>
                        <li class="time">2013-06-09 19:49</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>50947</span></li>
                    </ul>
                </dd>
            </dl>
            
            <!--dl class="clearfix csdn-tracking-statistics" data-mod="popu_393">
                <dt><a href="http://edu.csdn.net/huiyiCourse/series_detail/64?utm_source=blog10" target="_blank"><img class="maxwidth" src="http://img.blog.csdn.net/20170928113144608" alt="" title=""></a></dt>
                <dd>
                    <div class="summary">
                        <h2><a href='http://edu.csdn.net/topic/python1?utm_source=blog10' target='_blank'>伤心啊！年度热门编程语言排行榜出来了...</a></h2>  <div class="summary">近期，IEEE Spectrum 发布了第四届顶级编程语言交互排行榜。结合 10 个线上数据源的 12 个标准，对 48 种语言进行了排行！此外，七牛云许式伟曾说过Go语言会取代Java...气氛... </div> 
                    </div>
                </dd>
            </dl-->
	<script>
		(function() {
		    var s = "_" + Math.random().toString(36).slice(2);
		    document.write('<div id="' + s + '"></div>');
		    (window.slotbydup=window.slotbydup || []).push({
			id: '4765209',
			container: s,
			size: '808,120',
			display: 'inlay-fix'
		    });
		})();
	</script>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/u013405574/article/details/51058133"  target="_blank" strategy="BlogCommendFromBaidu_2">深入理解二叉搜索树（BST）</a></h2>
                    <div class="summary">
                        一棵二叉搜索树（BST）是以一棵二叉树来组织的，可以用链表数据结构来表示，其中，每一个结点就是一个对象，一般地，包含数据内容key和指向孩子（也可能是父母）的指针属性。如果某个孩子结点不存在，其指针属...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/u013405574" target="_blank" strategy="BlogCommendFromBaidu_2"><img src="http://avatar.csdn.net/5/3/7/2_u013405574.jpg" alt="u013405574" title="u013405574"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/u013405574">u013405574</a></li>
                        <li class="time">2016-04-04 19:57</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>8380</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/u014488381/article/details/41719765"  target="_blank" strategy="BlogCommendFromBaidu_3">BST二叉排序树的查找和删除的完整C代码</a></h2>
                    <div class="summary">
                        二叉排序树的查找算法
假定二叉排序树的根节点指针为root，给定的关键字值为K，则查找算法可描述为：


置初值：p = root ；

如果 key = p -&gt; data ，则查找成功，算法结束；...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/u014488381" target="_blank" strategy="BlogCommendFromBaidu_3"><img src="http://avatar.csdn.net/4/1/D/2_u014488381.jpg" alt="u014488381" title="u014488381"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/u014488381">u014488381</a></li>
                        <li class="time">2014-12-04 10:37</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>1792</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/sheepmu/article/details/38407221"  target="_blank" strategy="BlogCommendFromBaidu_4">二叉查找树BST----java实现</a></h2>
                    <div class="summary">
                        二叉查找树BST----java实现
1.二叉查找树简介
二叉查找树又名二叉搜索树和二叉排序树。性质如下：
&#160;
在二叉查找树中：
(01) 若任意节点的左子树不空，则左子树上所有结点的值均小于它的根结...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/u010093630" target="_blank" strategy="BlogCommendFromBaidu_4"><img src="http://avatar.csdn.net/B/A/7/2_u010093630.jpg" alt="u010093630" title="u010093630"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/u010093630">u010093630</a></li>
                        <li class="time">2014-08-07 01:02</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>5098</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/chenchaofuck1/article/details/51298997"  target="_blank" strategy="BlogCommendFromBaidu_5">常用树类数据结构总结-二叉查找树(BST)，平衡二叉查找树(AVL)，红黑树(RBT)，B~/B+树(B-tree）的性能分析</a></h2>
                    <div class="summary">
                        http://www.iteye.com/topic/614070


此少侠总结的特棒，直接收藏了。

我们这个专题介绍的动态查找树主要有： 二叉查找树(BST)，平衡二叉查找树(AVL)...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/chenchaofuck1" target="_blank" strategy="BlogCommendFromBaidu_5"><img src="http://avatar.csdn.net/D/3/B/2_chenchaofuck1.jpg" alt="chenchaofuck1" title="chenchaofuck1"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/chenchaofuck1">chenchaofuck1</a></li>
                        <li class="time">2016-05-02 23:17</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>792</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics downloadElement" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
               	<dt><a href="http://download.csdn.net/detail/qq_31120499/9351499" target="_blank" strategy="BlogCommendFromCsdn_6"><img class="maxwidth" src="http://download.csdn.net/images/minetype/zip.svg" alt="" title=""></a></dt>
		<dd>
			<div class="summary">
				<h2><a href="http://download.csdn.net/detail/qq_31120499/9351499" target="_blank" strategy="BlogCommendFromCsdn_6">二叉查找树BST</a></h2>
				<div class="summary">
				  <ul>
					  <li class="time">2015-12-13 15:34</li>
					  <li class="visited_num fileSize">357KB</li>
					  <li class="download_btn"><a href="http://download.csdn.net/detail/qq_31120499/9351499">下载</a></li>
				  </ul>
				</div> 
			</div>
		</dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics downloadElement" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
               	<dt><a href="http://download.csdn.net/detail/baihacker/5671975" target="_blank" strategy="BlogCommendFromCsdn_7"><img class="maxwidth" src="http://download.csdn.net/images/minetype/zip.svg" alt="" title=""></a></dt>
		<dd>
			<div class="summary">
				<h2><a href="http://download.csdn.net/detail/baihacker/5671975" target="_blank" strategy="BlogCommendFromCsdn_7">二叉查找树代码（avl,bst,rbt,sbt,splay,treap树）</a></h2>
				<div class="summary">
				  <ul>
					  <li class="time">2013-06-29 21:25</li>
					  <li class="visited_num fileSize">22KB</li>
					  <li class="download_btn"><a href="http://download.csdn.net/detail/baihacker/5671975">下载</a></li>
				  </ul>
				</div> 
			</div>
		</dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/xiaoguobaf/article/details/52104840"  target="_blank" strategy="BlogCommendFromCsdn_8">二叉查找树（BST）</a></h2>
                    <div class="summary">
                        前言二叉查找树是一棵二叉树，如果用来构造符号表的话，那么每个节点含有一个键值对，对于每个节点，其键大于其左子树中所有节点的键，且小于其右子树中所有节点的键，如果中序遍历二叉查找树并打印其键，那么键将按...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/xiaoguobaf" target="_blank" strategy="BlogCommendFromCsdn_8"><img src="http://avatar.csdn.net/F/1/C/2_xiaoguobaf.jpg" alt="xiaoguobaf" title="xiaoguobaf"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/xiaoguobaf">xiaoguobaf</a></li>
                        <li class="time">2016-08-03 16:25</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>224</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/chengmaoning/article/details/10516267"  target="_blank" strategy="BlogCommendFromCsdn_9">判断整数序列是不是二叉查找树(BST)的后序遍历结果</a></h2>
                    <div class="summary">
                        这里沿用传统二叉查找树(BST)的概念：所有左子树都小于根，右子树都大于根。(不止是直接孩子，还有间接孩子！)
现在给出一个整数序列，要求判断它是否是一棵二叉查找树BST的后序遍历结果。
如果去掉BS...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/chengmaoning" target="_blank" strategy="BlogCommendFromCsdn_9"><img src="http://avatar.csdn.net/9/2/4/2_chengmaoning.jpg" alt="chengmaoning" title="chengmaoning"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/chengmaoning">chengmaoning</a></li>
                        <li class="time">2013-08-29 14:42</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>489</span></li>
                    </ul>
                </dd>
            </dl>
            

	   

            

            
        </div>
    </main>
    <aside>
        <div class="right_box user_info">
            <dl class="inf_bar clearfix">
                <dt class="csdn-tracking-statistics" data-mod="popu_381">
                    <a href="http://blog.csdn.net/ltyqljhwcm" target="_blank">
                        <img src="http://avatar.csdn.net/A/7/0/1_ltyqljhwcm.jpg" class="avatar_pic">
                    </a>
                    <span class="medals" title="">
                <svg class="icon" aria-hidden="true">
                    
                </svg>
              </span>
                </dt>
                <dd>
                    <h3 class="csdn-tracking-statistics"  data-mod="popu_380"><a href="http://blog.csdn.net/ltyqljhwcm" target="_blank" id="uid">ltyqljhwcm</a></h3>
                    <span  class="csdn-tracking-statistics" data-mod="popu_379"><a class="btn btn-redborder-small "  id="span_add_follow" target="_self">＋关注</a></span>
                </dd>
            </dl>
            <div class="inf_number_box clearfix">
                <dl>
                    <dt>原创</dt>
                    <dd>219</dd>
                </dl>
                <dl>
                    <dt>粉丝</dt>
                    <dd id='fan'>39</dd>
                </dl>
                <dl>
                    <dt>喜欢</dt>
                    <dd>0</dd>
                </dl>
								 <dl>
              <dt>码云</dt>
              <dd>&nbsp;</dd>
            </dl>

            </div>
	    <div class="writings">
              <div class="public_signal clearfix">
                <h3>他的最新文章</h3>
                <a href="http://blog.csdn.net/ltyqljhwcm" target="_blank" class="more_z"><span>更多文章</span></a>
              </div>
                <ul class="inf_list clearfix csdn-tracking-statistics" data-mod="popu_382">
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53454971" target="_blank">POJ 3295 - 位运算 + 模拟 +递归</a>
                    </li>
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53444306" target="_blank">NYOJ 118 次小生成树</a>
                    </li>
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53434466" target="_blank">胜者树 败者树 K-路最佳归并树 高效外部排序</a>
                    </li>
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53411183" target="_blank">POJ 1062 - 昂贵的聘礼 - 经典题</a>
                    </li>
                    
                </ul>
            </div>
        </div>
        <div class="extension_other csdn-tracking-statistics" data-mod="popu_389">
						<!--u3032528-->
			<div class="flashrecommend">
            <script type="text/javascript" src="http://mpb1.iteye.com/bwocoltlyzdec.js"></script>
		    </div>
        </div>

		<div class="host-column">
          <h3>博主专栏</h3>
          <ul class="column-list">

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/13704.html">
                  <img src="http://img.blog.csdn.net/20161126164008952" alt="">
                  <div>15</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/13704.html">NYOJ 好题总结</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>3080</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/13628.html">
                  <img src="http://img.blog.csdn.net/20161121124730884" alt="">
                  <div>56</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/13628.html">POJ 专项题解</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>19375</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/13409.html">
                  <img src="http://img.blog.csdn.net/20161102193750895" alt="">
                  <div>4</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/13409.html">Leetcode</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>1266</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/12932.html">
                  <img src="http://img.blog.csdn.net/20160915093249392" alt="">
                  <div>8</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/12932.html">读书笔记</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2246</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/12704.html">
                  <img src="http://img.blog.csdn.net/20160826002037987" alt="">
                  <div>37</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/12704.html">算法与数据结构</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>41992</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/mystudyrecord001.html">
                  <img src="http://img.blog.csdn.net/20160809183336359" alt="">
                  <div>15</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/mystudyrecord001.html">微软面试百题</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>8448</span></div>
              </div>
            </li>

          </ul>
          <div class="unfold-btn">
            <span>展开</span><i class="icon iconfont icon-xiajiantou"></i>
          </div>
        </div>
		
        
        <div class="fixRight">
            <div class="right_box padb0 csdn-tracking-statistics" data-mod="popu_391">
                <h3 class="tit"><span><em>在线课程</em></span></h3>
                <ul class="edu_li clearfix">
                  
                  <li>
                    <div>
                      <a href="http://edu.csdn.net/huiyiCourse/series_detail/64?utm_source=blog7" target="_blank">
                        <img src="http://img.bss.csdn.net/201710111134087930.png" alt="Presto服务治理与架构优化在京东的实践应用" title="Presto服务治理与架构优化在京东的实践应用">
                      </a>
                    </div>
                    <div>
                      <p><a href="http://edu.csdn.net/huiyiCourse/series_detail/64?utm_source=blog7" target="_blank">Presto服务治理与架构优化在京东的实践应用</a></p>
                      <p>讲师：王哲涵</p>
                    </div>
                  </li>
                  
                  <li>
                    <div>
                      <a href="http://edu.csdn.net/huiyiCourse/detail/581?utm_source=blog7" target="_blank">
                        <img src="http://img.bss.csdn.net/201710111123195350.png" alt="【免费直播】Python最佳学习路线" title="【免费直播】Python最佳学习路线">
                      </a>
                    </div>
                    <div>
                      <p><a href="http://edu.csdn.net/huiyiCourse/detail/581?utm_source=blog7" target="_blank">【免费直播】Python最佳学习路线</a></p>
                      <p>讲师：韦玮</p>
                    </div>
                  </li>
                  
                </ul>
            </div>
			<!--u3032529-->
            <!-- <div class="extension_other csdn-tracking-statistics baidu_box" data-mod="popu_395">
								
                <script type="text/javascript" src="http://mpb1.iteye.com/cxpdpmumfaedgm.js"></script>
            </div> -->
			<div class="extension_other csdn-tracking-statistics bottomRcom" data-mod="popu_389" style="position:absolute;z-index:-5;opacity:0;pointer-events:none">
						<!--u3032528-->
				<div class="flashrecommend">
				<script type="text/javascript" src="http://mpb1.iteye.com/bwocoltlyzdec.js"></script>
				</div>
			</div>
        </div>
		<div class="user-hotArticle">
          <h3>热门文章</h3>
          <ul class="hotArticle-list">
 
            <li>
              <a href="/ltyqljhwcm/article/details/53043646">快速幂取模算法详解</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>5853</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/51952942">最短路径算法汇总</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>4540</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/52966874">ELFhash - 优秀的字符串哈希算法</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2787</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/52145746">快速排序全面讲解（含复杂度证明）——即将引出八大排序算法</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2041</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/52497853">2016BIT小学期——电话号码问题（哈希+位运算）</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>1921</span></div>
            </li>
 
          </ul>
        </div>


    </aside>
</div>

<div class="left_fixed">
      <div class="left_show_button">
        <span>
          <i class="icon iconfont icon-youjiantou"></i>
        </span>
      </div>
    <ul class="left_menu">

        <li>
            <button class="left-fixed-btn btn-like csdn-tracking-statistics" data-mod="popu_373" target="_self">
                <span class="iconbox border_red"><i class="icon iconfont icon-dianzan"></i></span>
				<span class="txt">5</span>
            </button>
        </li>
		<li id="blog_artical_directory">
            <button class="left-fixed-btn left_menu_btn csdn-tracking-statistics" data-mod="popu_372" target="_self">
                <span class="iconbox border_black"><i class="icon iconfont icon-mulu"></i></span>
            </button>
        </li>
        <li class="menu_con">
            <div class="list_father">
                <div class="arr_box">
                    <button class="btn-noborder arr-btn scroll-down  left_scroll_down"><i class="icon iconfont icon-xiajiantou"></i></button>
                    <button class="btn-noborder arr-btn scroll-up left_scroll_top"><i class="icon iconfont icon-shangjiantou"></i></button>
                </div>
                <div class="arr"></div>
                <div id="csdnBlogDir"></div>
            </div>
        </li>
        <li>
            <button class="left-fixed-btn csdn-tracking-statistics" data-mod="popu_374"  id="com-quick-collect" target="_self">
                <span class="iconbox border_purple"><i class="icon iconfont icon-shoucang"></i></span>
    
            </button>
        </li>
		<li>
          <button class="left-fixed-btn btn-pinglun" >
            <span class="iconbox border_purple"><i class="icon iconfont icon-pinglun"></i></span>
          </button>
        </li>
        <li id="share_box">
            <button class="left-fixed-btn  csdn-tracking-statistics"  data-mod="popu_375" target="_self">
                <span class="iconbox border_orange"><i class="icon iconfont icon-fenxiang"></i></span>
            </button>
            <div class="bdsharebuttonbox csdn-tracking-statistics" data-mod="popu_172">
                <div class="outside">
                    <span class="iconbox border_red2"><i class="icon iconfont icon-xinlang"></i></span>
                    <a href="#" class="bds_tsina" data-cmd="tsina" title="分享到新浪微博"> </a>
                </div>
                <div class="outside">
                    <span class="iconbox border_green"><i class="icon iconfont icon-weixin"></i></span>
                    <a href="#" class="bds_weixin" data-cmd="weixin" title="分享到微信"> </a>
                </div>
                <div class="outside">
                    <span class="iconbox border_blue"><i class="icon iconfont icon-QQ"></i></span>
                    <a href="#" class="bds_qzone" data-cmd="qzone" title="分享到QQ空间"> </a>
                </div>
            </div>
        </li>
    </ul>
</div>
<div class="right_fixed">
  <div class="r_ico">
	<i class="icon iconfont icon-jubao"></i>
	<span class="txt" id="reportBtn">内容举报</span>
  </div>
  <div class="returnTop">
   <i class="icon iconfont icon-fanhuidingbu"></i>
   <span>返回顶部</span>
 </div>
</div>
<div id="pop_win"></div>
<div id="popup_mask"></div>
<div class="pop_CA_cover" ></div>
<div class="pop pop_CA" >
    <div class="CA_header">
        收藏助手
        <span class="cancel_icon"  id="fapancle" ></span>
    </div>
    <iframe src="" id="collectIframe" frameborder="0" width="100%" height="360"  scrolling="no" ></iframe>
</div>
<!--举报-->
<div id="report_dialog" style="top: 250px; left: 343.5px;"><div id="panel_report">
    <div class="panel_head">不良信息举报</div>
    <form method="post" id="frmReport" class="panel_body">
        <table border="0" cellpadding="0" cellspacing="4" class="pop_table">
            <tbody><tr><td colspan="2">您举报文章：<a href="http://blog.csdn.net/raintungli/article/details/76583070" target="_blank">深度学习：神经网络中的前向传播和反向传播算法推导</a></td></tr>
            <tr>
                <th style="width:60px;">举报原因：</th>
                <td id="panel_reporttype">
                    <label><input type="radio" class="report_type" id="report_sex" name="report_type" value="1">色情</label>
                    <label><input type="radio" class="report_type" id="report_Politics" name="report_type" value="2">政治</label>
                    <label><input type="radio" class="report_type" id="report_copy" name="report_type" value="3">抄袭</label>
                    <label><input type="radio" class="report_type" id="report_ad" name="report_type" value="4">广告</label>
                    <label><input type="radio" class="report_type" id="report_want" name="report_type" value="5">招聘</label>
                    <label><input type="radio" class="report_type" id="report_call" name="report_type" value="6">骂人</label>
                    <br>
                    <label><input type="radio" class="report_type" id="report_other" name="report_type" value="7">其他</label>
                    <input type="text" name="report_other_content" id="report_other_content" maxlength="30" style="display: none;">
                </td>
            </tr>
            <tr id="panel_originalurl" style="display: none;">
                <th>原文地址：</th>
                <td>
                    <input id="originalurl" value="http://" name="originalurl" type="text" style="width: 90%;">
                </td>
            </tr>
            <tr>
                <th id="sp_reason">原因补充：</th>
                <td>
                    <textarea id="report_description" style="width: 300px;" rows="3" name="report_description"></textarea>
                    <p id="sp_n" style="color:#999;margin:0px;padding:0px;">(最多只允许输入30个字)</p>
                </td>
            </tr>
            <tr>
                <td></td>
                <td>
                    <input id="btnSubmitReport" name="submit" type="image" align="middle" class="btn_1" src="http://static.blog.csdn.net/images/btn_submit.jpg">
                    <span style="padding-left:20px;"></span>
                    <img id="btnCloseReportDialog" src="http://static.blog.csdn.net/images/btn_cancel.jpg" align="middle">
                    <div id="error" style="color: Red">
                    </div>
                </td>
            </tr>
            </tbody></table>
    </form>
</div>
    <script language="javascript" type="text/javascript">
        var isComment=0;
        //显示隐藏地址
        $(function () {
            if(isComment){
                $("#report_description").attr("disabled",true);
                $("#sp_n").hide();
                $("#sp_reason").html("评论内容：");
            }
            $(".report_type").click(function () {
                $("#panel_originalurl,#report_other_content").hide();
                switch ($(this).val()) {
                    case '3':
                        $("#panel_originalurl").show();
                        $("#originalurl").focus();
                        break;
                    case '7':
                        if(isComment){
                            $("#report_other_content").show().focus();
                        }
                        break;
                }

            });

            $("#frmReport").submit(function () {
                if (!currentUserName) {

                    if (confirm("您的操作必须登录，是否登录？")) {
                        location.href = "http://passport.csdn.net/account/login?from=" + encodeURIComponent(location.href);
                        return false;
                    }
                    return false;
                }

                var reportType = $("input[name=report_type]:checked").val();
                if(!reportType){
                    alert("请选择举报原因！");
                    return false;
                }
                var otherInfo = "";
                switch (reportType) {
                    case '3':
                        otherInfo = $("#originalurl").val();
                        if (otherInfo == ""||otherInfo=="http://") {
                            alert("举报抄袭必须提供原创文章地址！");
                            $("#originalurl").focus();
                            return false;
                        } else if(!checkeURL(otherInfo)) {
                            alert("请输入正确的原创文章地址！");
                            $("#originalurl").focus();
                            return false;
                        }
                        break;
                    case '7':
                        otherInfo = $("#report_other_content").val();
                        if (isComment && !otherInfo) {
                            alert("请填写举报的具体原因！");
                            $("#report_other_content").focus();
                            return false;
                        }
                        if(!isComment){
                            if(!$("#report_description").val()){
                                alert("请填写举报的具体原因！");
                                $("#report_description").focus();
                                return false;
                            }
                        }
                        break;
                }
                if(!isComment){
                    if($("#report_description").val().length>30){
                        alert("举报原因最多只允许输入30个字！");
                        return false;
                    }
                }

                var data = {
                    articleId: 76583070,
                    commentId: 0,
                    reportType: reportType,
                    originalurl: $("#originalurl").val(),
                    report_other_content: $("#report_other_content").val(),
                    report_description: $("#report_description").val(),
                    currentUserName: currentUserName,
                    updatetime: "2017/8/8 16:54:12",
                    blogUser: "raintungli"
                };
                if(!isComment){//如果是举报文章
                    data.report_other_content = data.report_description;
                    data.report_description = "1. 神经网络这是一个常见的神经网络的图：这是一个常见的三层神经网络的基本构成，Layer L1是输入层，Layer L2是隐含层";
                }

                $.post(blog_address + "/common/report?id=76583070&t=2", data, function (data) {
                    if (data.result == 1){
                        SetError("感谢您的举报，我们会尽快审核！");
                    }else{
                        if (data.content) alert(data.content);
                    }

                });
                return false;
            });

            $("#btnCloseReportDialog").click(function () {
                CloseDiv();
            });

        });

        //提示后关闭方法
        function SetError(error) {
            $("#btnCloseReportDialog").trigger("click");
            alert(error);
            CloseDiv();
        }

        //关闭方法
        function CloseDiv() {

            $.removeMask();
            $("#report_dialog").hide().html("");
            return false;
        }

        //验证url
        function checkeURL(url){
            return /^http(s)?:\/\/([\w-]+\.)+[\w-]+/i.test(url);
        }
    </script>
</div>

<script src="http://c.csdnimg.cn/public/common/libs/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/public/res/bower-libs/MathJax/MathJax.js?config=TeX-AMS_HTML"></script>
<script type="text/javascript" src="http://passport.csdn.net/content/loginbox/login.js"></script>

<script type="text/javascript" src="http://static.blog.csdn.net/Skin/skin3-template/js/blog_ver.js?v=3"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/Skin/skin3-template/js/skin2017.js?v=2017.032"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/cnick.js"></script>
<script>window._bd_share_config = { "common": { "bdSnsKey": {}, "bdText": "", "bdMini": "1", "bdMiniList": false, "bdPic": "", "bdStyle": "0", "bdSize": "16" }, "share": {} }; with (document) 0[(getElementsByTagName('head')[0] || body).appendChild(createElement('script')).src = 'http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion=' + ~(-new Date() / 36e5)];</script>
<script type="text/javascript" >
    if($(".article_collect li").length==1){$(".article_collect").hide();}
    if($(".article_tags li").length==1){$(".article_tags").hide();}
    $(".edit a").attr("href","http://write.blog.csdn.net/postedit/"+fileName);
    $.each($(".edu_li a"),function(){$(this).attr("href",$(this).attr("href").replace("blog7","blog9"))});
    new CNick('#uid').showNickname();
if($("#fan").html()=="")
{
$("#fan").html(0);	
}
</script>
</body>

<script  type="text/javascript">
    var fromjs=$("#fromjs");
    if(fromjs.length>0)
    {                  
        $("#fromjs .markdown_views pre").addClass("prettyprint");       
        prettyPrint();

        $('pre.prettyprint code').each(function () {
            var lines = $(this).text().split('\n').length;
            var $numbering = $('<ul/>').addClass('pre-numbering').hide();
            $(this).addClass('has-numbering').parent().append($numbering);
            for (i = 1; i <= lines; i++) {
                $numbering.append($('<li/>').text(i));
            };
            $numbering.fadeIn(1700);
        });

        $('.pre-numbering li').css("color","#999");             
    }

    $(function(){
        setTimeout(function(){
            $(".math").each(function(index,value){$(this).find("span").last().css("color","#fff"); })
        },500);         
       

    });

    setTimeout(function () {
        $(".toc a[target='_blank']").attr("target", "");
    }, 500);

</script>
</html>

