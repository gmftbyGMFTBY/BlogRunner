
<!DOCTYPE html>
<html>
<head>
            <link rel="canonical" href="http://blog.csdn.net/ltyqljhwcm/article/details/51460713"/> 

    <script type="text/javascript">
        var username = "ltyqljhwcm";var _blogger = username;var blog_address = "http://blog.csdn.net/ltyqljhwcm";var static_host = "http://static.blog.csdn.net";
        var currentUserName = ""; var fileName = '51460713';var commentscount = 0; var islock = false
        window.quickReplyflag = true;
        var totalFloor=0;
                
                 var isBole = false;
                
                
                 var isDigg = false;
                
          
             var isExpert=false;
          
    </script>

<meta http-equiv="content-type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <script src="http://c.csdnimg.cn/public/common/libs/jquery/jquery-1.9.1.min.js" type="text/javascript"></script>
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/common/libs/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/static/css/avatar.css">
    <link type="text/css" rel="stylesheet" href="http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/default.css" />
    <link rel="stylesheet" href="http://static.blog.csdn.net/Skin/skin3-template/css/style.css?v=2017.032">
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/common/toolbar/content_toolbar_css/content_toolbar.css">

    <script type="text/javascript" src="http://static.blog.csdn.net/Skin/skin3-template/fonts/iconfont.js"></script>
    <script src="//csdnimg.cn/rabbit/exposure-click/main.js?v1.15.23"></script>
    <script type="text/javascript" src="http://c.csdnimg.cn/pubfooter/js/tracking_for_recommend.js?v=0911" charset="utf-8"></script>
    <script type="text/javascript" src="http://csdnimg.cn/pubfooter/js/tracking.js" charset="utf-8"></script>
    <script type="text/javascript" src="http://static.blog.csdn.net/scripts/cnick.js" charset="utf-8"></script>
 
    <link rel="stylesheet" href="http://static.blog.csdn.net/code/prettify.css" />
    <script type="text/javascript" src="http://static.blog.csdn.net/code/prettify.js"></script>
<script src="http://dup.baidustatic.com/js/ds.js"></script>
    <script type="text/javascript">

        // Traffic Stats of the entire Web site By baidu
        var _hmt = _hmt || [];
        (function() {
            var hm = document.createElement("script");
            hm.src = "https://hm.baidu.com/hm.js?6bcd52f51e9b3dce32bec4a3997715ac";
            var s = document.getElementsByTagName("script")[0];
            s.parentNode.insertBefore(hm, s);
        })();
        // Traffic Stats of the entire Web site By baidu end



    </script>
    <meta name="description" content="转载大神的博客受益匪浅

这几天学习kmp算法，解决字符串的匹配问题，开始的时候都是用到BF算法，（BF(Brute Force)算法是普通的模式匹配算法，BF算法的思想就是将目标串S的第一个字符与模式串T的第一个字符进行匹配，若相等，则继续比较S的第二个字符和 T的第二个字符;若不相等，则比较S的第二个字符和T的第一个字符，依次比较下去，直到得出最后的匹配结果。BF算法是一种蛮力算法。）虽然" />
    <meta name="keywords" content="" />
    <meta http-equiv="Cache-Control" content="no-siteapp" /><link rel="alternate" media="handheld" href="#" />
    <meta name="shenma-site-verification" content="5a59773ab8077d4a62bf469ab966a63b_1497598848">


    <title>KMP算法 串的模式匹配算法优秀总结 - CSDN博客</title>
</head>
<body>
<script id="toolbar-tpl-scriptId" prod="download" skin="black" src="http://c.csdnimg.cn/public/common/toolbar/js/content_toolbar.js" type="text/javascript" domain="http://blog.csdn.net"></script>

<div class="container clearfix">
    <main>
        <article>
            <h1 class="csdn_top">KMP算法 串的模式匹配算法优秀总结</h1>
            <div class="article_bar clearfix">
                <div class="artical_tag">
                    <span class="original">转载</span>
                    <span class="time">2016年05月20日 12:21:14</span>
                </div>
				<ul class="article_tags clearfix csdn-tracking-statistics" data-mod="popu_377">
					<li class="tit">标签：</li>
					
				</ul>
                <ul class="right_bar">
                    <li><button class="btn-noborder"><i class="icon iconfont icon-read"></i><span class="txt">829</span></button></li>
                    <!--<li><button class="btn-noborder"><i class="icon iconfont icon-dashang-"></i><span class="txt">0</span></button></li>-->

                    <li class="edit">
                        <a class="btn-noborder" href="" >
                            <i class="icon iconfont icon-bianji"></i><span class="txt">编辑</span>
                        </a>
                    </li>
                    <li class="del">
                        <a class="btn-noborder" onclick="javascript:deleteArticle(fileName);return false;">
                            <i class="icon iconfont icon-shanchu"></i><span class="txt">删除</span>
                        </a>
                    </li>
                </ul>
            </div>
            <div id="article_content" class="article_content csdn-tracking-statistics" data-mod="popu_307" data-dsm="post">
                
<p>转载大神的博客受益匪浅</p>
<p></p>
<p>这几天学习kmp算法，解决字符串的匹配问题，开始的时候都是用到BF算法，（BF(Brute Force)算法是普通的模式匹配算法，BF算法的思想就是将目标串S的第一个字符与模式串T的第一个字符进行匹配，若相等，则继续比较S的第二个字符和 T的第二个字符;若不相等，则比较S的第二个字符和T的第一个字符，依次比较下去，直到得出最后的匹配结果。BF算法是一种蛮力算法。）虽然也能解决一些问题，但是这是常规思路，在内存大，数据量小，时间长的情况下，还能解决一些问题，但是如果遇到一些限制时间和内存的字符串问题，肯定会超时，这是我们就想到了kmp算法，（KMP算法是一种改进的字符串匹配算法，由D.E.Knuth与V.R.Pratt和J.H.Morris同时发现，因此人们称它为克努特--莫里斯--普拉特操作(简称KMP算法)。KMP算法的关键是利用匹配失败后的信息，尽量减少模式串与主串的匹配次数以达到快速匹配的目的。具体实现就是实现一个next()函数，函数本身包含了模式串的局部匹配信息。）kmp算法的难点是kmp中的next数组的了解和求法。上网查了很多资料，发现参差不齐，研究了很久，才觉得豁然开朗，，借鉴网上资源以及自己的了解，现总结如下，存在很多不足之处，希望大家能批评指正！！</p>
<p>&nbsp;</p>
<p>一、模拟字符串比较过程如下：</p>
<p>1.</p>
<p>&nbsp;</p>
<p><img alt="\" src="http://www.2cto.com/uploadfile/Collfiles/20160402/20160402093038678.png" style="width:590px; height:146px"></p>
<p>首先，字符串&quot;BBC ABCDAB ABCDABCDABDE&quot;的第一个字符与搜索词&quot;ABCDABD&quot;的第一个字符，进行比较。因为B与A不匹配，所以搜索词后移一位。</p>
<p>2.</p>
<p><img alt="\" src="http://www.2cto.com/uploadfile/Collfiles/20160402/20160402093038679.png" style="width:604px; height:137px"></p>
<p>因为B与A不匹配，搜索词再往后移。</p>
<p>3.</p>
<p><img alt="\" src="http://www.2cto.com/uploadfile/Collfiles/20160402/20160402093039683.png" style="width:577px; height:137px"></p>
<p>就这样，直到字符串有一个字符，与搜索词的第一个字符相同为止。</p>
<p>4.</p>
<p><img alt="\" src="http://www.2cto.com/uploadfile/Collfiles/20160402/20160402093039692.png" style="width:584px; height:122px"></p>
<p>接着比较字符串和搜索词的下一个字符，还是相同。</p>
<p>5.</p>
<p><img alt="\" src="http://www.2cto.com/uploadfile/Collfiles/20160402/20160402093039694.png" style="width:577px; height:130px"></p>
<p>直到字符串有一个字符，与搜索词对应的字符不相同为止。</p>
<p>6.</p>
<p><img alt="\" src="http://www.2cto.com/uploadfile/Collfiles/20160402/20160402093045698.png" style="width:588px; height:158px"></p>
<p>这时，最自然的反应是，将搜索词整个后移一位，再从头逐个比较。这样做虽然可行，但是效率很差，因为你要把&quot;搜索位置&quot;移到已经比较过的位置，重比一遍。</p>
<p>7.</p>
<p><img alt="\" src="http://www.2cto.com/uploadfile/Collfiles/20160402/20160402093039694.png" style="width:577px; height:130px"></p>
<p>一个基本事实是，当空&#26684;与D不匹配时，你其实知道前面六个字符是&quot;ABCDAB&quot;。KMP算法的想法是，设法利用这个已知信息，不要把&quot;搜索位置&quot;移回已经比较过的位置，继续把它向后移，这样就提高了效率。</p>
<p>8.</p>
<p><img alt="\" src="http://www.2cto.com/uploadfile/Collfiles/20160402/20160402093045699.png" style="width:630px; height:184.6px"></p>
<p>怎么做到这一点呢？可以针对搜索词，算出一张《部分匹配表》（Partial Match Table）。这张表是如何产生的，后面再介绍，这里只要会用就可以了。</p>
<p>9.</p>
<p><img alt="\" src="http://www.2cto.com/uploadfile/Collfiles/20160402/20160402093039694.png" style="width:577px; height:130px"></p>
<p>已知空&#26684;与D不匹配时，前面六个字符&quot;ABCDAB&quot;是匹配的。查表可知，最后一个匹配字符B对应的&quot;部分匹配&#20540;&quot;为2，因此按照下面的公式算出向后移动的位数：</p>
<blockquote>
<p>　　移动位数 = 已匹配的字符数 - 对应的部分匹配&#20540;</p>
</blockquote>
<p>因为 6 - 2 等于4，所以将搜索词向后移动4位。</p>
<p>10.</p>
<p><img alt="\" src="http://www.2cto.com/uploadfile/Collfiles/20160402/20160402093046704.png" style="width:581px; height:137px"></p>
<p>因为空&#26684;与Ｃ不匹配，搜索词还要继续往后移。这时，已匹配的字符数为2（&quot;AB&quot;），对应的&quot;部分匹配&#20540;&quot;为0。所以，移动位数 = 2 - 0，结果为 2，于是将搜索词向后移2位。</p>
<p>11.</p>
<p><img alt="\" src="http://www.2cto.com/uploadfile/Collfiles/20160402/20160402093046711.png" style="width:569px; height:136px"></p>
<p>因为空&#26684;与A不匹配，继续后移一位。</p>
<p>12.</p>
<p><img alt="\" src="http://www.2cto.com/uploadfile/Collfiles/20160402/20160402093046715.png" style="width:590px; height:142px"></p>
<p>逐位比较，直到发现C与D不匹配。于是，移动位数 = 6 - 2，继续将搜索词向后移动4位。</p>
<p>13.</p>
<p><img alt="\" src="http://www.2cto.com/uploadfile/Collfiles/20160402/20160402093047716.png" style="width:576px; height:135px"></p>
<p>逐位比较，直到搜索词的最后一位，发现完全匹配，于是搜索完成。如果还要继续搜索（即找出全部匹配），移动位数 = 7 - 0，再将搜索词向后移动7位，这里就不再重复了。</p>
<p>14.</p>
<p><img alt="\" src="http://www.2cto.com/uploadfile/Collfiles/20160402/20160402093047717.png" style="width:551px; height:202px"></p>
<p>下面介绍《部分匹配表》是如何产生的。</p>
<p>首先，要了解两个概念：&quot;前缀&quot;和&quot;后缀&quot;。 &quot;前缀&quot;指除了最后一个字符以外，一个字符串的全部头部组合；&quot;后缀&quot;指除了第一个字符以外，一个字符串的全部尾部组合。</p>
<p>15.</p>
<p><img alt="\" src="http://www.2cto.com/uploadfile/Collfiles/20160402/20160402093045699.png" style="width:630px; height:184.6px"></p>
<p>&quot;部分匹配&#20540;&quot;就是&quot;前缀&quot;和&quot;后缀&quot;的最长的共有元素的长度。以&quot;ABCDABD&quot;为例，</p>
<blockquote>
<p>　　－　&quot;A&quot;的前缀和后缀都为空集，共有元素的长度为0；</p>
<p>　　－　&quot;AB&quot;的前缀为[A]，后缀为[B]，共有元素的长度为0；</p>
<p>　　－　&quot;ABC&quot;的前缀为[A, AB]，后缀为[BC, C]，共有元素的长度0；</p>
<p>　　－　&quot;ABCD&quot;的前缀为[A, AB, ABC]，后缀为[BCD, CD, D]，共有元素的长度为0；</p>
<p>　　－　&quot;ABCDA&quot;的前缀为[A, AB, ABC, ABCD]，后缀为[BCDA, CDA, DA, A]，共有元素为&quot;A&quot;，长度为1；</p>
<p>　　－　&quot;ABCDAB&quot;的前缀为[A, AB, ABC, ABCD, ABCDA]，后缀为[BCDAB, CDAB, DAB, AB, B]，共有元素为&quot;AB&quot;，长度为2；</p>
<p>　　－　&quot;ABCDABD&quot;的前缀为[A, AB, ABC, ABCD, ABCDA, ABCDAB]，后缀为[BCDABD, CDABD, DABD, ABD, BD, D]，共有元素的长度为0。</p>
</blockquote>
<p>16.</p>
<p><img alt="\" src="http://www.2cto.com/uploadfile/Collfiles/20160402/20160402093046715.png" style="width:590px; height:142px"></p>
<p>&quot;部分匹配&quot;的实质是，有时候，字符串头部和尾部会有重复。比如，&quot;ABCDAB&quot;之中有两个&quot;AB&quot;，那么它的&quot;部分匹配&#20540;&quot;就是2（&quot;AB&quot;的长度）。搜索词移动的时候，第一个&quot;AB&quot;向后移动4位（字符串长度-部分匹配&#20540;），就可以来到第二个&quot;AB&quot;的位置。</p>
<p>&nbsp;</p>
二、next数组实现的代码:
<p>代码：</p>
<p>&nbsp;</p>
<div>
<div class="syntaxhighlighter  java" id="highlighter_964295">
<div class="toolbar"><span><a target="_blank" class="toolbar_item command_help help" href="http://www.2cto.com/kf/201604/497086.html#">?</a></span></div>
<table border="0" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="java plain">&lt;span style=</code><code class="java string">&quot;font-size: 18px&quot;</code><code class="java plain">&gt;</code><code class="java keyword">void</code>
<code class="java plain">makeNext(</code><code class="java keyword">const</code> <code class="java keyword">
char</code> <code class="java plain">P[],</code><code class="java keyword">int</code>
<code class="java plain">next[])</code></div>
<div class="line number2 index1 alt1"><code class="java plain">{</code></div>
<div class="line number3 index2 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">int</code>
<code class="java plain">q,k;</code><code class="java comments">//q:模版字符串下标；k:最大前后缀长度</code></div>
<div class="line number4 index3 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">int</code>
<code class="java plain">m = strlen(P);</code><code class="java comments">//模版字符串长度</code></div>
<div class="line number5 index4 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">next[</code><code class="java value">0</code><code class="java plain">] =
</code><code class="java value">0</code><code class="java plain">;</code><code class="java comments">//模版字符串的第一个字符的最大前后缀长度为0</code></div>
<div class="line number6 index5 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">for</code>
<code class="java plain">(q = </code><code class="java value">1</code><code class="java plain">,k =
</code><code class="java value">0</code><code class="java plain">; q &lt; m; &#43;&#43;q)</code><code class="java comments">//for循环，从第二个字符开始，依次计算每一个字符对应的next&#20540;</code></div>
<div class="line number7 index6 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">{</code></div>
<div class="line number8 index7 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">while</code><code class="java plain">(k &gt;
</code><code class="java value">0</code> <code class="java plain">&amp;&amp; P[q] != P[k])</code><code class="java comments">//递归的求出P[0]···P[q]的最大的相同的前后缀长度k</code></div>
<div class="line number9 index8 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">k = next[k-</code><code class="java value">1</code><code class="java plain">];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</code><code class="java comments">//不理解没关系看下面的分析，这个while循环是整段代码的精髓所在，确实不好理解&nbsp; </code>
</div>
<div class="line number10 index9 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">if</code>
<code class="java plain">(P[q] == P[k])</code><code class="java comments">//如果相等，那么最大相同前后缀长度加1</code></div>
<div class="line number11 index10 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">{</code></div>
<div class="line number12 index11 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">k&#43;&#43;;</code></div>
<div class="line number13 index12 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div>
<div class="line number14 index13 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">next[q] = k;</code></div>
<div class="line number15 index14 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div>
<div class="line number16 index15 alt1"><code class="java plain">}&lt;/span&gt;</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>　现在我着重讲解一下while循环所做的工作：</p>
<ol>
<li>　　已知前一步计算时最大相同的前后缀长度为k（k&gt;0），即P[0]···P[k-1]；</li><li>　　此时比较第k项P[k]与P[q],如图1所示</li><li>　　如果P[K]等于P[q]，那么很简单跳出while循环;</li><li>　　关键！关键有木有！关键如果不等呢？？？那么我们应该利用已经得到的next[0]···next[k-1]来求P[0]···P[k-1]这个子串中最大相同前后缀，可能有同学要问了——为什么要求P[0]···P[k-1]的最大相同前后缀呢？？？是啊！为什么呢？原因在于P[k]已经和P[q]失配了，而且P[q-k] ···P[q-1]又与P[0] ···P[k-1]相同，看来P[0]···P[k-1]这么长的子串是用不了了，那么我要找个同样也是P[0]打头、P[k-1]结尾的子串即P[0]···P[j-1](j==next[k-1])，看看它的下一项P[j]是否能和P[q]匹配。如图2所示
<p>&nbsp;</p>
<p><img alt="\" src="http://www.2cto.com/uploadfile/Collfiles/20160402/20160402093047718.png" style="width:419px; height:288px"><img alt="\" src="http://www.2cto.com/uploadfile/Collfiles/20160402/20160402093047719.png" style="width:451px; height:288px"></p>
<br>
<p>三、next数组的优化代码：</p>
<p>&nbsp;</p>
<div>
<div class="syntaxhighlighter  java" id="highlighter_311061">
<div class="toolbar"><span><a target="_blank" class="toolbar_item command_help help" href="http://www.2cto.com/kf/201604/497086.html#">?</a></span></div>
<table border="0" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="java plain">&lt;span style=</code><code class="java string">&quot;font-size: 18px&quot;</code><code class="java plain">&gt;</code><code class="java keyword">void</code>
<code class="java plain">get_next()</code></div>
<div class="line number2 index1 alt1"><code class="java plain">{</code></div>
<div class="line number3 index2 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">int</code>
<code class="java plain">i=</code><code class="java value">0</code><code class="java plain">,j=-</code><code class="java value">1</code><code class="java plain">;</code></div>
<div class="line number4 index3 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">next[</code><code class="java value">0</code><code class="java plain">]=-</code><code class="java value">1</code><code class="java plain">;</code></div>
<div class="line number5 index4 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">while</code><code class="java plain">(i&lt;len2) span=</code><code class="java string">&quot;&quot;</code>
<code class="java plain">j=</code><code class="java string">&quot;=-1||s2[i]==s2[j])&quot;</code>
<code class="java keyword">else</code><code class="java plain">=</code><code class="java string">&quot;&quot;</code><code class="java plain">&gt;&lt;/len2)&gt;&lt;/span&gt;</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<br>
<span style="font-size:18px">附件：kmp算法完整代码： </span>
<p>&nbsp;</p>
<p>&nbsp;</p>
<div>
<div class="syntaxhighlighter  java" id="highlighter_161397">
<div class="toolbar"><span><a target="_blank" class="toolbar_item command_help help" href="http://www.2cto.com/kf/201604/497086.html#">?</a></span></div>
<table border="0" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="java plain">&lt;span style=</code><code class="java string">&quot;font-size: 18px&quot;</code><code class="java plain">&gt;&lt;span style=</code><code class="java string">&quot;font-size: 18px&quot;</code><code class="java plain">&gt;#include&lt;stdio.h&gt;&lt;len2)
 span=</code><code class="java string">&quot;&quot;</code> <code class="java plain">j=</code><code class="java string">&quot;=-1||s2[i]==s2[j])&quot;</code>
<code class="java keyword">else</code><code class="java plain">=</code><code class="java string">&quot;&quot;</code><code class="java plain">&gt;</code></div>
<div class="line number2 index1 alt1"><code class="java plain">#include&lt;string.h&gt;</code></div>
<div class="line number3 index2 alt2"><code class="java plain">#define N </code><code class="java value">100005</code></div>
<div class="line number4 index3 alt1"><code class="java keyword">char</code> <code class="java plain">
s[</code><code class="java value">2</code><code class="java plain">*N];</code></div>
<div class="line number5 index4 alt2"><code class="java keyword">char</code> <code class="java plain">
s1[N];</code></div>
<div class="line number6 index5 alt1"><code class="java keyword">char</code> <code class="java plain">
s2[N];</code></div>
<div class="line number7 index6 alt2"><code class="java keyword">int</code> <code class="java plain">
next[N];</code></div>
<div class="line number8 index7 alt1"><code class="java keyword">int</code> <code class="java plain">
len1,len2,len;</code></div>
<div class="line number9 index8 alt2"><code class="java keyword">void</code> <code class="java plain">
get_next()</code></div>
<div class="line number10 index9 alt1"><code class="java plain">{</code></div>
<div class="line number11 index10 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">int</code>
<code class="java plain">i=</code><code class="java value">0</code><code class="java plain">,j=-</code><code class="java value">1</code><code class="java plain">;</code></div>
<div class="line number12 index11 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">next[</code><code class="java value">0</code><code class="java plain">]=-</code><code class="java value">1</code><code class="java plain">;</code></div>
<div class="line number13 index12 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">while</code><code class="java plain">(i&lt;len2) span=</code><code class="java string">&quot;&quot;</code>
<code class="java plain">j=</code><code class="java string">&quot;=-1||s2[i]==s2[j])&quot;</code>
<code class="java keyword">else</code><code class="java plain">=</code><code class="java string">&quot;&quot;</code>
<code class="java keyword">void</code><code class="java plain">=</code><code class="java string">&quot;&quot;</code>
<code class="java keyword">return</code><code class="java plain"></code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
</li></ol>
<link rel="stylesheet" href="http://static.blog.csdn.net/public/res-min/markdown_views.css?v=2.0" />
            </div>
        </article>
        <div class="readall_box csdn-tracking-statistics" data-mod="popu_376">
			<div class="read_more_mask"></div>
            <a class="btn btn-large btn-gray-fred read_more_btn" target="_self">阅读全文</a>
        </div>
        <div class="article_copyright">
            
        </div>
        <!--  <div class="reward_box">
            <div class="tit">
              <button class="btn_reward"><i class="icon iconfont icon-dashang-"></i></button>
            </div>
            <dl class="clearfix">
              <dt><a href="#" target="_blank">近期打赏</a></dt>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
            </dl>
          </div>-->

        <ul class="article_collect clearfix csdn-tracking-statistics"  data-mod="popu_378">
            <li class="tit">本文已收录于以下专栏：</li>
            
        </ul>
        <div class="comment_box clearfix">
            <div id="comment_form">
                <div id="commentsbmitarear">
                    <!-- <h6><span>0</span>条评论</h6> -->
           <!--          <dl class="clearfix" id="commentbox">
                        <dt>
                            <a href="http://my.csdn.net/"><img src="" ></a>
                        </dt>
                        <dd>
                            <a href="http://my.csdn.net/" target="_blank"></a>
                        </dd>
                        <dd class="txt_tip"><span id="tip_comment" class="tip"></span></dd>
                    </dl> -->
                    <div class="comment_area clearfix">
						<div class="userimg"><a href="http://my.csdn.net/"><img src=""></a></div>
                        <form action="/ltyqljhwcm/comment/submit?id=51460713" method="post" onsubmit="return subform(this);" id="commentform">
                            <textarea class="comment_content" name="comment_content" id="comment_content" placeholder="发表你的评论"></textarea>
                            <div class="bot_bar clearfix">
                                <div id="ubbtools" class="add_code">
                                    <a href="#insertcode" code="code" target="_self"><i class="icon iconfont icon-daima"></i></a>
                                </div>

                                <input type="hidden" id="comment_replyId" name="comment_replyId">
                                <input type="hidden" id="comment_userId" name="comment_userId" value="">
                                <input type="hidden" id="commentId" name="commentId" value="">
                                <input type="submit" class="btn btn-redborder" value="发表评论">
								<span id="tip_comment" class="tip">
                                <div style="display: none;" class="csdn-tracking-statistics" data-mod="popu_384"><a href="#" target="_blank" class="comment_area_btn">发表评论</a></div>

                                <div id="lang_list" code="code">
                                    <a href="#html" style="width:95px;" class="long_name" target="_self">HTML/XML</a>
                                    <a href="#objc" style="width:95px;" class="long_name" target="_self">objective-c</a>
                                    <a href="#delphi" style="width:58px;" class="zhong_name" target="_self">Delphi</a>
                                    <a href="#ruby" class="zhong_name" target="_self">Ruby</a>
                                    <a href="#php" target="_self">PHP</a>
                                    <a href="#csharp" class="duan_name" target="_self">C#</a>
                                    <a style=" border-right: none;" href="#cpp" class="duan_name" target="_self">C++</a>
                                    <a style=" border-bottom:none;width:95px;" href="#javascript" class="long_name" target="_self">JavaScript</a>
                                    <a style=" border-bottom:none;width:95px;" href="#vb" class="long_name" target="_self">Visual Basic</a>
                                    <a style=" border-bottom:none;" href="#python" class="zhong_name" target="_self">Python</a>
                                    <a style=" border-bottom:none;" href="#java" class="zhong_name" target="_self">Java</a>
                                    <a style="border-bottom:none;" href="#css" class="duan_name" target="_self">CSS</a>
                                    <a style="border-bottom:none;" href="#sql" class="duan_name" target="_self">SQL</a>
                                    <a style="border:none; " href="#plain" class="duan_name" target="_self">其它</a>
                                    <span class="arrb"></span>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="comment_li_outbox">
            <div id="comment_list"></div>
        </div>

        <div class="more_comment">
            <div id="comment_bar" class="trackgin-ad" data-mod="popu_385"></div>
        </div>

        <h3 class="recommend_tit">相关文章推荐</h3>
        <div class="recommend_list clearfix">
            
            <dl class="clearfix csdn-tracking-statistics downloadElement" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
               	<dt><a href="http://download.csdn.net/detail/xxhhhyy/722720" target="_blank" strategy="BlogCommendFromCsdn_1"><img class="maxwidth" src="http://download.csdn.net/images/minetype/unkonw.svg" alt="" title=""></a></dt>
		<dd>
			<div class="summary">
				<h2><a href="http://download.csdn.net/detail/xxhhhyy/722720" target="_blank" strategy="BlogCommendFromCsdn_1">KMP算法（模式匹配算法）</a></h2>
				<div class="summary">
				  <ul>
					  <li class="time">2008-10-26 21:36</li>
					  <li class="visited_num fileSize">1KB</li>
					  <li class="download_btn"><a href="http://download.csdn.net/detail/xxhhhyy/722720">下载</a></li>
				  </ul>
				</div> 
			</div>
		</dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/u010366748/article/details/50721299"  target="_blank" strategy="BlogCommendFromCsdn_2">数据结构(11)--串的模式匹配算法之BF、KMP算法</a></h2>
                    <div class="summary">
                        参考书籍：数据结构（C语言版）严蔚敏吴伟民编著清华大学出版社

1.串的存储
1.1定长顺序存储
串的定长顺序存储（静态数组）：

&#160; &#160; #define &#160;MAXSTRLEN &#160;255 &#160;// 用户...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/u010366748" target="_blank" strategy="BlogCommendFromCsdn_2"><img src="http://avatar.csdn.net/4/4/4/2_u010366748.jpg" alt="u010366748" title="u010366748"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/u010366748">u010366748</a></li>
                        <li class="time">2016-02-23 13:35</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>854</span></li>
                    </ul>
                </dd>
            </dl>
            
            <!--dl class="clearfix csdn-tracking-statistics" data-mod="popu_393">
                <dt><a href="http://edu.csdn.net/huiyiCourse/series_detail/64?utm_source=blog10" target="_blank"><img class="maxwidth" src="http://img.blog.csdn.net/20170928113144608" alt="" title=""></a></dt>
                <dd>
                    <div class="summary">
                        <h2><a href='http://edu.csdn.net/topic/python1?utm_source=blog10' target='_blank'>伤心啊！年度热门编程语言排行榜出来了...</a></h2>  <div class="summary">近期，IEEE Spectrum 发布了第四届顶级编程语言交互排行榜。结合 10 个线上数据源的 12 个标准，对 48 种语言进行了排行！此外，七牛云许式伟曾说过Go语言会取代Java...气氛... </div> 
                    </div>
                </dd>
            </dl-->
	<script>
		(function() {
		    var s = "_" + Math.random().toString(36).slice(2);
		    document.write('<div id="' + s + '"></div>');
		    (window.slotbydup=window.slotbydup || []).push({
			id: '4765209',
			container: s,
			size: '808,120',
			display: 'inlay-fix'
		    });
		})();
	</script>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/hguisu/article/details/7676786"  target="_blank" strategy="BlogCommendFromCsdn_3">数据结构- 串的模式匹配算法：BF和 KMP算法</a></h2>
                    <div class="summary">
                        Brute-Force算法的思想


1．BF(Brute-Force)算法 &#160;

Brute-Force算法的基本思想是：
1) 从目标串s 的第一个字符起和模式串t的第一个字符进行比较...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/hguisu" target="_blank" strategy="BlogCommendFromCsdn_3"><img src="http://avatar.csdn.net/F/2/A/2_hguisu.jpg" alt="hguisu" title="hguisu"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/hguisu">hguisu</a></li>
                        <li class="time">2012-06-20 10:57</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>21174</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/weirdo_o/article/details/59587958"  target="_blank" strategy="BlogCommendFromCsdn_4">数据结构- 串的模式匹配算法：BF和 KMP算法</a></h2>
                    <div class="summary">
                        Brute-Force算法的思想

1．BF(Brute-Force)算法 &#160;
Brute-Force算法的基本思想是：
1) 从目标串s 的第一个字符起和模式串t的第一个字符进行比较，若相等...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/Weirdo_O" target="_blank" strategy="BlogCommendFromCsdn_4"><img src="http://avatar.csdn.net/2/8/2/2_weirdo_o.jpg" alt="Weirdo_O" title="Weirdo_O"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/Weirdo_O">Weirdo_O</a></li>
                        <li class="time">2017-03-02 18:10</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>87</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/lnjhh/article/details/7525415"  target="_blank" strategy="BlogCommendFromCsdn_5">字符串的模式匹配算法--KMP算法</a></h2>
                    <div class="summary">
                        KMP算法是一种高效的模式匹配算法，其最大的特点是指示主串的指针不需要回溯，整个匹配过程中，对主串仅需要从头到尾扫描一遍，这对处理从外设输入的庞大文件很有效，可以边读入边匹配，而无需回头重读，圈复杂度...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/lnjhh" target="_blank" strategy="BlogCommendFromCsdn_5"><img src="http://avatar.csdn.net/0/D/6/2_lnjhh.jpg" alt="lnjhh" title="lnjhh"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/lnjhh">lnjhh</a></li>
                        <li class="time">2012-05-14 01:21</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>158</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/allenalex/article/details/11726107"  target="_blank" strategy="BlogCommendFromCsdn_6">模式匹配算法-KMP算法</a></h2>
                    <div class="summary">
                        朴素模式匹配算法的最大问题就是太低效了。于是三位前辈发表了一种KMP算法，其中三个字母分别是这三个人名的首字母大写。
简单的说，KMP算法的对于主串的当前位置不回溯。也就是说，如果主串某次比较时，当...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/Allenalex" target="_blank" strategy="BlogCommendFromCsdn_6"><img src="http://avatar.csdn.net/4/E/4/2_allenalex.jpg" alt="Allenalex" title="Allenalex"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/Allenalex">Allenalex</a></li>
                        <li class="time">2013-09-16 22:06</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>771</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/zc474235918/article/details/40474525"  target="_blank" strategy="BlogCommendFromCsdn_7">字符串模式匹配算法--详解KMP算法</a></h2>
                    <div class="summary">
                        在软考的复习中，看到过几次  字符串的模式匹配算法。看起来挺难的。所以花了点时间查了查关于字符串匹配的算法。下面详细介绍一下KMP模式匹配算法
    以及next[j]函数如何计算。
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/zc474235918" target="_blank" strategy="BlogCommendFromCsdn_7"><img src="http://avatar.csdn.net/D/9/D/2_zc474235918.jpg" alt="zc474235918" title="zc474235918"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/zc474235918">zc474235918</a></li>
                        <li class="time">2014-10-26 10:14</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>2256</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/u011028771/article/details/52966977"  target="_blank" strategy="BlogCommendFromCsdn_8">KMP算法与朴素模式匹配算法（C语言）</a></h2>
                    <div class="summary">
                        在上一篇博客中介绍了KMP算法和朴素模式匹配算法的区别，本文主要针对这两种算法的C语言实现进行讲解。
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/u011028771" target="_blank" strategy="BlogCommendFromCsdn_8"><img src="http://avatar.csdn.net/3/7/0/2_u011028771.jpg" alt="u011028771" title="u011028771"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/u011028771">u011028771</a></li>
                        <li class="time">2016-10-29 21:57</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>736</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics downloadElement" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
               	<dt><a href="http://download.csdn.net/detail/charchenlyn/3472503" target="_blank" strategy="BlogCommendFromCsdn_9"><img class="maxwidth" src="http://download.csdn.net/images/minetype/doc.svg" alt="" title=""></a></dt>
		<dd>
			<div class="summary">
				<h2><a href="http://download.csdn.net/detail/charchenlyn/3472503" target="_blank" strategy="BlogCommendFromCsdn_9">模式匹配kmp算法的ppt</a></h2>
				<div class="summary">
				  <ul>
					  <li class="time">2011-07-27 10:41</li>
					  <li class="visited_num fileSize">223KB</li>
					  <li class="download_btn"><a href="http://download.csdn.net/detail/charchenlyn/3472503">下载</a></li>
				  </ul>
				</div> 
			</div>
		</dd>
            </dl>
            

	   

            

            
        </div>
    </main>
    <aside>
        <div class="right_box user_info">
            <dl class="inf_bar clearfix">
                <dt class="csdn-tracking-statistics" data-mod="popu_381">
                    <a href="http://blog.csdn.net/ltyqljhwcm" target="_blank">
                        <img src="http://avatar.csdn.net/A/7/0/1_ltyqljhwcm.jpg" class="avatar_pic">
                    </a>
                    <span class="medals" title="">
                <svg class="icon" aria-hidden="true">
                    
                </svg>
              </span>
                </dt>
                <dd>
                    <h3 class="csdn-tracking-statistics"  data-mod="popu_380"><a href="http://blog.csdn.net/ltyqljhwcm" target="_blank" id="uid">ltyqljhwcm</a></h3>
                    <span  class="csdn-tracking-statistics" data-mod="popu_379"><a class="btn btn-redborder-small "  id="span_add_follow" target="_self">＋关注</a></span>
                </dd>
            </dl>
            <div class="inf_number_box clearfix">
                <dl>
                    <dt>原创</dt>
                    <dd>219</dd>
                </dl>
                <dl>
                    <dt>粉丝</dt>
                    <dd id='fan'>39</dd>
                </dl>
                <dl>
                    <dt>喜欢</dt>
                    <dd>0</dd>
                </dl>
								 <dl>
              <dt>码云</dt>
              <dd>&nbsp;</dd>
            </dl>

            </div>
	    <div class="writings">
              <div class="public_signal clearfix">
                <h3>他的最新文章</h3>
                <a href="http://blog.csdn.net/ltyqljhwcm" target="_blank" class="more_z"><span>更多文章</span></a>
              </div>
                <ul class="inf_list clearfix csdn-tracking-statistics" data-mod="popu_382">
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53454971" target="_blank">POJ 3295 - 位运算 + 模拟 +递归</a>
                    </li>
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53444306" target="_blank">NYOJ 118 次小生成树</a>
                    </li>
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53434466" target="_blank">胜者树 败者树 K-路最佳归并树 高效外部排序</a>
                    </li>
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53411183" target="_blank">POJ 1062 - 昂贵的聘礼 - 经典题</a>
                    </li>
                    
                </ul>
            </div>
        </div>
        <div class="extension_other csdn-tracking-statistics" data-mod="popu_389">
						<!--u3032528-->
			<div class="flashrecommend">
            <script type="text/javascript" src="http://mpb1.iteye.com/bwocoltlyzdec.js"></script>
		    </div>
        </div>

		<div class="host-column">
          <h3>博主专栏</h3>
          <ul class="column-list">

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/13704.html">
                  <img src="http://img.blog.csdn.net/20161126164008952" alt="">
                  <div>15</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/13704.html">NYOJ 好题总结</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>3080</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/13628.html">
                  <img src="http://img.blog.csdn.net/20161121124730884" alt="">
                  <div>56</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/13628.html">POJ 专项题解</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>19375</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/13409.html">
                  <img src="http://img.blog.csdn.net/20161102193750895" alt="">
                  <div>4</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/13409.html">Leetcode</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>1266</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/12932.html">
                  <img src="http://img.blog.csdn.net/20160915093249392" alt="">
                  <div>8</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/12932.html">读书笔记</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2246</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/12704.html">
                  <img src="http://img.blog.csdn.net/20160826002037987" alt="">
                  <div>37</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/12704.html">算法与数据结构</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>41992</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/mystudyrecord001.html">
                  <img src="http://img.blog.csdn.net/20160809183336359" alt="">
                  <div>15</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/mystudyrecord001.html">微软面试百题</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>8448</span></div>
              </div>
            </li>

          </ul>
          <div class="unfold-btn">
            <span>展开</span><i class="icon iconfont icon-xiajiantou"></i>
          </div>
        </div>
		
        
        <div class="fixRight">
            <div class="right_box padb0 csdn-tracking-statistics" data-mod="popu_391">
                <h3 class="tit"><span><em>在线课程</em></span></h3>
                <ul class="edu_li clearfix">
                  
                  <li>
                    <div>
                      <a href="http://edu.csdn.net/huiyiCourse/series_detail/64?utm_source=blog7" target="_blank">
                        <img src="http://img.bss.csdn.net/201710111134087930.png" alt="Presto服务治理与架构优化在京东的实践应用" title="Presto服务治理与架构优化在京东的实践应用">
                      </a>
                    </div>
                    <div>
                      <p><a href="http://edu.csdn.net/huiyiCourse/series_detail/64?utm_source=blog7" target="_blank">Presto服务治理与架构优化在京东的实践应用</a></p>
                      <p>讲师：王哲涵</p>
                    </div>
                  </li>
                  
                  <li>
                    <div>
                      <a href="http://edu.csdn.net/huiyiCourse/detail/581?utm_source=blog7" target="_blank">
                        <img src="http://img.bss.csdn.net/201710111123195350.png" alt="【免费直播】Python最佳学习路线" title="【免费直播】Python最佳学习路线">
                      </a>
                    </div>
                    <div>
                      <p><a href="http://edu.csdn.net/huiyiCourse/detail/581?utm_source=blog7" target="_blank">【免费直播】Python最佳学习路线</a></p>
                      <p>讲师：韦玮</p>
                    </div>
                  </li>
                  
                </ul>
            </div>
			<!--u3032529-->
            <!-- <div class="extension_other csdn-tracking-statistics baidu_box" data-mod="popu_395">
								
                <script type="text/javascript" src="http://mpb1.iteye.com/cxpdpmumfaedgm.js"></script>
            </div> -->
			<div class="extension_other csdn-tracking-statistics bottomRcom" data-mod="popu_389" style="position:absolute;z-index:-5;opacity:0;pointer-events:none">
						<!--u3032528-->
				<div class="flashrecommend">
				<script type="text/javascript" src="http://mpb1.iteye.com/bwocoltlyzdec.js"></script>
				</div>
			</div>
        </div>
		<div class="user-hotArticle">
          <h3>热门文章</h3>
          <ul class="hotArticle-list">
 
            <li>
              <a href="/ltyqljhwcm/article/details/53043646">快速幂取模算法详解</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>5853</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/51952942">最短路径算法汇总</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>4540</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/52966874">ELFhash - 优秀的字符串哈希算法</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2787</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/52145746">快速排序全面讲解（含复杂度证明）——即将引出八大排序算法</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2041</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/52497853">2016BIT小学期——电话号码问题（哈希+位运算）</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>1921</span></div>
            </li>
 
          </ul>
        </div>


    </aside>
</div>

<div class="left_fixed">
      <div class="left_show_button">
        <span>
          <i class="icon iconfont icon-youjiantou"></i>
        </span>
      </div>
    <ul class="left_menu">

        <li>
            <button class="left-fixed-btn btn-like csdn-tracking-statistics" data-mod="popu_373" target="_self">
                <span class="iconbox border_red"><i class="icon iconfont icon-dianzan"></i></span>
				<span class="txt">0</span>
            </button>
        </li>
		<li id="blog_artical_directory">
            <button class="left-fixed-btn left_menu_btn csdn-tracking-statistics" data-mod="popu_372" target="_self">
                <span class="iconbox border_black"><i class="icon iconfont icon-mulu"></i></span>
            </button>
        </li>
        <li class="menu_con">
            <div class="list_father">
                <div class="arr_box">
                    <button class="btn-noborder arr-btn scroll-down  left_scroll_down"><i class="icon iconfont icon-xiajiantou"></i></button>
                    <button class="btn-noborder arr-btn scroll-up left_scroll_top"><i class="icon iconfont icon-shangjiantou"></i></button>
                </div>
                <div class="arr"></div>
                <div id="csdnBlogDir"></div>
            </div>
        </li>
        <li>
            <button class="left-fixed-btn csdn-tracking-statistics" data-mod="popu_374"  id="com-quick-collect" target="_self">
                <span class="iconbox border_purple"><i class="icon iconfont icon-shoucang"></i></span>
    
            </button>
        </li>
		<li>
          <button class="left-fixed-btn btn-pinglun" >
            <span class="iconbox border_purple"><i class="icon iconfont icon-pinglun"></i></span>
          </button>
        </li>
        <li id="share_box">
            <button class="left-fixed-btn  csdn-tracking-statistics"  data-mod="popu_375" target="_self">
                <span class="iconbox border_orange"><i class="icon iconfont icon-fenxiang"></i></span>
            </button>
            <div class="bdsharebuttonbox csdn-tracking-statistics" data-mod="popu_172">
                <div class="outside">
                    <span class="iconbox border_red2"><i class="icon iconfont icon-xinlang"></i></span>
                    <a href="#" class="bds_tsina" data-cmd="tsina" title="分享到新浪微博"> </a>
                </div>
                <div class="outside">
                    <span class="iconbox border_green"><i class="icon iconfont icon-weixin"></i></span>
                    <a href="#" class="bds_weixin" data-cmd="weixin" title="分享到微信"> </a>
                </div>
                <div class="outside">
                    <span class="iconbox border_blue"><i class="icon iconfont icon-QQ"></i></span>
                    <a href="#" class="bds_qzone" data-cmd="qzone" title="分享到QQ空间"> </a>
                </div>
            </div>
        </li>
    </ul>
</div>
<div class="right_fixed">
  <div class="r_ico">
	<i class="icon iconfont icon-jubao"></i>
	<span class="txt" id="reportBtn">内容举报</span>
  </div>
  <div class="returnTop">
   <i class="icon iconfont icon-fanhuidingbu"></i>
   <span>返回顶部</span>
 </div>
</div>
<div id="pop_win"></div>
<div id="popup_mask"></div>
<div class="pop_CA_cover" ></div>
<div class="pop pop_CA" >
    <div class="CA_header">
        收藏助手
        <span class="cancel_icon"  id="fapancle" ></span>
    </div>
    <iframe src="" id="collectIframe" frameborder="0" width="100%" height="360"  scrolling="no" ></iframe>
</div>
<!--举报-->
<div id="report_dialog" style="top: 250px; left: 343.5px;"><div id="panel_report">
    <div class="panel_head">不良信息举报</div>
    <form method="post" id="frmReport" class="panel_body">
        <table border="0" cellpadding="0" cellspacing="4" class="pop_table">
            <tbody><tr><td colspan="2">您举报文章：<a href="http://blog.csdn.net/raintungli/article/details/76583070" target="_blank">深度学习：神经网络中的前向传播和反向传播算法推导</a></td></tr>
            <tr>
                <th style="width:60px;">举报原因：</th>
                <td id="panel_reporttype">
                    <label><input type="radio" class="report_type" id="report_sex" name="report_type" value="1">色情</label>
                    <label><input type="radio" class="report_type" id="report_Politics" name="report_type" value="2">政治</label>
                    <label><input type="radio" class="report_type" id="report_copy" name="report_type" value="3">抄袭</label>
                    <label><input type="radio" class="report_type" id="report_ad" name="report_type" value="4">广告</label>
                    <label><input type="radio" class="report_type" id="report_want" name="report_type" value="5">招聘</label>
                    <label><input type="radio" class="report_type" id="report_call" name="report_type" value="6">骂人</label>
                    <br>
                    <label><input type="radio" class="report_type" id="report_other" name="report_type" value="7">其他</label>
                    <input type="text" name="report_other_content" id="report_other_content" maxlength="30" style="display: none;">
                </td>
            </tr>
            <tr id="panel_originalurl" style="display: none;">
                <th>原文地址：</th>
                <td>
                    <input id="originalurl" value="http://" name="originalurl" type="text" style="width: 90%;">
                </td>
            </tr>
            <tr>
                <th id="sp_reason">原因补充：</th>
                <td>
                    <textarea id="report_description" style="width: 300px;" rows="3" name="report_description"></textarea>
                    <p id="sp_n" style="color:#999;margin:0px;padding:0px;">(最多只允许输入30个字)</p>
                </td>
            </tr>
            <tr>
                <td></td>
                <td>
                    <input id="btnSubmitReport" name="submit" type="image" align="middle" class="btn_1" src="http://static.blog.csdn.net/images/btn_submit.jpg">
                    <span style="padding-left:20px;"></span>
                    <img id="btnCloseReportDialog" src="http://static.blog.csdn.net/images/btn_cancel.jpg" align="middle">
                    <div id="error" style="color: Red">
                    </div>
                </td>
            </tr>
            </tbody></table>
    </form>
</div>
    <script language="javascript" type="text/javascript">
        var isComment=0;
        //显示隐藏地址
        $(function () {
            if(isComment){
                $("#report_description").attr("disabled",true);
                $("#sp_n").hide();
                $("#sp_reason").html("评论内容：");
            }
            $(".report_type").click(function () {
                $("#panel_originalurl,#report_other_content").hide();
                switch ($(this).val()) {
                    case '3':
                        $("#panel_originalurl").show();
                        $("#originalurl").focus();
                        break;
                    case '7':
                        if(isComment){
                            $("#report_other_content").show().focus();
                        }
                        break;
                }

            });

            $("#frmReport").submit(function () {
                if (!currentUserName) {

                    if (confirm("您的操作必须登录，是否登录？")) {
                        location.href = "http://passport.csdn.net/account/login?from=" + encodeURIComponent(location.href);
                        return false;
                    }
                    return false;
                }

                var reportType = $("input[name=report_type]:checked").val();
                if(!reportType){
                    alert("请选择举报原因！");
                    return false;
                }
                var otherInfo = "";
                switch (reportType) {
                    case '3':
                        otherInfo = $("#originalurl").val();
                        if (otherInfo == ""||otherInfo=="http://") {
                            alert("举报抄袭必须提供原创文章地址！");
                            $("#originalurl").focus();
                            return false;
                        } else if(!checkeURL(otherInfo)) {
                            alert("请输入正确的原创文章地址！");
                            $("#originalurl").focus();
                            return false;
                        }
                        break;
                    case '7':
                        otherInfo = $("#report_other_content").val();
                        if (isComment && !otherInfo) {
                            alert("请填写举报的具体原因！");
                            $("#report_other_content").focus();
                            return false;
                        }
                        if(!isComment){
                            if(!$("#report_description").val()){
                                alert("请填写举报的具体原因！");
                                $("#report_description").focus();
                                return false;
                            }
                        }
                        break;
                }
                if(!isComment){
                    if($("#report_description").val().length>30){
                        alert("举报原因最多只允许输入30个字！");
                        return false;
                    }
                }

                var data = {
                    articleId: 76583070,
                    commentId: 0,
                    reportType: reportType,
                    originalurl: $("#originalurl").val(),
                    report_other_content: $("#report_other_content").val(),
                    report_description: $("#report_description").val(),
                    currentUserName: currentUserName,
                    updatetime: "2017/8/8 16:54:12",
                    blogUser: "raintungli"
                };
                if(!isComment){//如果是举报文章
                    data.report_other_content = data.report_description;
                    data.report_description = "1. 神经网络这是一个常见的神经网络的图：这是一个常见的三层神经网络的基本构成，Layer L1是输入层，Layer L2是隐含层";
                }

                $.post(blog_address + "/common/report?id=76583070&t=2", data, function (data) {
                    if (data.result == 1){
                        SetError("感谢您的举报，我们会尽快审核！");
                    }else{
                        if (data.content) alert(data.content);
                    }

                });
                return false;
            });

            $("#btnCloseReportDialog").click(function () {
                CloseDiv();
            });

        });

        //提示后关闭方法
        function SetError(error) {
            $("#btnCloseReportDialog").trigger("click");
            alert(error);
            CloseDiv();
        }

        //关闭方法
        function CloseDiv() {

            $.removeMask();
            $("#report_dialog").hide().html("");
            return false;
        }

        //验证url
        function checkeURL(url){
            return /^http(s)?:\/\/([\w-]+\.)+[\w-]+/i.test(url);
        }
    </script>
</div>

<script src="http://c.csdnimg.cn/public/common/libs/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/public/res/bower-libs/MathJax/MathJax.js?config=TeX-AMS_HTML"></script>
<script type="text/javascript" src="http://passport.csdn.net/content/loginbox/login.js"></script>

<script type="text/javascript" src="http://static.blog.csdn.net/Skin/skin3-template/js/blog_ver.js?v=3"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/Skin/skin3-template/js/skin2017.js?v=2017.032"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/cnick.js"></script>
<script>window._bd_share_config = { "common": { "bdSnsKey": {}, "bdText": "", "bdMini": "1", "bdMiniList": false, "bdPic": "", "bdStyle": "0", "bdSize": "16" }, "share": {} }; with (document) 0[(getElementsByTagName('head')[0] || body).appendChild(createElement('script')).src = 'http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion=' + ~(-new Date() / 36e5)];</script>
<script type="text/javascript" >
    if($(".article_collect li").length==1){$(".article_collect").hide();}
    if($(".article_tags li").length==1){$(".article_tags").hide();}
    $(".edit a").attr("href","http://write.blog.csdn.net/postedit/"+fileName);
    $.each($(".edu_li a"),function(){$(this).attr("href",$(this).attr("href").replace("blog7","blog9"))});
    new CNick('#uid').showNickname();
if($("#fan").html()=="")
{
$("#fan").html(0);	
}
</script>
</body>

<script  type="text/javascript">
    var fromjs=$("#fromjs");
    if(fromjs.length>0)
    {                  
        $("#fromjs .markdown_views pre").addClass("prettyprint");       
        prettyPrint();

        $('pre.prettyprint code').each(function () {
            var lines = $(this).text().split('\n').length;
            var $numbering = $('<ul/>').addClass('pre-numbering').hide();
            $(this).addClass('has-numbering').parent().append($numbering);
            for (i = 1; i <= lines; i++) {
                $numbering.append($('<li/>').text(i));
            };
            $numbering.fadeIn(1700);
        });

        $('.pre-numbering li').css("color","#999");             
    }

    $(function(){
        setTimeout(function(){
            $(".math").each(function(index,value){$(this).find("span").last().css("color","#fff"); })
        },500);         
       

    });

    setTimeout(function () {
        $(".toc a[target='_blank']").attr("target", "");
    }, 500);

</script>
</html>

