
<!DOCTYPE html>
<html>
<head>
            <link rel="canonical" href="http://blog.csdn.net/ltyqljhwcm/article/details/52727024"/> 

    <script type="text/javascript">
        var username = "ltyqljhwcm";var _blogger = username;var blog_address = "http://blog.csdn.net/ltyqljhwcm";var static_host = "http://static.blog.csdn.net";
        var currentUserName = ""; var fileName = '52727024';var commentscount = 0; var islock = false
        window.quickReplyflag = true;
        var totalFloor=0;
                
                 var isBole = false;
                
                
                 var isDigg = false;
                
          
             var isExpert=false;
          
    </script>

<meta http-equiv="content-type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <script src="http://c.csdnimg.cn/public/common/libs/jquery/jquery-1.9.1.min.js" type="text/javascript"></script>
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/common/libs/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/static/css/avatar.css">
    <link type="text/css" rel="stylesheet" href="http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/default.css" />
    <link rel="stylesheet" href="http://static.blog.csdn.net/Skin/skin3-template/css/style.css?v=2017.032">
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/common/toolbar/content_toolbar_css/content_toolbar.css">

    <script type="text/javascript" src="http://static.blog.csdn.net/Skin/skin3-template/fonts/iconfont.js"></script>
    <script src="//csdnimg.cn/rabbit/exposure-click/main.js?v1.15.23"></script>
    <script type="text/javascript" src="http://c.csdnimg.cn/pubfooter/js/tracking_for_recommend.js?v=0911" charset="utf-8"></script>
    <script type="text/javascript" src="http://csdnimg.cn/pubfooter/js/tracking.js" charset="utf-8"></script>
    <script type="text/javascript" src="http://static.blog.csdn.net/scripts/cnick.js" charset="utf-8"></script>
 
    <link rel="stylesheet" href="http://static.blog.csdn.net/code/prettify.css" />
    <script type="text/javascript" src="http://static.blog.csdn.net/code/prettify.js"></script>
<script src="http://dup.baidustatic.com/js/ds.js"></script>
    <script type="text/javascript">

        // Traffic Stats of the entire Web site By baidu
        var _hmt = _hmt || [];
        (function() {
            var hm = document.createElement("script");
            hm.src = "https://hm.baidu.com/hm.js?6bcd52f51e9b3dce32bec4a3997715ac";
            var s = document.getElementsByTagName("script")[0];
            s.parentNode.insertBefore(hm, s);
        })();
        // Traffic Stats of the entire Web site By baidu end



    </script>
    <meta name="description" content="1.什么是字典树
字典树，又称单词查找树或者键树，或者前缀树，是哈希树的一种变种，典型的应用就是保存大量的字符串的信息，统计和排序大规模字符串，因为采用了前缀的概念，压缩存储了部分的字符串，所以说，查询和查找效率都非常的高，接近于哈希
主要思想就是，利用了空间换时间的思路，将多个字符串的最大公共前缀压缩存储
示例图：


2.字典树的ADT
描述如下：
1.根节点不含有键值
2." />
    <meta name="keywords" content="遍历,二叉树" />
    <meta http-equiv="Cache-Control" content="no-siteapp" /><link rel="alternate" media="handheld" href="#" />
    <meta name="shenma-site-verification" content="5a59773ab8077d4a62bf469ab966a63b_1497598848">


    <title>字典树 Trie - CSDN博客</title>
</head>
<body>
<script id="toolbar-tpl-scriptId" prod="download" skin="black" src="http://c.csdnimg.cn/public/common/toolbar/js/content_toolbar.js" type="text/javascript" domain="http://blog.csdn.net"></script>

<div class="container clearfix">
    <main>
        <article>
            <h1 class="csdn_top">字典树 Trie</h1>
            <div class="article_bar clearfix">
                <div class="artical_tag">
                    <span class="original">原创</span>
                    <span class="time">2016年10月03日 12:52:06</span>
                </div>
				<ul class="article_tags clearfix csdn-tracking-statistics" data-mod="popu_377">
					<li class="tit">标签：</li>
					
					<li><a href="http://so.csdn.net/so/search/s.do?q=遍历&t=blog" target="_blank">遍历</a> <span>/</span></li>
					
					<li><a href="http://so.csdn.net/so/search/s.do?q=二叉树&t=blog" target="_blank">二叉树</a> <span>/</span></li>
					
					<li><a href="http://so.csdn.net/so/search/s.do?q=算法&t=blog" target="_blank">算法</a> <span>/</span></li>
					
					<li><a href="http://so.csdn.net/so/search/s.do?q=dfs&t=blog" target="_blank">dfs</a> <span>/</span></li>
					
					<li><a href="http://so.csdn.net/so/search/s.do?q=adt&t=blog" target="_blank">adt</a> <span>/</span></li>
					
				</ul>
                <ul class="right_bar">
                    <li><button class="btn-noborder"><i class="icon iconfont icon-read"></i><span class="txt">459</span></button></li>
                    <!--<li><button class="btn-noborder"><i class="icon iconfont icon-dashang-"></i><span class="txt">0</span></button></li>-->

                    <li class="edit">
                        <a class="btn-noborder" href="" >
                            <i class="icon iconfont icon-bianji"></i><span class="txt">编辑</span>
                        </a>
                    </li>
                    <li class="del">
                        <a class="btn-noborder" onclick="javascript:deleteArticle(fileName);return false;">
                            <i class="icon iconfont icon-shanchu"></i><span class="txt">删除</span>
                        </a>
                    </li>
                </ul>
            </div>
            <div id="article_content" class="article_content csdn-tracking-statistics" data-mod="popu_307" data-dsm="post">
                
<h2>1.什么是字典树</h2>
<div>字典树，又称单词查找树或者键树，或者前缀树，是哈希树的一种变种，典型的应用就是保存大量的字符串的信息，统计和排序大规模字符串，因为采用了前缀的概念，压缩存储了部分的字符串，所以说，查询和查找效率都非常的高，接近于哈希</div>
<div>主要思想就是，利用了空间换时间的思路，将多个字符串的最大公共前缀压缩存储</div>
<div>示例图：</div>
<div><img src="http://img.my.csdn.net/uploads/201210/31/1351652182_4860.png" alt=""><br>
</div>
<h2>2.字典树的ADT</h2>
<div>描述如下：</div>
<div>1.根节点不含有键&#20540;</div>
<div>2.每个节点之下有多个指针指向下一个待查键位</div>
<div>3.每个节点的子节点各不相同</div>
<div><br>
</div>
<div>主要的核心数据域</div>
<div>1.键&#20540;（该节点的键&#20540;保存）</div>
<div>2.子指针（如果是孩子兄弟树存储方式还有兄弟指针，子指针还可以作为叶子节点和树节点的区分标志）-如果采用孩子兄弟表示法，我们又称其为双链树</div>
<div>3.标记域（记录该单词是否出现过，因为我们采取了压缩存储公共前缀的方式，所以说，我们有必要对标记域进行声明）</div>
<div>4.kind标记域，标记该节点是叶子节点还是树节点</div>
<div>5.其他（根据题目的具体要求，我们还可以加设其他的结构，方便问题的解决）</div>
<h2><br>
</h2>
<div>操作：</div>
<div>1.插入单词</div>
<div>2.查询单词</div>
<div>3.建树</div>
<div>4.销毁树</div>
<div>5.DFS（深度优先遍历）-如果本树建立之时就已经采用了语序的状态，那么我们深度优先的前序遍历该子树就会得到字典序排列</div>
<h2>3.复杂度以及比较</h2>
<div>假设双链树的查找基（关键字的基就是我们关键字的键的最大种类数，有点类&#20284;于我们的基数排序里面的基）是d</div>
<div>双链树的平均树深是h</div>
<div>1.在双链树中每一位的平均查找长度是</div>
<div><pre code_snippet_id="1911157" snippet_file_name="blog_20161003_1_7497130"  name="code" class="cpp">sum(p+p*2+p*3+...+p*d)=sum((1+d)*d*p/2)
p=1/d
sum=(1+d)/2</pre>2.在双链树中查找单词的平均查找长度是</div>
<div><pre code_snippet_id="1911157" snippet_file_name="blog_20161003_2_9591464"  name="code" class="html">(1+d)*h/2</pre>
<div><br>
</div>
比较：</div>
<div>相对于哈希表的查找来说，我们每次的时间耗费大多都是浪费存在遍历单词上了，哈希表可以做到O(1)的查询，但是还是需要遍历，所以说是O(h)</div>
<div>但是哈希的建树操作时间复杂度其实和字典树是一样的，但是我们完全可以在字典树中实现，查询&#43;建树同时进行，但是哈希表就不行了</div>
<div><br>
</div>
<div><strong>采用双链树的话，我们虽然可以节省内存，但是在查询的时候，我们必须对下一层的子指针进行相应的遍历，会比较耗时，但是对于稀疏的状态来说还是非常的优秀的</strong></div>
<div>
<h2>4.操作解析</h2>
<div>为了降低内存的消耗，本文中描述中全部采用双链树的形式</div>
<h3>1.查询操作</h3>
首先，我们在对单词便利的过程中完成对树的遍历操作，从根节点开始，对于单词的每一位我们在子指针中查找有没有匹配节点</div>
<div>1.没有匹配节点，返回失败</div>
<div>2.有匹配节点继续开始步骤，知道我们单词查询遍历完毕</div>
<div>&nbsp; &nbsp; &nbsp;1.如果单词查询完，标记域是否，代表我们这个单词只是作为其他单词的前缀出现过，之前没有出现过这个单词，我们对单词标记域进行修改，返回失败</div>
<div>&nbsp; &nbsp; &nbsp;2.如果标记域是是，我们进行其他的操作（比如计数什么的）返回成功</div>
<div><br>
</div>
<h3>2.插入操作（建树）</h3>
<div>同上，我们首先从根节点开始</div>
<div>1.子指针中如果对当前的关键字的位有相应的指针，那么继续遍历</div>
<div>2.如果不存在相应的指针，我们开始&#24636;该单词的每一位进行建树操作，对每一次便利的单词的位扩展构建子节点，并在最后的时候，对叶子节点的标记域进行修改</div>
<h3>3.销毁</h3>
<div>销毁一颗字典树我们需要对数进行后序遍历，这是很简单的</div>
<h3>4.有序输出</h3>
<div>前序遍历Trie</div>
<h2>5.封装代码</h2>
<div><pre code_snippet_id="1911157" snippet_file_name="blog_20161003_3_1685016"  name="code" class="cpp">#include&quot;iostream&quot;
#include&quot;cstdio&quot;
#include&quot;cstdlib&quot;

using namespace std;

typedef struct node
{
	char key;   //键值
	struct node* son[26];   //以英文字母为例 
	bool flag;   //标记是否存在过	
	bool lort;   //标记是叶子节点还是树节点 
}point;

class Trie
{
	public:
		Trie()
		{
			root=new point;
			root-&gt;flag=false;
			root-&gt;key=&#39;#&#39;;  //空标记 
			root-&gt;lort=true;   //开始是空树，必然是叶子节点 
			memset(data,0,sizeof(data));
			for(int i=0;i&lt;26;i++) root-&gt;son[i]=NULL;
		}
		~Trie()
		{
			clear(root);
		}
		friend istream&amp; operator&gt;&gt;(istream&amp;,Trie&amp;); 
		void clear(point*);   //后序遍历清空Trie
		void insert(point*,int);   //建树+插入
		bool find(point*,int);   //查询
		void scan(point*,int);   //前序遍历输出字典序 
		inline void initdata()
		{
			memset(data,0,sizeof(data));
		}
		inline point* returnroot()   //返回根节点指针 
		{
			return root;
		}
	private:
		point* root;   //空表头指针 
		char data[20];   //不超过20个字母的单词 
		char a[20];
};

istream&amp; operator&gt;&gt;(istream&amp; in,Trie&amp; p)
{
	cout&lt;&lt;&quot;&gt;&gt;&gt; &quot;;
	in&gt;&gt;p.data;
	return in;
}

void Trie::insert(point* now,int i)
{
	if(data[i]==&#39;\0&#39;) return ;
	if(now-&gt;son[data[i]-&#39;a&#39;]==NULL)
	{
		now-&gt;lort=false;   //不是叶子节点了 
		now-&gt;son[data[i]-&#39;a&#39;]=new point;
		now-&gt;son[data[i]-&#39;a&#39;]-&gt;key=data[i];
		if(data[i+1]==&#39;\0&#39;) now-&gt;son[data[i]-&#39;a&#39;]-&gt;flag=true;
		else now-&gt;son[data[i]-&#39;a&#39;]-&gt;flag=false;
		for(int j=0;j&lt;26;j++) now-&gt;son[data[i]-&#39;a&#39;]-&gt;son[j]=NULL;
		insert(now-&gt;son[data[i]-&#39;a&#39;],i+1);
	}
	else insert(now-&gt;son[data[i]-&#39;a&#39;],i+1);
}

bool Trie::find(point* p,int i)
{
	if(data[i]==&#39;\0&#39;&amp;&amp;p-&gt;flag==true) return true;
	else
	{
		if(data[i]==&#39;\0&#39;&amp;&amp;p-&gt;flag==false) return false;
		else
		{
			if(p-&gt;son[data[i]-&#39;a&#39;]==NULL) return false;
			else return find(p-&gt;son[data[i]-&#39;a&#39;],i+1);
		} 
	} 
}

void Trie::scan(point* p,int i)
{
	 if(p-&gt;lort==true) 
	 {
	 	a[i]=p-&gt;key;
	 	for(int j=1;j&lt;=i;j++) cout&lt;&lt;a[j];
	 	cout&lt;&lt;endl;
	 	return ;
	 }
	 else
	 {
	 	for(int j=0;j&lt;26;j++)
	 	{
	 		if(p-&gt;son[j]!=NULL) 
	 		{
	 			a[i]=p-&gt;key;
				scan(p-&gt;son[j],i+1); 
	 		}
	 	}
	 }
}

void Trie::clear(point* p)
{
	if(p-&gt;lort==true) free(p);
	else 
	{
		for(int i=0;i&lt;26;i++)
		{
			if(p-&gt;son[i]!=NULL) clear(p-&gt;son[i]);
		}
	}
}

int main()
{
	Trie my;
	int t=10;
	while(t--)
	{
		cin&gt;&gt;my;
		my.insert(my.returnroot(),0);
		my.initdata();
	}
	t=5;
	while(t--)
	{
		cin&gt;&gt;my;
		if(my.find(my.returnroot(),0)) cout&lt;&lt;&quot;Yes!&quot;&lt;&lt;endl;
		else cout&lt;&lt;&quot;No!&quot;&lt;&lt;endl; 
	}
	my.scan(my.returnroot(),0);
	return 0;
} </pre><br>
<br>
</div>
<h2>6.待解</h2>
<div>1.DFA（有限状态机）</div>
<div>2.Double-Array Trie / Tripple-Array Trie(对空间的压缩，基于DFA)</div>
<div>3.叶子节点真的要保存整个剩余的字段吗？</div>
<h2>7.OJ例题及解析</h2>
<div>1.HDU 1251</div>
<div><pre code_snippet_id="1911157" snippet_file_name="blog_20161003_4_4542718"  name="code" class="cpp">#include&quot;iostream&quot;
#include&quot;cstdio&quot;
#include&quot;cstring&quot;
#include&quot;cstdlib&quot;

using namespace std;

typedef struct node
{
	char key;
	struct node* son[26];
	int count;   //记录以该字符为后缀的前缀单词的个数 
}point;

point* root;
char data[12];

void insert()
{
	point* p=root;
	int j=0;
	while(data[j]!=&#39;\0&#39;)
	{
		int k=data[j]-&#39;a&#39;;
		if(p-&gt;son[k]!=NULL) p=p-&gt;son[k],p-&gt;count++;
		else
		{
			p-&gt;son[k]=new point;
			p-&gt;son[k]-&gt;key=data[j];
			p-&gt;son[k]-&gt;count=1;
			for(int i=0;i&lt;26;i++) p-&gt;son[k]-&gt;son[i]=NULL; 
			p=p-&gt;son[k];
		}
		j++;
	}
	memset(data,0,sizeof(data));
}

int dosomething()
{
	point* p=root;
	int j=0;
	while(data[j]!=&#39;\0&#39;)
	{
		int k=data[j]-&#39;a&#39;;
		if(p-&gt;son[k]!=NULL) p=p-&gt;son[k];
		else return 0;
		j++;
	}
	return p-&gt;count; 
} 

int main()
{
	root=new point;
	for(int i=0;i&lt;26;i++) root-&gt;son[i]=NULL;
	while(gets(data)&amp;&amp;data[0]!=&#39;\0&#39;) insert();
	while(gets(data)!=NULL) cout&lt;&lt;dosomething()&lt;&lt;endl; 
	return 0;
}
 </pre><br>
2.1671</div>
<div><pre code_snippet_id="1911157" snippet_file_name="blog_20161003_5_3604627"  name="code" class="cpp">#include&quot;iostream&quot;
#include&quot;cstdio&quot;
#include&quot;cstring&quot;
#include&quot;cstdlib&quot;

using namespace std;

typedef struct node
{
	int key;  //键
	struct node* son[10];   //英文字母，如果是其他情况，调整就好
	bool flag;  //判断是否出现过
	bool fornext;
//	int count;   前缀的数目等其他的信息 
}point;

point* root;
char data[12];
bool ok;   //记录当前号码是否存在过 

bool insert()
{
	bool youxinjiedianshengcheng=false;
	int j=0;
	point* p=root;
	while(data[j]!=&#39;\0&#39;)
	{
		int k=data[j]-&#39;0&#39;;
		if(p-&gt;son[k]==NULL) 
		{
			youxinjiedianshengcheng=true;
			p-&gt;son[k]=new point;
			p-&gt;fornext=false;
			p-&gt;son[k]-&gt;key=k;
			for(int i=0;i&lt;=9;i++) p-&gt;son[k]-&gt;son[i]=NULL;
			p-&gt;son[k]-&gt;flag=false;
			p=p-&gt;son[k];
		}
		else
		{
			if(p-&gt;son[k]-&gt;flag==true) ok=true;
			p-&gt;fornext=false;
			p=p-&gt;son[k];
		}
		j++;
	}
	p-&gt;flag=true;
	p-&gt;fornext=true;
	if(ok==true||youxinjiedianshengcheng==false) return false;
	else return true;
}

void dfs(point* gen)
{
	if(gen-&gt;fornext==true) 
	{
		delete gen;
		return ;
	}
	else
	{
		for(int i=0;i&lt;=9;i++)
		{
			if(gen-&gt;son[i]!=NULL) 
			{
				dfs(gen-&gt;son[i]);
				gen-&gt;son[i]=NULL;
			}
		}
		delete gen;
	}
}

int main()
{
	int t;
	cin&gt;&gt;t;getchar();
	root=new point;
	root-&gt;flag=false;
	for(int i=0;i&lt;10;i++) root-&gt;son[i]=NULL;
	root-&gt;key=-1;
	while(t--)
	{
		bool yes=false;
		int k;
		cin&gt;&gt;k;getchar();
		while(k--)
		{
			ok=false; 
			gets(data);
			if(insert()==false) yes=true; 
		}
		if(yes==false) cout&lt;&lt;&quot;YES&quot;&lt;&lt;endl;
		else cout&lt;&lt;&quot;NO&quot;&lt;&lt;endl;
		
		dfs(root);
		root=new point;
    	root-&gt;flag=false;
		for(int i=0;i&lt;10;i++) root-&gt;son[i]=NULL;
	}
	return 0;
}</pre><br>
<br>
</div>
<link rel="stylesheet" href="http://static.blog.csdn.net/public/res-min/markdown_views.css?v=2.0" />
            </div>
        </article>
        <div class="readall_box csdn-tracking-statistics" data-mod="popu_376">
			<div class="read_more_mask"></div>
            <a class="btn btn-large btn-gray-fred read_more_btn" target="_self">阅读全文</a>
        </div>
        <div class="article_copyright">
            版权声明：本文为博主原创文章，未经博主允许不得转载。
        </div>
        <!--  <div class="reward_box">
            <div class="tit">
              <button class="btn_reward"><i class="icon iconfont icon-dashang-"></i></button>
            </div>
            <dl class="clearfix">
              <dt><a href="#" target="_blank">近期打赏</a></dt>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
            </dl>
          </div>-->

        <ul class="article_collect clearfix csdn-tracking-statistics"  data-mod="popu_378">
            <li class="tit">本文已收录于以下专栏：</li>
            
            <li><a href="http://blog.csdn.net/column/details/12704.html" target="_blank">算法与数据结构</a></li>
            
        </ul>
        <div class="comment_box clearfix">
            <div id="comment_form">
                <div id="commentsbmitarear">
                    <!-- <h6><span>0</span>条评论</h6> -->
           <!--          <dl class="clearfix" id="commentbox">
                        <dt>
                            <a href="http://my.csdn.net/"><img src="" ></a>
                        </dt>
                        <dd>
                            <a href="http://my.csdn.net/" target="_blank"></a>
                        </dd>
                        <dd class="txt_tip"><span id="tip_comment" class="tip"></span></dd>
                    </dl> -->
                    <div class="comment_area clearfix">
						<div class="userimg"><a href="http://my.csdn.net/"><img src=""></a></div>
                        <form action="/ltyqljhwcm/comment/submit?id=52727024" method="post" onsubmit="return subform(this);" id="commentform">
                            <textarea class="comment_content" name="comment_content" id="comment_content" placeholder="发表你的评论"></textarea>
                            <div class="bot_bar clearfix">
                                <div id="ubbtools" class="add_code">
                                    <a href="#insertcode" code="code" target="_self"><i class="icon iconfont icon-daima"></i></a>
                                </div>

                                <input type="hidden" id="comment_replyId" name="comment_replyId">
                                <input type="hidden" id="comment_userId" name="comment_userId" value="">
                                <input type="hidden" id="commentId" name="commentId" value="">
                                <input type="submit" class="btn btn-redborder" value="发表评论">
								<span id="tip_comment" class="tip">
                                <div style="display: none;" class="csdn-tracking-statistics" data-mod="popu_384"><a href="#" target="_blank" class="comment_area_btn">发表评论</a></div>

                                <div id="lang_list" code="code">
                                    <a href="#html" style="width:95px;" class="long_name" target="_self">HTML/XML</a>
                                    <a href="#objc" style="width:95px;" class="long_name" target="_self">objective-c</a>
                                    <a href="#delphi" style="width:58px;" class="zhong_name" target="_self">Delphi</a>
                                    <a href="#ruby" class="zhong_name" target="_self">Ruby</a>
                                    <a href="#php" target="_self">PHP</a>
                                    <a href="#csharp" class="duan_name" target="_self">C#</a>
                                    <a style=" border-right: none;" href="#cpp" class="duan_name" target="_self">C++</a>
                                    <a style=" border-bottom:none;width:95px;" href="#javascript" class="long_name" target="_self">JavaScript</a>
                                    <a style=" border-bottom:none;width:95px;" href="#vb" class="long_name" target="_self">Visual Basic</a>
                                    <a style=" border-bottom:none;" href="#python" class="zhong_name" target="_self">Python</a>
                                    <a style=" border-bottom:none;" href="#java" class="zhong_name" target="_self">Java</a>
                                    <a style="border-bottom:none;" href="#css" class="duan_name" target="_self">CSS</a>
                                    <a style="border-bottom:none;" href="#sql" class="duan_name" target="_self">SQL</a>
                                    <a style="border:none; " href="#plain" class="duan_name" target="_self">其它</a>
                                    <span class="arrb"></span>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="comment_li_outbox">
            <div id="comment_list"></div>
        </div>

        <div class="more_comment">
            <div id="comment_bar" class="trackgin-ad" data-mod="popu_385"></div>
        </div>

        <h3 class="recommend_tit">相关文章推荐</h3>
        <div class="recommend_list clearfix">
            
            <dl class="clearfix csdn-tracking-statistics downloadElement" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
               	<dt><a href="http://download.csdn.net/detail/u013761665/9186431" target="_blank" strategy="BlogCommendFromCsdn_0"><img class="maxwidth" src="http://download.csdn.net/images/minetype/zip.svg" alt="" title=""></a></dt>
		<dd>
			<div class="summary">
				<h2><a href="http://download.csdn.net/detail/u013761665/9186431" target="_blank" strategy="BlogCommendFromCsdn_0">字典树(Trie)的基本使用</a></h2>
				<div class="summary">
				  <ul>
					  <li class="time">2015-10-16 14:08</li>
					  <li class="visited_num fileSize">18KB</li>
					  <li class="download_btn"><a href="http://download.csdn.net/detail/u013761665/9186431">下载</a></li>
				  </ul>
				</div> 
			</div>
		</dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/xyqzki/article/details/50395601"  target="_blank" strategy="BlogCommendFromCsdn_1">leetcode -- Implement Trie (Prefix Tree) -- 关于字典树，重要</a></h2>
                    <div class="summary">
                        https://leetcode.com/problems/implement-trie-prefix-tree/关于字典树介绍http://www.cnblogs.com/tanky_woo/arc...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/xyqzki" target="_blank" strategy="BlogCommendFromCsdn_1"><img src="http://avatar.csdn.net/D/7/A/2_xyqzki.jpg" alt="xyqzki" title="xyqzki"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/xyqzki">xyqzki</a></li>
                        <li class="time">2015-12-24 16:58</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>307</span></li>
                    </ul>
                </dd>
            </dl>
            
            <!--dl class="clearfix csdn-tracking-statistics" data-mod="popu_393">
                <dt><a href="http://edu.csdn.net/huiyiCourse/series_detail/64?utm_source=blog10" target="_blank"><img class="maxwidth" src="http://img.blog.csdn.net/20170928113144608" alt="" title=""></a></dt>
                <dd>
                    <div class="summary">
                        <h2><a href='http://edu.csdn.net/topic/python1?utm_source=blog10' target='_blank'>伤心啊！年度热门编程语言排行榜出来了...</a></h2>  <div class="summary">近期，IEEE Spectrum 发布了第四届顶级编程语言交互排行榜。结合 10 个线上数据源的 12 个标准，对 48 种语言进行了排行！此外，七牛云许式伟曾说过Go语言会取代Java...气氛... </div> 
                    </div>
                </dd>
            </dl-->
	<script>
		(function() {
		    var s = "_" + Math.random().toString(36).slice(2);
		    document.write('<div id="' + s + '"></div>');
		    (window.slotbydup=window.slotbydup || []).push({
			id: '4765209',
			container: s,
			size: '808,120',
			display: 'inlay-fix'
		    });
		})();
	</script>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/jacketinsysu/article/details/50931986"  target="_blank" strategy="BlogCommendFromCsdn_2">字典树Trie实战</a></h2>
                    <div class="summary">
                        问起起源于在学堂在线上的《软件工程》这门课，一般每章后面都会有一个实践作业，发现其难度可以比拟大一大二的课程大作业，早有这样的训练强度该有多好呢？呵呵O(∩_∩)O~A. 问题描述 
以上是基础的要求...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/Jacketinsysu" target="_blank" strategy="BlogCommendFromCsdn_2"><img src="http://avatar.csdn.net/A/D/E/2_jacketinsysu.jpg" alt="Jacketinsysu" title="Jacketinsysu"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/Jacketinsysu">Jacketinsysu</a></li>
                        <li class="time">2016-03-19 17:21</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>354</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/gamesofsailing/article/details/36421539"  target="_blank" strategy="BlogCommendFromCsdn_3">DFA和trie字典树实现敏感词过滤（python和c语言）</a></h2>
                    <div class="summary">
                        现在做的项目都是用python开发，需要用做关键词检查，过滤关键词，之前用c语言做过这样的事情，用字典树，蛮高效的，内存小，检查快。
到了python上，第一想法是在pip上找一个基于c语言的pyth...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/smallmelon" target="_blank" strategy="BlogCommendFromCsdn_3"><img src="http://avatar.csdn.net/7/8/7/2_smallmelon.jpg" alt="smallmelon" title="smallmelon"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/smallmelon">smallmelon</a></li>
                        <li class="time">2014-07-02 15:50</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>3592</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/yaokai_assultmaster/article/details/76679097"  target="_blank" strategy="BlogCommendFromCsdn_4">Trie（字典树）的Java实现</a></h2>
                    <div class="summary">
                        Trie（字典树，单词查找树）的java实现。
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/Yaokai_AssultMaster" target="_blank" strategy="BlogCommendFromCsdn_4"><img src="http://avatar.csdn.net/B/3/D/2_yaokai_assultmaster.jpg" alt="Yaokai_AssultMaster" title="Yaokai_AssultMaster"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/Yaokai_AssultMaster">Yaokai_AssultMaster</a></li>
                        <li class="time">2017-08-04 13:14</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>109</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/leo115/article/details/7653505"  target="_blank" strategy="BlogCommendFromCsdn_5">POJ 3283 典型的字典树trie tree 问题</a></h2>
                    <div class="summary">
                        本题是要实现一个倒置的字典树，此处用map来存储键值key以及所对应的权值value，方便搜索；
本题有一个需要注意的地方；由于要从后开始向前来建立字典树，尽量使用 栈 stack 来存储 key ...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/leo115" target="_blank" strategy="BlogCommendFromCsdn_5"><img src="http://avatar.csdn.net/4/3/0/2_leo115.jpg" alt="leo115" title="leo115"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/leo115">leo115</a></li>
                        <li class="time">2012-06-11 18:11</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>1072</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/hihozoo/article/details/51248823"  target="_blank" strategy="BlogCommendFromCsdn_6">字典树Trie</a></h2>
                    <div class="summary">
                        字典树字典树——Trie树，又称为前缀树（Prefix Tree）、单词查找树或键树，是一种多叉树结构。
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/hihozoo" target="_blank" strategy="BlogCommendFromCsdn_6"><img src="http://avatar.csdn.net/0/A/E/2_hihozoo.jpg" alt="hihozoo" title="hihozoo"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/hihozoo">hihozoo</a></li>
                        <li class="time">2016-04-26 11:01</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>1843</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/acmore_xiong/article/details/47325569"  target="_blank" strategy="BlogCommendFromCsdn_7">poj 3630 / hdu 1671 Phone List  【Trie字典树 动态创建&amp;静态创建】</a></h2>
                    <div class="summary">
                        Phone List

Time Limit:&#160;1000MS
&#160;
Memory Limit:&#160;65536K


Total Submissions:&#160;25160
&#160;
Accepted:&#160;7641

D...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/ACMore_Xiong" target="_blank" strategy="BlogCommendFromCsdn_7"><img src="http://avatar.csdn.net/9/B/0/2_acmore_xiong.jpg" alt="ACMore_Xiong" title="ACMore_Xiong"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/ACMore_Xiong">ACMore_Xiong</a></li>
                        <li class="time">2015-08-07 00:03</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>1734</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/w00w12l/article/details/7283658"  target="_blank" strategy="BlogCommendFromCsdn_8">【转】字典树[Trie]</a></h2>
                    <div class="summary">
                        转载自&#160;matrush

最终编辑&#160;matrush





Trie树也叫字典树，是一种用于快速检索的多叉树结构。如英文字母的字典树是一个26叉树。数字的字典树是一个10叉树。Trie树把要查找的关...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/w00w12l" target="_blank" strategy="BlogCommendFromCsdn_8"><img src="http://avatar.csdn.net/B/9/1/2_w00w12l.jpg" alt="w00w12l" title="w00w12l"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/w00w12l">w00w12l</a></li>
                        <li class="time">2012-02-22 15:35</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>675</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/tconan99/article/details/12422585"  target="_blank" strategy="BlogCommendFromCsdn_9">HDU 1247 Hat’s Words &amp;&amp; Trie（字典树）</a></h2>
                    <div class="summary">
                        好久不写字典树，写道水题回忆一下，顺便刷刷题量&#160;&#160;O(∩_∩)O哈哈~
题意：给你很多的单词，输出那些可以由其它的两个单词拼接起来的单词。
解法：先把所有单词插入到一个字典树中，然后暴力拆分每个单词，...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/enzaikenan" target="_blank" strategy="BlogCommendFromCsdn_9"><img src="http://avatar.csdn.net/B/A/7/2_enzaikenan.jpg" alt="enzaikenan" title="enzaikenan"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/enzaikenan">enzaikenan</a></li>
                        <li class="time">2013-10-08 11:06</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>739</span></li>
                    </ul>
                </dd>
            </dl>
            

	   

            

            
        </div>
    </main>
    <aside>
        <div class="right_box user_info">
            <dl class="inf_bar clearfix">
                <dt class="csdn-tracking-statistics" data-mod="popu_381">
                    <a href="http://blog.csdn.net/ltyqljhwcm" target="_blank">
                        <img src="http://avatar.csdn.net/A/7/0/1_ltyqljhwcm.jpg" class="avatar_pic">
                    </a>
                    <span class="medals" title="">
                <svg class="icon" aria-hidden="true">
                    
                </svg>
              </span>
                </dt>
                <dd>
                    <h3 class="csdn-tracking-statistics"  data-mod="popu_380"><a href="http://blog.csdn.net/ltyqljhwcm" target="_blank" id="uid">ltyqljhwcm</a></h3>
                    <span  class="csdn-tracking-statistics" data-mod="popu_379"><a class="btn btn-redborder-small "  id="span_add_follow" target="_self">＋关注</a></span>
                </dd>
            </dl>
            <div class="inf_number_box clearfix">
                <dl>
                    <dt>原创</dt>
                    <dd>219</dd>
                </dl>
                <dl>
                    <dt>粉丝</dt>
                    <dd id='fan'>39</dd>
                </dl>
                <dl>
                    <dt>喜欢</dt>
                    <dd>0</dd>
                </dl>
								 <dl>
              <dt>码云</dt>
              <dd>&nbsp;</dd>
            </dl>

            </div>
	    <div class="writings">
              <div class="public_signal clearfix">
                <h3>他的最新文章</h3>
                <a href="http://blog.csdn.net/ltyqljhwcm" target="_blank" class="more_z"><span>更多文章</span></a>
              </div>
                <ul class="inf_list clearfix csdn-tracking-statistics" data-mod="popu_382">
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53454971" target="_blank">POJ 3295 - 位运算 + 模拟 +递归</a>
                    </li>
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53444306" target="_blank">NYOJ 118 次小生成树</a>
                    </li>
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53434466" target="_blank">胜者树 败者树 K-路最佳归并树 高效外部排序</a>
                    </li>
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53411183" target="_blank">POJ 1062 - 昂贵的聘礼 - 经典题</a>
                    </li>
                    
                </ul>
            </div>
        </div>
        <div class="extension_other csdn-tracking-statistics" data-mod="popu_389">
						<!--u3032528-->
			<div class="flashrecommend">
            <script type="text/javascript" src="http://mpb1.iteye.com/bwocoltlyzdec.js"></script>
		    </div>
        </div>

		<div class="host-column">
          <h3>博主专栏</h3>
          <ul class="column-list">

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/13704.html">
                  <img src="http://img.blog.csdn.net/20161126164008952" alt="">
                  <div>15</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/13704.html">NYOJ 好题总结</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>3080</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/13628.html">
                  <img src="http://img.blog.csdn.net/20161121124730884" alt="">
                  <div>56</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/13628.html">POJ 专项题解</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>19375</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/13409.html">
                  <img src="http://img.blog.csdn.net/20161102193750895" alt="">
                  <div>4</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/13409.html">Leetcode</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>1266</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/12932.html">
                  <img src="http://img.blog.csdn.net/20160915093249392" alt="">
                  <div>8</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/12932.html">读书笔记</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2246</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/12704.html">
                  <img src="http://img.blog.csdn.net/20160826002037987" alt="">
                  <div>37</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/12704.html">算法与数据结构</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>41992</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/mystudyrecord001.html">
                  <img src="http://img.blog.csdn.net/20160809183336359" alt="">
                  <div>15</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/mystudyrecord001.html">微软面试百题</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>8448</span></div>
              </div>
            </li>

          </ul>
          <div class="unfold-btn">
            <span>展开</span><i class="icon iconfont icon-xiajiantou"></i>
          </div>
        </div>
		
        
        <div class="fixRight">
            <div class="right_box padb0 csdn-tracking-statistics" data-mod="popu_391">
                <h3 class="tit"><span><em>在线课程</em></span></h3>
                <ul class="edu_li clearfix">
                  
                  <li>
                    <div>
                      <a href="http://edu.csdn.net/huiyiCourse/series_detail/64?utm_source=blog7" target="_blank">
                        <img src="http://img.bss.csdn.net/201710111134087930.png" alt="Presto服务治理与架构优化在京东的实践应用" title="Presto服务治理与架构优化在京东的实践应用">
                      </a>
                    </div>
                    <div>
                      <p><a href="http://edu.csdn.net/huiyiCourse/series_detail/64?utm_source=blog7" target="_blank">Presto服务治理与架构优化在京东的实践应用</a></p>
                      <p>讲师：王哲涵</p>
                    </div>
                  </li>
                  
                  <li>
                    <div>
                      <a href="http://edu.csdn.net/huiyiCourse/detail/581?utm_source=blog7" target="_blank">
                        <img src="http://img.bss.csdn.net/201710111123195350.png" alt="【免费直播】Python最佳学习路线" title="【免费直播】Python最佳学习路线">
                      </a>
                    </div>
                    <div>
                      <p><a href="http://edu.csdn.net/huiyiCourse/detail/581?utm_source=blog7" target="_blank">【免费直播】Python最佳学习路线</a></p>
                      <p>讲师：韦玮</p>
                    </div>
                  </li>
                  
                </ul>
            </div>
			<!--u3032529-->
            <!-- <div class="extension_other csdn-tracking-statistics baidu_box" data-mod="popu_395">
								
                <script type="text/javascript" src="http://mpb1.iteye.com/cxpdpmumfaedgm.js"></script>
            </div> -->
			<div class="extension_other csdn-tracking-statistics bottomRcom" data-mod="popu_389" style="position:absolute;z-index:-5;opacity:0;pointer-events:none">
						<!--u3032528-->
				<div class="flashrecommend">
				<script type="text/javascript" src="http://mpb1.iteye.com/bwocoltlyzdec.js"></script>
				</div>
			</div>
        </div>
		<div class="user-hotArticle">
          <h3>热门文章</h3>
          <ul class="hotArticle-list">
 
            <li>
              <a href="/ltyqljhwcm/article/details/53043646">快速幂取模算法详解</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>5853</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/51952942">最短路径算法汇总</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>4540</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/52966874">ELFhash - 优秀的字符串哈希算法</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2787</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/52145746">快速排序全面讲解（含复杂度证明）——即将引出八大排序算法</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2041</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/52497853">2016BIT小学期——电话号码问题（哈希+位运算）</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>1921</span></div>
            </li>
 
          </ul>
        </div>


    </aside>
</div>

<div class="left_fixed">
      <div class="left_show_button">
        <span>
          <i class="icon iconfont icon-youjiantou"></i>
        </span>
      </div>
    <ul class="left_menu">

        <li>
            <button class="left-fixed-btn btn-like csdn-tracking-statistics" data-mod="popu_373" target="_self">
                <span class="iconbox border_red"><i class="icon iconfont icon-dianzan"></i></span>
				<span class="txt">0</span>
            </button>
        </li>
		<li id="blog_artical_directory">
            <button class="left-fixed-btn left_menu_btn csdn-tracking-statistics" data-mod="popu_372" target="_self">
                <span class="iconbox border_black"><i class="icon iconfont icon-mulu"></i></span>
            </button>
        </li>
        <li class="menu_con">
            <div class="list_father">
                <div class="arr_box">
                    <button class="btn-noborder arr-btn scroll-down  left_scroll_down"><i class="icon iconfont icon-xiajiantou"></i></button>
                    <button class="btn-noborder arr-btn scroll-up left_scroll_top"><i class="icon iconfont icon-shangjiantou"></i></button>
                </div>
                <div class="arr"></div>
                <div id="csdnBlogDir"></div>
            </div>
        </li>
        <li>
            <button class="left-fixed-btn csdn-tracking-statistics" data-mod="popu_374"  id="com-quick-collect" target="_self">
                <span class="iconbox border_purple"><i class="icon iconfont icon-shoucang"></i></span>
    
            </button>
        </li>
		<li>
          <button class="left-fixed-btn btn-pinglun" >
            <span class="iconbox border_purple"><i class="icon iconfont icon-pinglun"></i></span>
          </button>
        </li>
        <li id="share_box">
            <button class="left-fixed-btn  csdn-tracking-statistics"  data-mod="popu_375" target="_self">
                <span class="iconbox border_orange"><i class="icon iconfont icon-fenxiang"></i></span>
            </button>
            <div class="bdsharebuttonbox csdn-tracking-statistics" data-mod="popu_172">
                <div class="outside">
                    <span class="iconbox border_red2"><i class="icon iconfont icon-xinlang"></i></span>
                    <a href="#" class="bds_tsina" data-cmd="tsina" title="分享到新浪微博"> </a>
                </div>
                <div class="outside">
                    <span class="iconbox border_green"><i class="icon iconfont icon-weixin"></i></span>
                    <a href="#" class="bds_weixin" data-cmd="weixin" title="分享到微信"> </a>
                </div>
                <div class="outside">
                    <span class="iconbox border_blue"><i class="icon iconfont icon-QQ"></i></span>
                    <a href="#" class="bds_qzone" data-cmd="qzone" title="分享到QQ空间"> </a>
                </div>
            </div>
        </li>
    </ul>
</div>
<div class="right_fixed">
  <div class="r_ico">
	<i class="icon iconfont icon-jubao"></i>
	<span class="txt" id="reportBtn">内容举报</span>
  </div>
  <div class="returnTop">
   <i class="icon iconfont icon-fanhuidingbu"></i>
   <span>返回顶部</span>
 </div>
</div>
<div id="pop_win"></div>
<div id="popup_mask"></div>
<div class="pop_CA_cover" ></div>
<div class="pop pop_CA" >
    <div class="CA_header">
        收藏助手
        <span class="cancel_icon"  id="fapancle" ></span>
    </div>
    <iframe src="" id="collectIframe" frameborder="0" width="100%" height="360"  scrolling="no" ></iframe>
</div>
<!--举报-->
<div id="report_dialog" style="top: 250px; left: 343.5px;"><div id="panel_report">
    <div class="panel_head">不良信息举报</div>
    <form method="post" id="frmReport" class="panel_body">
        <table border="0" cellpadding="0" cellspacing="4" class="pop_table">
            <tbody><tr><td colspan="2">您举报文章：<a href="http://blog.csdn.net/raintungli/article/details/76583070" target="_blank">深度学习：神经网络中的前向传播和反向传播算法推导</a></td></tr>
            <tr>
                <th style="width:60px;">举报原因：</th>
                <td id="panel_reporttype">
                    <label><input type="radio" class="report_type" id="report_sex" name="report_type" value="1">色情</label>
                    <label><input type="radio" class="report_type" id="report_Politics" name="report_type" value="2">政治</label>
                    <label><input type="radio" class="report_type" id="report_copy" name="report_type" value="3">抄袭</label>
                    <label><input type="radio" class="report_type" id="report_ad" name="report_type" value="4">广告</label>
                    <label><input type="radio" class="report_type" id="report_want" name="report_type" value="5">招聘</label>
                    <label><input type="radio" class="report_type" id="report_call" name="report_type" value="6">骂人</label>
                    <br>
                    <label><input type="radio" class="report_type" id="report_other" name="report_type" value="7">其他</label>
                    <input type="text" name="report_other_content" id="report_other_content" maxlength="30" style="display: none;">
                </td>
            </tr>
            <tr id="panel_originalurl" style="display: none;">
                <th>原文地址：</th>
                <td>
                    <input id="originalurl" value="http://" name="originalurl" type="text" style="width: 90%;">
                </td>
            </tr>
            <tr>
                <th id="sp_reason">原因补充：</th>
                <td>
                    <textarea id="report_description" style="width: 300px;" rows="3" name="report_description"></textarea>
                    <p id="sp_n" style="color:#999;margin:0px;padding:0px;">(最多只允许输入30个字)</p>
                </td>
            </tr>
            <tr>
                <td></td>
                <td>
                    <input id="btnSubmitReport" name="submit" type="image" align="middle" class="btn_1" src="http://static.blog.csdn.net/images/btn_submit.jpg">
                    <span style="padding-left:20px;"></span>
                    <img id="btnCloseReportDialog" src="http://static.blog.csdn.net/images/btn_cancel.jpg" align="middle">
                    <div id="error" style="color: Red">
                    </div>
                </td>
            </tr>
            </tbody></table>
    </form>
</div>
    <script language="javascript" type="text/javascript">
        var isComment=0;
        //显示隐藏地址
        $(function () {
            if(isComment){
                $("#report_description").attr("disabled",true);
                $("#sp_n").hide();
                $("#sp_reason").html("评论内容：");
            }
            $(".report_type").click(function () {
                $("#panel_originalurl,#report_other_content").hide();
                switch ($(this).val()) {
                    case '3':
                        $("#panel_originalurl").show();
                        $("#originalurl").focus();
                        break;
                    case '7':
                        if(isComment){
                            $("#report_other_content").show().focus();
                        }
                        break;
                }

            });

            $("#frmReport").submit(function () {
                if (!currentUserName) {

                    if (confirm("您的操作必须登录，是否登录？")) {
                        location.href = "http://passport.csdn.net/account/login?from=" + encodeURIComponent(location.href);
                        return false;
                    }
                    return false;
                }

                var reportType = $("input[name=report_type]:checked").val();
                if(!reportType){
                    alert("请选择举报原因！");
                    return false;
                }
                var otherInfo = "";
                switch (reportType) {
                    case '3':
                        otherInfo = $("#originalurl").val();
                        if (otherInfo == ""||otherInfo=="http://") {
                            alert("举报抄袭必须提供原创文章地址！");
                            $("#originalurl").focus();
                            return false;
                        } else if(!checkeURL(otherInfo)) {
                            alert("请输入正确的原创文章地址！");
                            $("#originalurl").focus();
                            return false;
                        }
                        break;
                    case '7':
                        otherInfo = $("#report_other_content").val();
                        if (isComment && !otherInfo) {
                            alert("请填写举报的具体原因！");
                            $("#report_other_content").focus();
                            return false;
                        }
                        if(!isComment){
                            if(!$("#report_description").val()){
                                alert("请填写举报的具体原因！");
                                $("#report_description").focus();
                                return false;
                            }
                        }
                        break;
                }
                if(!isComment){
                    if($("#report_description").val().length>30){
                        alert("举报原因最多只允许输入30个字！");
                        return false;
                    }
                }

                var data = {
                    articleId: 76583070,
                    commentId: 0,
                    reportType: reportType,
                    originalurl: $("#originalurl").val(),
                    report_other_content: $("#report_other_content").val(),
                    report_description: $("#report_description").val(),
                    currentUserName: currentUserName,
                    updatetime: "2017/8/8 16:54:12",
                    blogUser: "raintungli"
                };
                if(!isComment){//如果是举报文章
                    data.report_other_content = data.report_description;
                    data.report_description = "1. 神经网络这是一个常见的神经网络的图：这是一个常见的三层神经网络的基本构成，Layer L1是输入层，Layer L2是隐含层";
                }

                $.post(blog_address + "/common/report?id=76583070&t=2", data, function (data) {
                    if (data.result == 1){
                        SetError("感谢您的举报，我们会尽快审核！");
                    }else{
                        if (data.content) alert(data.content);
                    }

                });
                return false;
            });

            $("#btnCloseReportDialog").click(function () {
                CloseDiv();
            });

        });

        //提示后关闭方法
        function SetError(error) {
            $("#btnCloseReportDialog").trigger("click");
            alert(error);
            CloseDiv();
        }

        //关闭方法
        function CloseDiv() {

            $.removeMask();
            $("#report_dialog").hide().html("");
            return false;
        }

        //验证url
        function checkeURL(url){
            return /^http(s)?:\/\/([\w-]+\.)+[\w-]+/i.test(url);
        }
    </script>
</div>

<script src="http://c.csdnimg.cn/public/common/libs/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/public/res/bower-libs/MathJax/MathJax.js?config=TeX-AMS_HTML"></script>
<script type="text/javascript" src="http://passport.csdn.net/content/loginbox/login.js"></script>

<script type="text/javascript" src="http://static.blog.csdn.net/Skin/skin3-template/js/blog_ver.js?v=3"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/Skin/skin3-template/js/skin2017.js?v=2017.032"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/cnick.js"></script>
<script>window._bd_share_config = { "common": { "bdSnsKey": {}, "bdText": "", "bdMini": "1", "bdMiniList": false, "bdPic": "", "bdStyle": "0", "bdSize": "16" }, "share": {} }; with (document) 0[(getElementsByTagName('head')[0] || body).appendChild(createElement('script')).src = 'http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion=' + ~(-new Date() / 36e5)];</script>
<script type="text/javascript" >
    if($(".article_collect li").length==1){$(".article_collect").hide();}
    if($(".article_tags li").length==1){$(".article_tags").hide();}
    $(".edit a").attr("href","http://write.blog.csdn.net/postedit/"+fileName);
    $.each($(".edu_li a"),function(){$(this).attr("href",$(this).attr("href").replace("blog7","blog9"))});
    new CNick('#uid').showNickname();
if($("#fan").html()=="")
{
$("#fan").html(0);	
}
</script>
</body>

<script  type="text/javascript">
    var fromjs=$("#fromjs");
    if(fromjs.length>0)
    {                  
        $("#fromjs .markdown_views pre").addClass("prettyprint");       
        prettyPrint();

        $('pre.prettyprint code').each(function () {
            var lines = $(this).text().split('\n').length;
            var $numbering = $('<ul/>').addClass('pre-numbering').hide();
            $(this).addClass('has-numbering').parent().append($numbering);
            for (i = 1; i <= lines; i++) {
                $numbering.append($('<li/>').text(i));
            };
            $numbering.fadeIn(1700);
        });

        $('.pre-numbering li').css("color","#999");             
    }

    $(function(){
        setTimeout(function(){
            $(".math").each(function(index,value){$(this).find("span").last().css("color","#fff"); })
        },500);         
       

    });

    setTimeout(function () {
        $(".toc a[target='_blank']").attr("target", "");
    }, 500);

</script>
</html>

