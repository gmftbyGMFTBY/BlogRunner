
<!DOCTYPE html>
<html>
<head>
            <link rel="canonical" href="http://blog.csdn.net/ltyqljhwcm/article/details/53369718"/> 

    <script type="text/javascript">
        var username = "ltyqljhwcm";var _blogger = username;var blog_address = "http://blog.csdn.net/ltyqljhwcm";var static_host = "http://static.blog.csdn.net";
        var currentUserName = ""; var fileName = '53369718';var commentscount = 0; var islock = false
        window.quickReplyflag = true;
        var totalFloor=0;
                
                 var isBole = false;
                
                
                 var isDigg = false;
                
          
             var isExpert=false;
          
    </script>

<meta http-equiv="content-type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <script src="http://c.csdnimg.cn/public/common/libs/jquery/jquery-1.9.1.min.js" type="text/javascript"></script>
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/common/libs/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/static/css/avatar.css">
    <link type="text/css" rel="stylesheet" href="http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/default.css" />
    <link rel="stylesheet" href="http://static.blog.csdn.net/Skin/skin3-template/css/style.css?v=2017.032">
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/common/toolbar/content_toolbar_css/content_toolbar.css">

    <script type="text/javascript" src="http://static.blog.csdn.net/Skin/skin3-template/fonts/iconfont.js"></script>
    <script src="//csdnimg.cn/rabbit/exposure-click/main.js?v1.15.23"></script>
    <script type="text/javascript" src="http://c.csdnimg.cn/pubfooter/js/tracking_for_recommend.js?v=0911" charset="utf-8"></script>
    <script type="text/javascript" src="http://csdnimg.cn/pubfooter/js/tracking.js" charset="utf-8"></script>
    <script type="text/javascript" src="http://static.blog.csdn.net/scripts/cnick.js" charset="utf-8"></script>
 
    <link rel="stylesheet" href="http://static.blog.csdn.net/code/prettify.css" />
    <script type="text/javascript" src="http://static.blog.csdn.net/code/prettify.js"></script>
<script src="http://dup.baidustatic.com/js/ds.js"></script>
    <script type="text/javascript">

        // Traffic Stats of the entire Web site By baidu
        var _hmt = _hmt || [];
        (function() {
            var hm = document.createElement("script");
            hm.src = "https://hm.baidu.com/hm.js?6bcd52f51e9b3dce32bec4a3997715ac";
            var s = document.getElementsByTagName("script")[0];
            s.parentNode.insertBefore(hm, s);
        })();
        // Traffic Stats of the entire Web site By baidu end



    </script>
    <meta name="description" content="1.Shell - Sort
希尔排序(Shell Sort)是插入排序的一种。是针对直接插入排序算法的改进。该方法又称缩小增量排序，因DL．Shell于1959年提出而得名。

我们都知道直接插入排序算法是相对来说比较低效的算法，但是正是插入排序算法的特性决定了我们在数据量小的时候，数据基本有序的时候的排序效果往往比一些高级排序算法构架行之有效，更加快速
在我们开始了解Shell-Sor" />
    <meta name="keywords" content="" />
    <meta http-equiv="Cache-Control" content="no-siteapp" /><link rel="alternate" media="handheld" href="#" />
    <meta name="shenma-site-verification" content="5a59773ab8077d4a62bf469ab966a63b_1497598848">


    <title>Shell-Sort 增量排序算法 总结 - CSDN博客</title>
</head>
<body>
<script id="toolbar-tpl-scriptId" prod="download" skin="black" src="http://c.csdnimg.cn/public/common/toolbar/js/content_toolbar.js" type="text/javascript" domain="http://blog.csdn.net"></script>

<div class="container clearfix">
    <main>
        <article>
            <h1 class="csdn_top">Shell-Sort 增量排序算法 总结</h1>
            <div class="article_bar clearfix">
                <div class="artical_tag">
                    <span class="original">原创</span>
                    <span class="time">2016年11月27日 23:49:19</span>
                </div>
				<ul class="article_tags clearfix csdn-tracking-statistics" data-mod="popu_377">
					<li class="tit">标签：</li>
					
				</ul>
                <ul class="right_bar">
                    <li><button class="btn-noborder"><i class="icon iconfont icon-read"></i><span class="txt">903</span></button></li>
                    <!--<li><button class="btn-noborder"><i class="icon iconfont icon-dashang-"></i><span class="txt">0</span></button></li>-->

                    <li class="edit">
                        <a class="btn-noborder" href="" >
                            <i class="icon iconfont icon-bianji"></i><span class="txt">编辑</span>
                        </a>
                    </li>
                    <li class="del">
                        <a class="btn-noborder" onclick="javascript:deleteArticle(fileName);return false;">
                            <i class="icon iconfont icon-shanchu"></i><span class="txt">删除</span>
                        </a>
                    </li>
                </ul>
            </div>
            <div id="article_content" class="article_content csdn-tracking-statistics" data-mod="popu_307" data-dsm="post">
                
<h2>1.Shell - Sort</h2>
<div><span style="color:rgb(51,51,51); font-family:arial,sans-serif; font-size:14px; line-height:24px">希尔排序(Shell Sort)是插入</span><a target="_blank" target="_blank" href="http://baike.so.com/doc/5381751.html" style="color:rgb(19,110,194); text-decoration:none; font-family:arial,sans-serif; font-size:14px; line-height:24px">排序</a><span style="color:rgb(51,51,51); font-family:arial,sans-serif; font-size:14px; line-height:24px">的一种。是针对直接插入排序</span><a target="_blank" target="_blank" href="http://baike.so.com/doc/2758411.html" style="color:rgb(19,110,194); text-decoration:none; font-family:arial,sans-serif; font-size:14px; line-height:24px">算法</a><span style="color:rgb(51,51,51); font-family:arial,sans-serif; font-size:14px; line-height:24px">的改进。该方法又称缩小</span><a target="_blank" target="_blank" href="http://baike.so.com/doc/5430695.html" style="color:rgb(19,110,194); text-decoration:none; font-family:arial,sans-serif; font-size:14px; line-height:24px">增量</a><span style="color:rgb(51,51,51); font-family:arial,sans-serif; font-size:14px; line-height:24px">排序，因DL．Shell于1959年</span><a target="_blank" target="_blank" href="http://baike.so.com/doc/1534298.html" style="color:rgb(19,110,194); text-decoration:none; font-family:arial,sans-serif; font-size:14px; line-height:24px">提出</a><span style="color:rgb(51,51,51); font-family:arial,sans-serif; font-size:14px; line-height:24px">而得名。</span><br>
</div>
<div><span style="color:rgb(51,51,51); font-family:arial,sans-serif; font-size:14px; line-height:24px">我们都知道直接插入排序算法是相对来说比较低效的算法，但是正是插入排序算法的特性决定了我们在数据量小的时候，数据基本有序的时候的排序效果往往比一些高级排序算法构架行之有效，更加快速</span></div>
<div><span style="color:rgb(51,51,51); font-family:arial,sans-serif; font-size:14px; line-height:24px">在我们开始了解Shell-Sort算法之前，我们先来复习一下插入排序算法</span></div>
<div><span style="color:rgb(51,51,51); font-family:arial,sans-serif; font-size:14px; line-height:24px">在这里我们先给出插入排序的伪代码：</span></div>
<div><span style="color:rgb(51,51,51); font-family:arial,sans-serif; font-size:14px; line-height:24px"></span><pre code_snippet_id="2011949" snippet_file_name="blog_20161127_1_6013782"  name="code" class="cpp">data - the array wait to sort
n - the count of the elements of the array
//本伪代码针对升序排列
for i=2 to (n-1)
    temp = data[i]
    j=i-1
    while j&gt;=0 and temp&lt;data[j]   //这里不加等号保证排序的稳定性
        data[j+1]=data[j]
        j--
    data[j+1]=temp</pre><br>
从上面我们可以看出，直接插入排序算法的在我们的数组基本有序的时候复杂度非常的高效，但是一旦出现了杂糅的情况我们的耗时就非常的大，基本在O(n^2)的时间复杂度水平</div>
<div><span style="color:rgb(51,51,51); font-family:arial,sans-serif; font-size:14px; line-height:24px">我们注意到，我们的直接插入排序算法的效率低下的原因在于我们每次找到我们的带插入的位置后，我们都需要遍历这个位置的路径，大致我们的交换次数变得非常的冗长</span></div>
<div><span style="color:rgb(51,51,51); font-family:arial,sans-serif; font-size:14px; line-height:24px">所以，聪明的Shell就想到了一种非稳定的基于直接插入排序算法的高效的排序算法，也就是大名鼎鼎的 &nbsp;Shell - Sort</span></div>
<h2>2.Shell - Sort 的原理</h2>
<div>我们先引出我们的优化的机理，我们对于直接插入排序的优化基于一点就是 - 直接插入排序在基本有序的时候插入效率非常的高效，所以说我们的优化的核心就浮出水面了</div>
<div>我们不断的令待排数组的的有序度上升，让数组的有序性逐步增加，每一次我们优化之后，数组都变得更加相对的有序，这时候下一次的插入排序的效率就会变得更加的高效</div>
<div>在这里，机智的科学家发明了Shell -Sort，也就是增量排序的想法来处理这个问题</div>
<div>我们每次选择一个增量，保证一个增量范围内的数组都是有序的，我们不断缩小我们的增量直到1，这是后我们最后增量位1的过程就相当于是一个直接插入排序，但是之前的操作已经保证我们的数组已经非常的有序，我们的最后的直接插入排序的过程的时间复杂度也变得非常的高效</div>
<div><span style="font-size:12px"><br>
</span></div>
<div>每一个Shell - Sort需要几趟，每一趟都相当于一次断层的直接插入排序，如图所示</div>
<div><img src="http://images2015.cnblogs.com/blog/318837/201604/318837-20160422102024757-37862627.png" alt=""><br>
</div>
<h2>3.Shell - Path的选择</h2>
<div>现在的事实已经证明了，希尔排序的核心在于我们的增量的选取，我们的增量选取要求最后都是要归终与一个为1的增量上</div>
<div>但是不同的选取导致我们的希尔排序的效率是不一样的</div>
<div>实践证明了有很多非常优秀的步长选择方案是的我们的希尔排序在中小规模上的排序时间效率甚至超过了快速排序</div>
<div>
<p align="left">步长的选择是希尔排序的重要部分。只要最终步长为1任何步长序列都可以工作。</p>
<p align="left">算法最开始以一定的步长进行排序。然后会继续以一定步长进行排序，最终算法以步长为1进行排序。当步长为1时，算法变为插入排序，这就保证了数据一定会被排序。<br>
Donald Shell&nbsp;最初建议步长选择为N/2并且对步长取半直到步长达到1。虽然这样取可以比O(N2)类的算法（插入排序）更好，但这样仍然有减少平均时间和最差时间的余地。可能希尔排序最重要的地方在于当用较小步长排序后，以前用的较大步长仍然是有序的。比如，如果一个数列以步长5进行了排序然后再以步长3进行排序，那么该数列不仅是以步长3有序，而且是以步长5有序。如果不是这样，那么算法在迭代过程中会打乱以前的顺序，那就</p>
<p align="left">不会以如此短的时间完成排序了。</p>
<table border="1" cellspacing="0" cellpadding="0" style="color:rgb(0,0,0)">
<thead>
<tr>
<td>
<p align="left">步长序列</p>
</td>
<td>
<p align="left">最坏情况下复杂度</p>
</td>
</tr>
</thead>
<tbody>
<tr>
<td nowrap="nowrap">
<p align="left"><img src="http://images2015.cnblogs.com/blog/318837/201604/318837-20160422102025601-754434296.png" alt=""></p>
</td>
<td>
<p align="left"><img src="http://images2015.cnblogs.com/blog/318837/201604/318837-20160422102026195-1967182697.png" alt=""><img src="http://images2015.cnblogs.com/blog/318837/201604/318837-20160422102026445-1387890072.png" alt=""></p>
</td>
</tr>
<tr>
<td nowrap="nowrap">
<p align="left"><img src="http://images2015.cnblogs.com/blog/318837/201604/318837-20160422102027023-263403088.png" alt=""></p>
</td>
<td>
<p align="left"><img src="http://images2015.cnblogs.com/blog/318837/201604/318837-20160422102027632-511063615.png" alt=""><img src="http://images2015.cnblogs.com/blog/318837/201604/318837-20160422102028320-2034939374.png" alt=""></p>
</td>
</tr>
<tr>
<td nowrap="nowrap">
<p align="left">(3**(t-k)-1)/2</p>
</td>
<td>
<p align="left">待查</p>
</td>
</tr>
</tbody>
</table>
<p align="left"><strong>已知的最好步长序列是由Sedgewick提出的(1, 5, 19, 41, 109,...)，该序列的项来自</strong></p>
<p align="left"><strong>9*4^i-9*2^i&#43;1 或者是 4^i-3*2^i&#43;1<span style="font-size:12px">这两个算式。</span></strong></p>
<p align="left">这项研究也表明“比较在希尔排序中是最主要的操作，而不是交换。”用这样步长序列的希尔排序比插入排序和堆排序都要快，甚至在小数组中比快速排序还快，但是在涉及大量数据时希尔排序还是比快速排序慢。</p>
<p align="left">希尔排序的伪代码如下：</p>
<p align="left"><pre code_snippet_id="2011949" snippet_file_name="blog_20161127_2_5218177"  name="code" class="cpp">data - array wait to sort
n - the count of the array
dlta - the array save the dlta_path
for path=0 to length_dlta
    for i=path to n   //一趟分段直接插入排序
        temp = data[i]
        j=i-path
        while j&gt;=0 and temp&lt;data[j]
            data[j+path]=data[j]
            j-=path
        data[j+path]=temp</pre></p>
<h2>3.Code of Python</h2>
<div><pre code_snippet_id="2011949" snippet_file_name="blog_20161127_3_6581380"  name="code" class="python">from random import*
from time import*
from math import*
def shell_sort_0(data,n):
    time=clock()
    path=int(n/2);
    while path:
        i=path
        while i&lt;n:
            temp=data[i]
            j=i-path
            while j&gt;=0 and temp&lt;data[j]:
                data[j+path]=data[j]
                j-=path
            data[j+path]=temp
            i+=1
        path=int(path/2)
    return clock()-time

def init_data(data,n):
    for i in range(n):
        data.append(randint(1,100000))
        
def make_dlta(dlta,n):
    t=(int)(log(2*n+1,3))
    for i in range(t):
        dlta.append((int)(0.5*(3**(t-i)-1)))

def shell_sort_1(dlta,data,n):
    time=clock()
    for path in dlta:
        i=path
        while i&lt;n:
            temp=data[i]
            j=i-path
            while j&gt;=0 and temp&lt;data[j]:
                data[j+path]=data[j]
                j-=path
            data[j+path]=temp
            i+=1
    return clock()-time

data=[]
n=eval(input(&quot;请输入数据量:&quot;))
init_data(data,n)
p=[]
dlta=[]

p=[i for i in data]
print(&quot;-----------&quot;)
print(&quot;time:%lf&quot;%(shell_sort_0(p,n)))

p=[i for i in data]
make_dlta(dlta,n)
print(&quot;-----------&quot;)
print(&quot;time:%lf&quot;%(shell_sort_1(dlta,p,n)))

time=clock()
p.sort()
print(&quot;time:%lf&quot;%(clock()-time))
</pre>通过实验数据发现，我们的表&#26684;的第三种希尔排序的效率比我们的希尔最早提出的二分的鞥两还有更优</div>
<div>实际上，我们的希尔排序的步长选择的最优解实际上现在还是一个数学难题，我们目前只是找到了最好的解，但并不是说我们找到了最优的步长选择方案</div>
<div><br>
</div>
<div>实际上，因为希尔排序的常数因子的问题，在中小规模的时候，我们的希尔排序甚至比我们的快速排序还要更加的优秀，但是一旦数据量增大，我们也无能为力，只要采用O(n*logn)的效率的算法来进行优化</div>
<div><br>
</div>
<div>专家们建议：任何一个容许不稳定的排序任务我们都可以通过先用希尔排序的策略，一旦我们发现该问题还可以再度优化，我们再切换成更加高效的排序算法</div>
<p></p>
<br>
</div>
<link rel="stylesheet" href="http://static.blog.csdn.net/public/res-min/markdown_views.css?v=2.0" />
            </div>
        </article>
        <div class="readall_box csdn-tracking-statistics" data-mod="popu_376">
			<div class="read_more_mask"></div>
            <a class="btn btn-large btn-gray-fred read_more_btn" target="_self">阅读全文</a>
        </div>
        <div class="article_copyright">
            版权声明：本文为博主原创文章，未经博主允许不得转载。
        </div>
        <!--  <div class="reward_box">
            <div class="tit">
              <button class="btn_reward"><i class="icon iconfont icon-dashang-"></i></button>
            </div>
            <dl class="clearfix">
              <dt><a href="#" target="_blank">近期打赏</a></dt>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
            </dl>
          </div>-->

        <ul class="article_collect clearfix csdn-tracking-statistics"  data-mod="popu_378">
            <li class="tit">本文已收录于以下专栏：</li>
            
            <li><a href="http://blog.csdn.net/column/details/12704.html" target="_blank">算法与数据结构</a></li>
            
        </ul>
        <div class="comment_box clearfix">
            <div id="comment_form">
                <div id="commentsbmitarear">
                    <!-- <h6><span>0</span>条评论</h6> -->
           <!--          <dl class="clearfix" id="commentbox">
                        <dt>
                            <a href="http://my.csdn.net/"><img src="" ></a>
                        </dt>
                        <dd>
                            <a href="http://my.csdn.net/" target="_blank"></a>
                        </dd>
                        <dd class="txt_tip"><span id="tip_comment" class="tip"></span></dd>
                    </dl> -->
                    <div class="comment_area clearfix">
						<div class="userimg"><a href="http://my.csdn.net/"><img src=""></a></div>
                        <form action="/ltyqljhwcm/comment/submit?id=53369718" method="post" onsubmit="return subform(this);" id="commentform">
                            <textarea class="comment_content" name="comment_content" id="comment_content" placeholder="发表你的评论"></textarea>
                            <div class="bot_bar clearfix">
                                <div id="ubbtools" class="add_code">
                                    <a href="#insertcode" code="code" target="_self"><i class="icon iconfont icon-daima"></i></a>
                                </div>

                                <input type="hidden" id="comment_replyId" name="comment_replyId">
                                <input type="hidden" id="comment_userId" name="comment_userId" value="">
                                <input type="hidden" id="commentId" name="commentId" value="">
                                <input type="submit" class="btn btn-redborder" value="发表评论">
								<span id="tip_comment" class="tip">
                                <div style="display: none;" class="csdn-tracking-statistics" data-mod="popu_384"><a href="#" target="_blank" class="comment_area_btn">发表评论</a></div>

                                <div id="lang_list" code="code">
                                    <a href="#html" style="width:95px;" class="long_name" target="_self">HTML/XML</a>
                                    <a href="#objc" style="width:95px;" class="long_name" target="_self">objective-c</a>
                                    <a href="#delphi" style="width:58px;" class="zhong_name" target="_self">Delphi</a>
                                    <a href="#ruby" class="zhong_name" target="_self">Ruby</a>
                                    <a href="#php" target="_self">PHP</a>
                                    <a href="#csharp" class="duan_name" target="_self">C#</a>
                                    <a style=" border-right: none;" href="#cpp" class="duan_name" target="_self">C++</a>
                                    <a style=" border-bottom:none;width:95px;" href="#javascript" class="long_name" target="_self">JavaScript</a>
                                    <a style=" border-bottom:none;width:95px;" href="#vb" class="long_name" target="_self">Visual Basic</a>
                                    <a style=" border-bottom:none;" href="#python" class="zhong_name" target="_self">Python</a>
                                    <a style=" border-bottom:none;" href="#java" class="zhong_name" target="_self">Java</a>
                                    <a style="border-bottom:none;" href="#css" class="duan_name" target="_self">CSS</a>
                                    <a style="border-bottom:none;" href="#sql" class="duan_name" target="_self">SQL</a>
                                    <a style="border:none; " href="#plain" class="duan_name" target="_self">其它</a>
                                    <span class="arrb"></span>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="comment_li_outbox">
            <div id="comment_list"></div>
        </div>

        <div class="more_comment">
            <div id="comment_bar" class="trackgin-ad" data-mod="popu_385"></div>
        </div>

        <h3 class="recommend_tit">相关文章推荐</h3>
        <div class="recommend_list clearfix">
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/fight_to_dead/article/details/45479547"  target="_blank" strategy="BlogCommendFromCsdn_0">排序算法总结之希尔排序 Shell Sort</a></h2>
                    <div class="summary">
                        算法原理：


希尔排序实际上是一种插入排序算法。取一个小于n的整数d1作为第一个增量，把数组分成d1个组。所有距离为d1的倍数的元素放在同一个组中。在各组内进行插入排序。然后取第二个增量d2



...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/fight_to_dead" target="_blank" strategy="BlogCommendFromCsdn_0"><img src="http://avatar.csdn.net/2/7/0/2_fight_to_dead.jpg" alt="fight_to_dead" title="fight_to_dead"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/fight_to_dead">fight_to_dead</a></li>
                        <li class="time">2015-05-04 13:29</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>296</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/coder_xia/article/details/6601367"  target="_blank" strategy="BlogCommendFromCsdn_1">常用排序算法的c++实现（冒泡，选择，插入，堆，shell，快速，归并 ）与sort()对比</a></h2>
                    <div class="summary">
                        偶然在书上看到句话，“为++程序员所津津乐道的一件事，就是sort()全面打败c语言的quicksort”，于是决定亲自测试下，正好将其他的排序也一并测试了，当做当初没写的补偿吧。&#160;&#160; &#160; 测试文件的...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/coder_xia" target="_blank" strategy="BlogCommendFromCsdn_1"><img src="http://avatar.csdn.net/8/9/E/2_coder_xia.jpg" alt="coder_xia" title="coder_xia"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/coder_xia">coder_xia</a></li>
                        <li class="time">2011-07-12 22:40</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>2193</span></li>
                    </ul>
                </dd>
            </dl>
            
            <!--dl class="clearfix csdn-tracking-statistics" data-mod="popu_393">
                <dt><a href="http://edu.csdn.net/huiyiCourse/series_detail/64?utm_source=blog10" target="_blank"><img class="maxwidth" src="http://img.blog.csdn.net/20170928113144608" alt="" title=""></a></dt>
                <dd>
                    <div class="summary">
                        <h2><a href='http://edu.csdn.net/topic/python1?utm_source=blog10' target='_blank'>伤心啊！年度热门编程语言排行榜出来了...</a></h2>  <div class="summary">近期，IEEE Spectrum 发布了第四届顶级编程语言交互排行榜。结合 10 个线上数据源的 12 个标准，对 48 种语言进行了排行！此外，七牛云许式伟曾说过Go语言会取代Java...气氛... </div> 
                    </div>
                </dd>
            </dl-->
	<script>
		(function() {
		    var s = "_" + Math.random().toString(36).slice(2);
		    document.write('<div id="' + s + '"></div>');
		    (window.slotbydup=window.slotbydup || []).push({
			id: '4765209',
			container: s,
			size: '808,120',
			display: 'inlay-fix'
		    });
		})();
	</script>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/u014723529/article/details/41958431"  target="_blank" strategy="BlogCommendFromCsdn_2">经典排序算法 - 希尔排序Shell sort</a></h2>
                    <div class="summary">
                        经典排序算法 - 希尔排序Shell sort
希尔排序Shell Sort是基于插入排序的一种改进,同样分成两部分,
第一部分,希尔排序介绍
第二部分,如何选取关键字,选取关键字是希尔排序的关...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/u014723529" target="_blank" strategy="BlogCommendFromCsdn_2"><img src="http://avatar.csdn.net/8/4/7/2_u014723529.jpg" alt="u014723529" title="u014723529"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/u014723529">u014723529</a></li>
                        <li class="time">2014-12-16 11:54</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>653</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/uom_xiaoshuaishuai/article/details/72803400"  target="_blank" strategy="BlogCommendFromCsdn_3">排序算法——希尔排序(Shell Sort)</a></h2>
                    <div class="summary">
                        排序算法——希尔排序(Shell Sort)算法简介(Introduction) 
Insertion sort shifts elements which are out of order one ...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/UoM_XiaoShuaiShuai" target="_blank" strategy="BlogCommendFromCsdn_3"><img src="http://avatar.csdn.net/7/C/A/2_uom_xiaoshuaishuai.jpg" alt="UoM_XiaoShuaiShuai" title="UoM_XiaoShuaiShuai"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/UoM_XiaoShuaiShuai">UoM_XiaoShuaiShuai</a></li>
                        <li class="time">2017-05-29 18:46</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>96</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/zf1228/article/details/76472037"  target="_blank" strategy="BlogCommendFromCsdn_4">排序算法---希尔排序（Shell Sort）</a></h2>
                    <div class="summary">
                        前面一口气写了冒泡、选择、插入三个排序算法，感觉今天和他们死磕上了。。。 
  就不该十一点多还看了几眼。。。然后又掉坑里了，大半夜果然的效率低，看个希尔排序然后居然写了1个小时。。。哇，难受
抄起键...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/zf1228" target="_blank" strategy="BlogCommendFromCsdn_4"><img src="http://avatar.csdn.net/1/5/7/2_zf1228.jpg" alt="zf1228" title="zf1228"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/zf1228">zf1228</a></li>
                        <li class="time">2017-07-31 20:58</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>38</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/baidu_30000217/article/details/53084546"  target="_blank" strategy="BlogCommendFromCsdn_5">PHP实现排序算法----希尔排序（Shell Sort）</a></h2>
                    <div class="summary">
                        基本思想：希尔排序是指记录按下标的一定增量分组，对每一组使用 直接插入排序 ，随着增量逐渐减少，每组包含的关键字越来越多，当增量减少至 1 时，整个序列恰好被分成一组，算法便终止。操作步骤：先取一个小...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/baidu_30000217" target="_blank" strategy="BlogCommendFromCsdn_5"><img src="http://avatar.csdn.net/5/3/9/2_baidu_30000217.jpg" alt="baidu_30000217" title="baidu_30000217"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/baidu_30000217">baidu_30000217</a></li>
                        <li class="time">2016-11-08 19:04</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>809</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/sjyttkl/article/details/69835123"  target="_blank" strategy="BlogCommendFromCsdn_6">经典排序算法 - 希尔排序Shell sort</a></h2>
                    <div class="summary">
                        经典排序算法 - 希尔排序Shell sort

希尔排序Shell Sort是基于插入排序的一种改进,同样分成两部分,

第一部分,希尔排序介绍

第二部分,如何选取关键字,选取关键字是希尔排序的关...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/sjyttkl" target="_blank" strategy="BlogCommendFromCsdn_6"><img src="http://avatar.csdn.net/6/E/4/2_sjyttkl.jpg" alt="sjyttkl" title="sjyttkl"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/sjyttkl">sjyttkl</a></li>
                        <li class="time">2017-04-09 17:18</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>134</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics downloadElement" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
               	<dt><a href="http://download.csdn.net/detail/chmmls/921319" target="_blank" strategy="BlogCommendFromCsdn_7"><img class="maxwidth" src="http://download.csdn.net/images/minetype/pdf.svg" alt="" title=""></a></dt>
		<dd>
			<div class="summary">
				<h2><a href="http://download.csdn.net/detail/chmmls/921319" target="_blank" strategy="BlogCommendFromCsdn_7">Radix Sort （基数排序）排序算法</a></h2>
				<div class="summary">
				  <ul>
					  <li class="time">2008-12-29 14:39</li>
					  <li class="visited_num fileSize">174KB</li>
					  <li class="download_btn"><a href="http://download.csdn.net/detail/chmmls/921319">下载</a></li>
				  </ul>
				</div> 
			</div>
		</dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics downloadElement" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
               	<dt><a href="http://download.csdn.net/detail/yong2007123/607370" target="_blank" strategy="BlogCommendFromCsdn_8"><img class="maxwidth" src="http://download.csdn.net/images/minetype/rar.svg" alt="" title=""></a></dt>
		<dd>
			<div class="summary">
				<h2><a href="http://download.csdn.net/detail/yong2007123/607370" target="_blank" strategy="BlogCommendFromCsdn_8">排序算法  sort   经典</a></h2>
				<div class="summary">
				  <ul>
					  <li class="time">2008-09-05 15:00</li>
					  <li class="visited_num fileSize">250KB</li>
					  <li class="download_btn"><a href="http://download.csdn.net/detail/yong2007123/607370">下载</a></li>
				  </ul>
				</div> 
			</div>
		</dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/fight_to_dead/article/details/45440149"  target="_blank" strategy="BlogCommendFromCsdn_9">排序算法总结之计数排序 Counting Sort</a></h2>
                    <div class="summary">
                        算法原理：
排序算法根据排序的原理可以分为两类：基于比较的和非比较的。常见的基于比较的排序算法有快速排序，堆排序，归并排序等，基于比较的排序算法平均情况最好是O(nlogn)。基于非比较的排序算法有三...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/fight_to_dead" target="_blank" strategy="BlogCommendFromCsdn_9"><img src="http://avatar.csdn.net/2/7/0/2_fight_to_dead.jpg" alt="fight_to_dead" title="fight_to_dead"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/fight_to_dead">fight_to_dead</a></li>
                        <li class="time">2015-05-02 15:31</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>382</span></li>
                    </ul>
                </dd>
            </dl>
            

	   

            

            
        </div>
    </main>
    <aside>
        <div class="right_box user_info">
            <dl class="inf_bar clearfix">
                <dt class="csdn-tracking-statistics" data-mod="popu_381">
                    <a href="http://blog.csdn.net/ltyqljhwcm" target="_blank">
                        <img src="http://avatar.csdn.net/A/7/0/1_ltyqljhwcm.jpg" class="avatar_pic">
                    </a>
                    <span class="medals" title="">
                <svg class="icon" aria-hidden="true">
                    
                </svg>
              </span>
                </dt>
                <dd>
                    <h3 class="csdn-tracking-statistics"  data-mod="popu_380"><a href="http://blog.csdn.net/ltyqljhwcm" target="_blank" id="uid">ltyqljhwcm</a></h3>
                    <span  class="csdn-tracking-statistics" data-mod="popu_379"><a class="btn btn-redborder-small "  id="span_add_follow" target="_self">＋关注</a></span>
                </dd>
            </dl>
            <div class="inf_number_box clearfix">
                <dl>
                    <dt>原创</dt>
                    <dd>219</dd>
                </dl>
                <dl>
                    <dt>粉丝</dt>
                    <dd id='fan'>39</dd>
                </dl>
                <dl>
                    <dt>喜欢</dt>
                    <dd>0</dd>
                </dl>
								 <dl>
              <dt>码云</dt>
              <dd>&nbsp;</dd>
            </dl>

            </div>
	    <div class="writings">
              <div class="public_signal clearfix">
                <h3>他的最新文章</h3>
                <a href="http://blog.csdn.net/ltyqljhwcm" target="_blank" class="more_z"><span>更多文章</span></a>
              </div>
                <ul class="inf_list clearfix csdn-tracking-statistics" data-mod="popu_382">
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53454971" target="_blank">POJ 3295 - 位运算 + 模拟 +递归</a>
                    </li>
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53444306" target="_blank">NYOJ 118 次小生成树</a>
                    </li>
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53434466" target="_blank">胜者树 败者树 K-路最佳归并树 高效外部排序</a>
                    </li>
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53411183" target="_blank">POJ 1062 - 昂贵的聘礼 - 经典题</a>
                    </li>
                    
                </ul>
            </div>
        </div>
        <div class="extension_other csdn-tracking-statistics" data-mod="popu_389">
						<!--u3032528-->
			<div class="flashrecommend">
            <script type="text/javascript" src="http://mpb1.iteye.com/bwocoltlyzdec.js"></script>
		    </div>
        </div>

		<div class="host-column">
          <h3>博主专栏</h3>
          <ul class="column-list">

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/13704.html">
                  <img src="http://img.blog.csdn.net/20161126164008952" alt="">
                  <div>15</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/13704.html">NYOJ 好题总结</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>3080</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/13628.html">
                  <img src="http://img.blog.csdn.net/20161121124730884" alt="">
                  <div>56</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/13628.html">POJ 专项题解</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>19375</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/13409.html">
                  <img src="http://img.blog.csdn.net/20161102193750895" alt="">
                  <div>4</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/13409.html">Leetcode</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>1266</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/12932.html">
                  <img src="http://img.blog.csdn.net/20160915093249392" alt="">
                  <div>8</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/12932.html">读书笔记</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2246</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/12704.html">
                  <img src="http://img.blog.csdn.net/20160826002037987" alt="">
                  <div>37</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/12704.html">算法与数据结构</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>41992</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/mystudyrecord001.html">
                  <img src="http://img.blog.csdn.net/20160809183336359" alt="">
                  <div>15</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/mystudyrecord001.html">微软面试百题</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>8448</span></div>
              </div>
            </li>

          </ul>
          <div class="unfold-btn">
            <span>展开</span><i class="icon iconfont icon-xiajiantou"></i>
          </div>
        </div>
		
        
        <div class="fixRight">
            <div class="right_box padb0 csdn-tracking-statistics" data-mod="popu_391">
                <h3 class="tit"><span><em>在线课程</em></span></h3>
                <ul class="edu_li clearfix">
                  
                  <li>
                    <div>
                      <a href="http://edu.csdn.net/huiyiCourse/series_detail/64?utm_source=blog7" target="_blank">
                        <img src="http://img.bss.csdn.net/201710111134087930.png" alt="Presto服务治理与架构优化在京东的实践应用" title="Presto服务治理与架构优化在京东的实践应用">
                      </a>
                    </div>
                    <div>
                      <p><a href="http://edu.csdn.net/huiyiCourse/series_detail/64?utm_source=blog7" target="_blank">Presto服务治理与架构优化在京东的实践应用</a></p>
                      <p>讲师：王哲涵</p>
                    </div>
                  </li>
                  
                  <li>
                    <div>
                      <a href="http://edu.csdn.net/huiyiCourse/detail/581?utm_source=blog7" target="_blank">
                        <img src="http://img.bss.csdn.net/201710111123195350.png" alt="【免费直播】Python最佳学习路线" title="【免费直播】Python最佳学习路线">
                      </a>
                    </div>
                    <div>
                      <p><a href="http://edu.csdn.net/huiyiCourse/detail/581?utm_source=blog7" target="_blank">【免费直播】Python最佳学习路线</a></p>
                      <p>讲师：韦玮</p>
                    </div>
                  </li>
                  
                </ul>
            </div>
			<!--u3032529-->
            <!-- <div class="extension_other csdn-tracking-statistics baidu_box" data-mod="popu_395">
								
                <script type="text/javascript" src="http://mpb1.iteye.com/cxpdpmumfaedgm.js"></script>
            </div> -->
			<div class="extension_other csdn-tracking-statistics bottomRcom" data-mod="popu_389" style="position:absolute;z-index:-5;opacity:0;pointer-events:none">
						<!--u3032528-->
				<div class="flashrecommend">
				<script type="text/javascript" src="http://mpb1.iteye.com/bwocoltlyzdec.js"></script>
				</div>
			</div>
        </div>
		<div class="user-hotArticle">
          <h3>热门文章</h3>
          <ul class="hotArticle-list">
 
            <li>
              <a href="/ltyqljhwcm/article/details/53043646">快速幂取模算法详解</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>5853</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/51952942">最短路径算法汇总</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>4540</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/52966874">ELFhash - 优秀的字符串哈希算法</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2787</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/52145746">快速排序全面讲解（含复杂度证明）——即将引出八大排序算法</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2041</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/52497853">2016BIT小学期——电话号码问题（哈希+位运算）</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>1921</span></div>
            </li>
 
          </ul>
        </div>


    </aside>
</div>

<div class="left_fixed">
      <div class="left_show_button">
        <span>
          <i class="icon iconfont icon-youjiantou"></i>
        </span>
      </div>
    <ul class="left_menu">

        <li>
            <button class="left-fixed-btn btn-like csdn-tracking-statistics" data-mod="popu_373" target="_self">
                <span class="iconbox border_red"><i class="icon iconfont icon-dianzan"></i></span>
				<span class="txt">1</span>
            </button>
        </li>
		<li id="blog_artical_directory">
            <button class="left-fixed-btn left_menu_btn csdn-tracking-statistics" data-mod="popu_372" target="_self">
                <span class="iconbox border_black"><i class="icon iconfont icon-mulu"></i></span>
            </button>
        </li>
        <li class="menu_con">
            <div class="list_father">
                <div class="arr_box">
                    <button class="btn-noborder arr-btn scroll-down  left_scroll_down"><i class="icon iconfont icon-xiajiantou"></i></button>
                    <button class="btn-noborder arr-btn scroll-up left_scroll_top"><i class="icon iconfont icon-shangjiantou"></i></button>
                </div>
                <div class="arr"></div>
                <div id="csdnBlogDir"></div>
            </div>
        </li>
        <li>
            <button class="left-fixed-btn csdn-tracking-statistics" data-mod="popu_374"  id="com-quick-collect" target="_self">
                <span class="iconbox border_purple"><i class="icon iconfont icon-shoucang"></i></span>
    
            </button>
        </li>
		<li>
          <button class="left-fixed-btn btn-pinglun" >
            <span class="iconbox border_purple"><i class="icon iconfont icon-pinglun"></i></span>
          </button>
        </li>
        <li id="share_box">
            <button class="left-fixed-btn  csdn-tracking-statistics"  data-mod="popu_375" target="_self">
                <span class="iconbox border_orange"><i class="icon iconfont icon-fenxiang"></i></span>
            </button>
            <div class="bdsharebuttonbox csdn-tracking-statistics" data-mod="popu_172">
                <div class="outside">
                    <span class="iconbox border_red2"><i class="icon iconfont icon-xinlang"></i></span>
                    <a href="#" class="bds_tsina" data-cmd="tsina" title="分享到新浪微博"> </a>
                </div>
                <div class="outside">
                    <span class="iconbox border_green"><i class="icon iconfont icon-weixin"></i></span>
                    <a href="#" class="bds_weixin" data-cmd="weixin" title="分享到微信"> </a>
                </div>
                <div class="outside">
                    <span class="iconbox border_blue"><i class="icon iconfont icon-QQ"></i></span>
                    <a href="#" class="bds_qzone" data-cmd="qzone" title="分享到QQ空间"> </a>
                </div>
            </div>
        </li>
    </ul>
</div>
<div class="right_fixed">
  <div class="r_ico">
	<i class="icon iconfont icon-jubao"></i>
	<span class="txt" id="reportBtn">内容举报</span>
  </div>
  <div class="returnTop">
   <i class="icon iconfont icon-fanhuidingbu"></i>
   <span>返回顶部</span>
 </div>
</div>
<div id="pop_win"></div>
<div id="popup_mask"></div>
<div class="pop_CA_cover" ></div>
<div class="pop pop_CA" >
    <div class="CA_header">
        收藏助手
        <span class="cancel_icon"  id="fapancle" ></span>
    </div>
    <iframe src="" id="collectIframe" frameborder="0" width="100%" height="360"  scrolling="no" ></iframe>
</div>
<!--举报-->
<div id="report_dialog" style="top: 250px; left: 343.5px;"><div id="panel_report">
    <div class="panel_head">不良信息举报</div>
    <form method="post" id="frmReport" class="panel_body">
        <table border="0" cellpadding="0" cellspacing="4" class="pop_table">
            <tbody><tr><td colspan="2">您举报文章：<a href="http://blog.csdn.net/raintungli/article/details/76583070" target="_blank">深度学习：神经网络中的前向传播和反向传播算法推导</a></td></tr>
            <tr>
                <th style="width:60px;">举报原因：</th>
                <td id="panel_reporttype">
                    <label><input type="radio" class="report_type" id="report_sex" name="report_type" value="1">色情</label>
                    <label><input type="radio" class="report_type" id="report_Politics" name="report_type" value="2">政治</label>
                    <label><input type="radio" class="report_type" id="report_copy" name="report_type" value="3">抄袭</label>
                    <label><input type="radio" class="report_type" id="report_ad" name="report_type" value="4">广告</label>
                    <label><input type="radio" class="report_type" id="report_want" name="report_type" value="5">招聘</label>
                    <label><input type="radio" class="report_type" id="report_call" name="report_type" value="6">骂人</label>
                    <br>
                    <label><input type="radio" class="report_type" id="report_other" name="report_type" value="7">其他</label>
                    <input type="text" name="report_other_content" id="report_other_content" maxlength="30" style="display: none;">
                </td>
            </tr>
            <tr id="panel_originalurl" style="display: none;">
                <th>原文地址：</th>
                <td>
                    <input id="originalurl" value="http://" name="originalurl" type="text" style="width: 90%;">
                </td>
            </tr>
            <tr>
                <th id="sp_reason">原因补充：</th>
                <td>
                    <textarea id="report_description" style="width: 300px;" rows="3" name="report_description"></textarea>
                    <p id="sp_n" style="color:#999;margin:0px;padding:0px;">(最多只允许输入30个字)</p>
                </td>
            </tr>
            <tr>
                <td></td>
                <td>
                    <input id="btnSubmitReport" name="submit" type="image" align="middle" class="btn_1" src="http://static.blog.csdn.net/images/btn_submit.jpg">
                    <span style="padding-left:20px;"></span>
                    <img id="btnCloseReportDialog" src="http://static.blog.csdn.net/images/btn_cancel.jpg" align="middle">
                    <div id="error" style="color: Red">
                    </div>
                </td>
            </tr>
            </tbody></table>
    </form>
</div>
    <script language="javascript" type="text/javascript">
        var isComment=0;
        //显示隐藏地址
        $(function () {
            if(isComment){
                $("#report_description").attr("disabled",true);
                $("#sp_n").hide();
                $("#sp_reason").html("评论内容：");
            }
            $(".report_type").click(function () {
                $("#panel_originalurl,#report_other_content").hide();
                switch ($(this).val()) {
                    case '3':
                        $("#panel_originalurl").show();
                        $("#originalurl").focus();
                        break;
                    case '7':
                        if(isComment){
                            $("#report_other_content").show().focus();
                        }
                        break;
                }

            });

            $("#frmReport").submit(function () {
                if (!currentUserName) {

                    if (confirm("您的操作必须登录，是否登录？")) {
                        location.href = "http://passport.csdn.net/account/login?from=" + encodeURIComponent(location.href);
                        return false;
                    }
                    return false;
                }

                var reportType = $("input[name=report_type]:checked").val();
                if(!reportType){
                    alert("请选择举报原因！");
                    return false;
                }
                var otherInfo = "";
                switch (reportType) {
                    case '3':
                        otherInfo = $("#originalurl").val();
                        if (otherInfo == ""||otherInfo=="http://") {
                            alert("举报抄袭必须提供原创文章地址！");
                            $("#originalurl").focus();
                            return false;
                        } else if(!checkeURL(otherInfo)) {
                            alert("请输入正确的原创文章地址！");
                            $("#originalurl").focus();
                            return false;
                        }
                        break;
                    case '7':
                        otherInfo = $("#report_other_content").val();
                        if (isComment && !otherInfo) {
                            alert("请填写举报的具体原因！");
                            $("#report_other_content").focus();
                            return false;
                        }
                        if(!isComment){
                            if(!$("#report_description").val()){
                                alert("请填写举报的具体原因！");
                                $("#report_description").focus();
                                return false;
                            }
                        }
                        break;
                }
                if(!isComment){
                    if($("#report_description").val().length>30){
                        alert("举报原因最多只允许输入30个字！");
                        return false;
                    }
                }

                var data = {
                    articleId: 76583070,
                    commentId: 0,
                    reportType: reportType,
                    originalurl: $("#originalurl").val(),
                    report_other_content: $("#report_other_content").val(),
                    report_description: $("#report_description").val(),
                    currentUserName: currentUserName,
                    updatetime: "2017/8/8 16:54:12",
                    blogUser: "raintungli"
                };
                if(!isComment){//如果是举报文章
                    data.report_other_content = data.report_description;
                    data.report_description = "1. 神经网络这是一个常见的神经网络的图：这是一个常见的三层神经网络的基本构成，Layer L1是输入层，Layer L2是隐含层";
                }

                $.post(blog_address + "/common/report?id=76583070&t=2", data, function (data) {
                    if (data.result == 1){
                        SetError("感谢您的举报，我们会尽快审核！");
                    }else{
                        if (data.content) alert(data.content);
                    }

                });
                return false;
            });

            $("#btnCloseReportDialog").click(function () {
                CloseDiv();
            });

        });

        //提示后关闭方法
        function SetError(error) {
            $("#btnCloseReportDialog").trigger("click");
            alert(error);
            CloseDiv();
        }

        //关闭方法
        function CloseDiv() {

            $.removeMask();
            $("#report_dialog").hide().html("");
            return false;
        }

        //验证url
        function checkeURL(url){
            return /^http(s)?:\/\/([\w-]+\.)+[\w-]+/i.test(url);
        }
    </script>
</div>

<script src="http://c.csdnimg.cn/public/common/libs/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/public/res/bower-libs/MathJax/MathJax.js?config=TeX-AMS_HTML"></script>
<script type="text/javascript" src="http://passport.csdn.net/content/loginbox/login.js"></script>

<script type="text/javascript" src="http://static.blog.csdn.net/Skin/skin3-template/js/blog_ver.js?v=3"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/Skin/skin3-template/js/skin2017.js?v=2017.032"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/cnick.js"></script>
<script>window._bd_share_config = { "common": { "bdSnsKey": {}, "bdText": "", "bdMini": "1", "bdMiniList": false, "bdPic": "", "bdStyle": "0", "bdSize": "16" }, "share": {} }; with (document) 0[(getElementsByTagName('head')[0] || body).appendChild(createElement('script')).src = 'http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion=' + ~(-new Date() / 36e5)];</script>
<script type="text/javascript" >
    if($(".article_collect li").length==1){$(".article_collect").hide();}
    if($(".article_tags li").length==1){$(".article_tags").hide();}
    $(".edit a").attr("href","http://write.blog.csdn.net/postedit/"+fileName);
    $.each($(".edu_li a"),function(){$(this).attr("href",$(this).attr("href").replace("blog7","blog9"))});
    new CNick('#uid').showNickname();
if($("#fan").html()=="")
{
$("#fan").html(0);	
}
</script>
</body>

<script  type="text/javascript">
    var fromjs=$("#fromjs");
    if(fromjs.length>0)
    {                  
        $("#fromjs .markdown_views pre").addClass("prettyprint");       
        prettyPrint();

        $('pre.prettyprint code').each(function () {
            var lines = $(this).text().split('\n').length;
            var $numbering = $('<ul/>').addClass('pre-numbering').hide();
            $(this).addClass('has-numbering').parent().append($numbering);
            for (i = 1; i <= lines; i++) {
                $numbering.append($('<li/>').text(i));
            };
            $numbering.fadeIn(1700);
        });

        $('.pre-numbering li').css("color","#999");             
    }

    $(function(){
        setTimeout(function(){
            $(".math").each(function(index,value){$(this).find("span").last().css("color","#fff"); })
        },500);         
       

    });

    setTimeout(function () {
        $(".toc a[target='_blank']").attr("target", "");
    }, 500);

</script>
</html>

