
<!DOCTYPE html>
<html>
<head>
            <link rel="canonical" href="http://blog.csdn.net/ltyqljhwcm/article/details/52750937"/> 

    <script type="text/javascript">
        var username = "ltyqljhwcm";var _blogger = username;var blog_address = "http://blog.csdn.net/ltyqljhwcm";var static_host = "http://static.blog.csdn.net";
        var currentUserName = ""; var fileName = '52750937';var commentscount = 0; var islock = false
        window.quickReplyflag = true;
        var totalFloor=0;
                
                 var isBole = false;
                
                
                 var isDigg = false;
                
          
             var isExpert=false;
          
    </script>

<meta http-equiv="content-type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <script src="http://c.csdnimg.cn/public/common/libs/jquery/jquery-1.9.1.min.js" type="text/javascript"></script>
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/common/libs/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/static/css/avatar.css">
    <link type="text/css" rel="stylesheet" href="http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/default.css" />
    <link rel="stylesheet" href="http://static.blog.csdn.net/Skin/skin3-template/css/style.css?v=2017.032">
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/common/toolbar/content_toolbar_css/content_toolbar.css">

    <script type="text/javascript" src="http://static.blog.csdn.net/Skin/skin3-template/fonts/iconfont.js"></script>
    <script src="//csdnimg.cn/rabbit/exposure-click/main.js?v1.15.23"></script>
    <script type="text/javascript" src="http://c.csdnimg.cn/pubfooter/js/tracking_for_recommend.js?v=0911" charset="utf-8"></script>
    <script type="text/javascript" src="http://csdnimg.cn/pubfooter/js/tracking.js" charset="utf-8"></script>
    <script type="text/javascript" src="http://static.blog.csdn.net/scripts/cnick.js" charset="utf-8"></script>
 
    <link rel="stylesheet" href="http://static.blog.csdn.net/code/prettify.css" />
    <script type="text/javascript" src="http://static.blog.csdn.net/code/prettify.js"></script>
<script src="http://dup.baidustatic.com/js/ds.js"></script>
    <script type="text/javascript">

        // Traffic Stats of the entire Web site By baidu
        var _hmt = _hmt || [];
        (function() {
            var hm = document.createElement("script");
            hm.src = "https://hm.baidu.com/hm.js?6bcd52f51e9b3dce32bec4a3997715ac";
            var s = document.getElementsByTagName("script")[0];
            s.parentNode.insertBefore(hm, s);
        })();
        // Traffic Stats of the entire Web site By baidu end



    </script>
    <meta name="description" content="1.何为线段树
准确的来说，线段树是一种平衡二叉树，当我们的要换分的区间大小是2的幂的话，刚好我们的线段树就是一颗满二叉树，但是如果不是的话，我们最多只能叫他是平衡二叉树
正因为是一颗平衡二叉树，所以说，线段树的划分是均匀的，树高也稳定在logn上(这也就是我们的优化的源泉)


上面只是个人的一点小理解，下面我们步入正题
线段树Segment Tree，是BST二叉搜索树而一种应用，" />
    <meta name="keywords" content="" />
    <meta http-equiv="Cache-Control" content="no-siteapp" /><link rel="alternate" media="handheld" href="#" />
    <meta name="shenma-site-verification" content="5a59773ab8077d4a62bf469ab966a63b_1497598848">


    <title>Segment Tree 线段树总结 - CSDN博客</title>
</head>
<body>
<script id="toolbar-tpl-scriptId" prod="download" skin="black" src="http://c.csdnimg.cn/public/common/toolbar/js/content_toolbar.js" type="text/javascript" domain="http://blog.csdn.net"></script>

<div class="container clearfix">
    <main>
        <article>
            <h1 class="csdn_top">Segment Tree 线段树总结</h1>
            <div class="article_bar clearfix">
                <div class="artical_tag">
                    <span class="original">原创</span>
                    <span class="time">2016年10月07日 19:00:55</span>
                </div>
				<ul class="article_tags clearfix csdn-tracking-statistics" data-mod="popu_377">
					<li class="tit">标签：</li>
					
				</ul>
                <ul class="right_bar">
                    <li><button class="btn-noborder"><i class="icon iconfont icon-read"></i><span class="txt">891</span></button></li>
                    <!--<li><button class="btn-noborder"><i class="icon iconfont icon-dashang-"></i><span class="txt">0</span></button></li>-->

                    <li class="edit">
                        <a class="btn-noborder" href="" >
                            <i class="icon iconfont icon-bianji"></i><span class="txt">编辑</span>
                        </a>
                    </li>
                    <li class="del">
                        <a class="btn-noborder" onclick="javascript:deleteArticle(fileName);return false;">
                            <i class="icon iconfont icon-shanchu"></i><span class="txt">删除</span>
                        </a>
                    </li>
                </ul>
            </div>
            <div id="article_content" class="article_content csdn-tracking-statistics" data-mod="popu_307" data-dsm="post">
                
<h2>1.何为线段树</h2>
<div>准确的来说，线段树是一种平衡二叉树，当我们的要换分的区间大小是2的幂的话，刚好我们的线段树就是一颗满二叉树，但是如果不是的话，我们最多只能叫他是平衡二叉树</div>
<div>正因为是一颗平衡二叉树，所以说，线段树的划分是均匀的，树高也稳定在logn上(这也就是我们的优化的源泉)</div>
<div><br>
</div>
<div>上面只是个人的一点小理解，下面我们步入正题</div>
<div>线段树Segment Tree，是BST二叉搜索树而一种应用，是一种应用广泛的高级数据结构</div>
<div>主要用来查找区间的覆盖问题等</div>
<div><br>
</div>
<div>定义：</div>
<div>线段树并不是如字面意思上来的说，我们每一个树中结点都保留一串数据，那样的话我们的空间复杂度就会变得难以想象了，在这里我们数据只有一份，但是我们的线段树中的节点保存的是<strong><em>区间的范围&nbsp;</em></strong></div>
<div>另外我们还会保存一些其他的数据域，这些都是看具体的题目的要求了</div>
<h2>2.操作</h2>
<div>作为一种数据结构，我们对线段树有以下几个基本操作的描述</div>
<div>1.建树</div>
<div>2.插入</div>
<div>3.修改</div>
<div>4.查询</div>
<div>5.先上维护数据域</div>
<div>6.向下继承lazy-tag（这个我们之后会讲解）</div>
<h2>3.数据结构的选择</h2>
<div>1.链式</div>
<div>我们一开始首先可以联想到线段树的链式存储方式，链式存储的优势在于我们可以动态分配内存，从而我们能够最大限度的利用的我们的空间，不会出现我们无法确定线段户的内存的大小的问题（之后会讲解为什么至少需要4倍内存空间）</div>
<div>但是对于链式存储来说，我们还需要额外开辟内存来保存指针变量，但是在数量很大并且捉摸不透的时候，采用链式存储是一个明智的选择</div>
<div>2.数组</div>
<div>在这里，我们的数组的存储方式是有些类&#20284;于二叉堆的存储的方式结构的</div>
<div>因为线段树和堆一样是一颗平衡二叉树，所以说对于节点的标号为n的话，n*2必定代表的是左儿子，n*2&#43;1必定代表的是右儿子</div>
<div>这样的话，相对于链式存储我们可以节约出来两个指针域的内存空间，但是这样的话，我们就需要开辟至少4倍的内存空间的大小</div>
<div><br>
</div>
<div>在本文中，为了方便叙述，我们采用的是数组的形式</div>
<h2>4.操作解析及复杂度：</h2>
<div>数据</div>
<div><pre code_snippet_id="1916029" snippet_file_name="blog_20161007_1_7970577"  name="code" class="cpp">typedef struct node
{
	int left;   //区间左端 
	int right;   //区间右端 
	int val;   //区间数据域，按照题目要求可以修改
	int lazy;   //延迟标记 ，基本上是我们的对区间更新的数据，一般都会乘上我们的区间的长度饭换成我们的区间的数据域，我们一会可以解释 
}point;</pre></div>
<h3>PS:小心为预算的优先级小于&#43;，-</h3>
<div><br>
</div>
<div>空间复杂度是O(4*n)：</div>
<div>首先我们需要认识到<br>
线段树作为一种平衡二叉树，当我们的最终的区间长度是n的时候，我们的线段树最少需要2*n-1的节点内存<br>
但是，因为上述情况只有在我们的n是2的幂的时候才成立，但是当n不是2的幂的时候，我们因为在存储的时候，不是满二叉树<br>
所以说实际上会存在内存的浪费，极限的情况下会需要远远比2*n-1大的内存<br>
这时候，我们进行粗略的估计操作，我们找到比n大的最小的2的幂k，大致需要2*k-1的内存大小<br>
但是在最糟糕的情况下，k的&#20540;可能几乎就是n的2倍<br>
所以说，大致上我们开辟4*n的内存就完全够我们 的线段树的存储需要了&nbsp;<br>
</div>
<div><br>
</div>
<h3>1.建树</h3>
<div>建树操作，相当于我们前序遍历二叉树</div>
<div>我们对当前的节点进行初始化，然后依次的向下递归至我们的叶子节点</div>
<div>递归的终止是在于我们递归到的节点的区间为1，代表我们递归到了叶子节点，直接返回初始化并且更新就可以返回了</div>
<div>大致代码如下：</div>
<div><pre code_snippet_id="1916029" snippet_file_name="blog_20161007_2_9018136"  name="code" class="cpp">//建树操作    O(n)
void build(int left,int right,int pox)    //pox代表的是线段树种的节点存储的物理顺序地址 ,初始的时候是1 
{
	tree[pox].left=left;
	tree[pox].right=right;
	tree[pox].lazy=0;
	tree[pox].val=0;   //数据域初始化，这一句可以根据题目要求随时来改变
	if(left==right)   //找到最底层叶子结点，我们更新fa访问数组强制返回 
	{
		fa[left]=pox;
		return ;
	} 
	//递归操作，位运算加速 
	build(left,(left+right)/2,pox&lt;&lt;1);   
	build((left+right)/2+1,right,(pox&lt;&lt;1)+1); 
} 
</pre>时间复杂度是O(n),因为我们需要建立所有的叶子节点，故是O(n)的时间复杂度</div>
<div>
<h3>2.查询</h3>
<div>在这里，我们需要引入一个叫做完全覆盖的概念，这也是我们线段树优化的核心所在</div>
<div>如果我们将树中结点的信息都完全的保留在当前的树中结点的话，我们就完全没必要一直访问到叶子节点，我们找到完全福该节点的话，就可以直接的获取我们的需要的&#20540;然后退出就好了</div>
<div><pre code_snippet_id="1916029" snippet_file_name="blog_20161007_3_5779533"  name="code" class="cpp">//查询区间的数据域   O(logn)
int find(int left,int right,int pox)
{
	int sum=0;
	if(tree[pox].left==left&amp;&amp;tree[pox].right==right) return tree[pox].val;   //找到了完全覆盖区间，直接返回,该句本身也是一个递归中值判断语句 
	pox&lt;&lt;=1;
	if(tree[pox].right&gt;=left) 
	{
		if(right&lt;=tree[pox].right) sum+=find(left,right,pox);
		else sum+=find(left,tree[pox].right,pox);
	}
	pox+=1;
	if(tree[pox].left&lt;=right)
	{
		if(left&gt;=tree[pox].left) sum+=find(left,right,pox);
		else sum+=find(tree[pox].left,right,pox); 
	} 
	return sum;
}</pre>因为查询的深度就是我们的线段树的额深度，所以说我们的时间复杂度就是 O(logn)</div>
</div>
<div><br>
</div>
<div><br>
</div>
<h3>3.lazy-tag</h3>
<div>之后的lazy-tag等问题就要牵扯到区间更新了</div>
<div>如果是区间更新的话，我们的朴素做法无非就是将区间整个的遍历一遍然后统一进行修改操作，时间复杂度是O(n)<br>
但是对于线段树来说，如果我们每次都是一直递归到所有的叶子结点的话，我们也会发现，我们需要将所有的叶子结点<br>
都要修改覆盖，时间复杂度也是O(n)，这样我们就并没有实现复杂度上的优化，在这里我们就要引入lazy变量<br>
可以就其本质上来说的话，父节点的区间是完全的包含我们的子节点的区间的，所以说，我们就只用父节点区间来代表子节点区间就好了<br>
在这里，我们的引入的lazy变量就是这样的，我们将更新操作进行到完全覆盖的树中的节点的时候我们就退出，不对之后的叶子结点进行操作<br>
但是我会对该节点是加一个lazy标记，代表我们的更新只进行到这里，该节点之后的子节点并没有执行更新操作<br>
只有我们再次进行访问该节点额子节点的区间的时候，我们才会往下继续执行我们的更新操作，这样的话，通过完全覆盖的父区间，我们可以减少操作<br>
的复杂度，降低到 O(logn)，也就是最多我们也就执行到树的深度为止&nbsp;<br>
</div>
<div><br>
</div>
<div>所以说，我们的lazy-tag是非常有必要的</div>
<div>为了直白额表示我们上述的过程，附上一段代码</div>
<div><pre code_snippet_id="1916029" snippet_file_name="blog_20161007_4_7001032"  name="code" class="cpp">void pushdown_lazy(int pox)    //传递lazy标记，并更新子区间的val，注意我们的pox节点已经将val域更新了 
{
	if(tree[pox].lazy)   //该节点的lazy变量存在 
	{
		tree[pox&lt;&lt;1].lazy+=tree[pox].lazy;
		tree[pox&lt;&lt;1].val=tree[pox&lt;&lt;1].lazy*(tree[pox&lt;&lt;1].right-tree[pox&lt;&lt;1].left+1);   //根据我们lazy的值修改我们的数据域，lazy的值代表我们扽区间修改的基
		tree[(pox&lt;&lt;1)+1].lazy+=tree[pox].lazy;
		tree[(pox&lt;&lt;1)+1].val=tree[(pox&lt;&lt;1)+1].lazy*(tree[(pox&lt;&lt;1)+1].right-tree[(pox&lt;&lt;1)+1].left+1);
		tree[pox].lazy=0;   //lazy标记清除 
	}
} 

void pushup_val(int pox)   //数据域的向上更新函数，一会在update_segment函数我再解释该函数以及上一个函数的额具体作用 
{
	tree[pox].val=tree[pox&lt;&lt;1].val+tree[(pox&lt;&lt;1)+1].val;   //将左右区间的值合并生成该父区间的值 
} 

void update_segment(int left,int right,int pox,int k)   //k代表区间更新的值，left和right代表的是当前需要更新的区间的范围，pox代表当前的树中节点的物理下标 
{
	if(tree[pox].left==left&amp;&amp;tree[pox].right==right)    //完全覆盖的时候，我们就直接退出，这就是上面的叙述中的优化的本质，对lazy标记的应用 
	{
		tree[pox].lazy+=k;   //lazy打标成功
		tree[pox].val=tree[pox].lazy*(tree[pox].right-tree[pox].left+1);   //更新该节点的数据域 
		return ; 
	}  
	if(tree[pox].left==tree[pox].right) return ;    //更新到了叶子结点，进行递归终止
	//以下代码的运行的原因是还没有找到完全覆盖的树中节点，所以继续向下更新树 
	pushdown_lazy(pox);   //没有找到完全覆盖的节点，向下查找完全覆盖的节点，并将我们的lazy标记传递下去，但是这里我们需要注意，pox节点的val域没有更新维护，还是空的
    if(right&lt;=tree[pox&lt;&lt;1].right) update_segment(left,right,pox&lt;&lt;1,k);
	else if(left&gt;=tree[(pox&lt;&lt;1)+1].left) update_segment(left,right,(pox&lt;&lt;1)+1,k);
	else
	{
		update_segment(left,tree[pox&lt;&lt;1].right,pox&lt;&lt;1,k);
		update_segment(tree[(pox&lt;&lt;1)+1].left,right,(pox&lt;&lt;1)+1,k);
	} 
	pushup_val(pox);   //上面已经说了，pox节点并没有更新维护，所以说，我们在回溯的时候必须要将我们的数据域更新，一直返还到我们的你根结点处，但是我们只要更新了，就必须要回溯的时候，对数据域必须要进行同步的更新
    //当然该函数也可以封装在pushdown函数里面，这都无所谓了 
} 
 </pre>上面一段的代码的作用是将一段子区间同时加上一个数的操作，主要的解释都已经注释了</div>
<div><br>
</div>
<div><br>
</div>
<link rel="stylesheet" href="http://static.blog.csdn.net/public/res-min/markdown_views.css?v=2.0" />
            </div>
        </article>
        <div class="readall_box csdn-tracking-statistics" data-mod="popu_376">
			<div class="read_more_mask"></div>
            <a class="btn btn-large btn-gray-fred read_more_btn" target="_self">阅读全文</a>
        </div>
        <div class="article_copyright">
            版权声明：本文为博主原创文章，未经博主允许不得转载。
        </div>
        <!--  <div class="reward_box">
            <div class="tit">
              <button class="btn_reward"><i class="icon iconfont icon-dashang-"></i></button>
            </div>
            <dl class="clearfix">
              <dt><a href="#" target="_blank">近期打赏</a></dt>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
            </dl>
          </div>-->

        <ul class="article_collect clearfix csdn-tracking-statistics"  data-mod="popu_378">
            <li class="tit">本文已收录于以下专栏：</li>
            
            <li><a href="http://blog.csdn.net/column/details/12704.html" target="_blank">算法与数据结构</a></li>
            
        </ul>
        <div class="comment_box clearfix">
            <div id="comment_form">
                <div id="commentsbmitarear">
                    <!-- <h6><span>0</span>条评论</h6> -->
           <!--          <dl class="clearfix" id="commentbox">
                        <dt>
                            <a href="http://my.csdn.net/"><img src="" ></a>
                        </dt>
                        <dd>
                            <a href="http://my.csdn.net/" target="_blank"></a>
                        </dd>
                        <dd class="txt_tip"><span id="tip_comment" class="tip"></span></dd>
                    </dl> -->
                    <div class="comment_area clearfix">
						<div class="userimg"><a href="http://my.csdn.net/"><img src=""></a></div>
                        <form action="/ltyqljhwcm/comment/submit?id=52750937" method="post" onsubmit="return subform(this);" id="commentform">
                            <textarea class="comment_content" name="comment_content" id="comment_content" placeholder="发表你的评论"></textarea>
                            <div class="bot_bar clearfix">
                                <div id="ubbtools" class="add_code">
                                    <a href="#insertcode" code="code" target="_self"><i class="icon iconfont icon-daima"></i></a>
                                </div>

                                <input type="hidden" id="comment_replyId" name="comment_replyId">
                                <input type="hidden" id="comment_userId" name="comment_userId" value="">
                                <input type="hidden" id="commentId" name="commentId" value="">
                                <input type="submit" class="btn btn-redborder" value="发表评论">
								<span id="tip_comment" class="tip">
                                <div style="display: none;" class="csdn-tracking-statistics" data-mod="popu_384"><a href="#" target="_blank" class="comment_area_btn">发表评论</a></div>

                                <div id="lang_list" code="code">
                                    <a href="#html" style="width:95px;" class="long_name" target="_self">HTML/XML</a>
                                    <a href="#objc" style="width:95px;" class="long_name" target="_self">objective-c</a>
                                    <a href="#delphi" style="width:58px;" class="zhong_name" target="_self">Delphi</a>
                                    <a href="#ruby" class="zhong_name" target="_self">Ruby</a>
                                    <a href="#php" target="_self">PHP</a>
                                    <a href="#csharp" class="duan_name" target="_self">C#</a>
                                    <a style=" border-right: none;" href="#cpp" class="duan_name" target="_self">C++</a>
                                    <a style=" border-bottom:none;width:95px;" href="#javascript" class="long_name" target="_self">JavaScript</a>
                                    <a style=" border-bottom:none;width:95px;" href="#vb" class="long_name" target="_self">Visual Basic</a>
                                    <a style=" border-bottom:none;" href="#python" class="zhong_name" target="_self">Python</a>
                                    <a style=" border-bottom:none;" href="#java" class="zhong_name" target="_self">Java</a>
                                    <a style="border-bottom:none;" href="#css" class="duan_name" target="_self">CSS</a>
                                    <a style="border-bottom:none;" href="#sql" class="duan_name" target="_self">SQL</a>
                                    <a style="border:none; " href="#plain" class="duan_name" target="_self">其它</a>
                                    <span class="arrb"></span>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="comment_li_outbox">
            <div id="comment_list"></div>
        </div>

        <div class="more_comment">
            <div id="comment_bar" class="trackgin-ad" data-mod="popu_385"></div>
        </div>

        <h3 class="recommend_tit">相关文章推荐</h3>
        <div class="recommend_list clearfix">
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/zearot/article/details/48299459"  target="_blank" strategy="BlogCommendFromBaidu_0">线段树详解 （原理，实现与应用）</a></h2>
                    <div class="summary">
                        线段树详解
By 岩之痕
一：综述
线段树是一种可以快速进行区间修改和区间查询的数据结构。点修改，区间修改和区间查询的复杂度都是O(log2(n))
并且，线段树可以维护很多种类的信息。说到线段树就不...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/u012891242" target="_blank" strategy="BlogCommendFromBaidu_0"><img src="http://avatar.csdn.net/9/F/8/2_u012891242.jpg" alt="u012891242" title="u012891242"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/u012891242">u012891242</a></li>
                        <li class="time">2015-09-09 01:58</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>14562</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/liuchenjane/article/details/55259853"  target="_blank" strategy="BlogCommendFromBaidu_1">segment tree(线段树)</a></h2>
                    <div class="summary">
                        简介&#160;
        线段树(segment tree)是一种存储区间的树形结构，方便查询哪一个区间包含了指定的点，原则上，它是一种固定结构，
一旦建成该树，它的结构不会改变。



...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/liuchenjane" target="_blank" strategy="BlogCommendFromBaidu_1"><img src="http://avatar.csdn.net/8/B/E/2_liuchenjane.jpg" alt="liuchenjane" title="liuchenjane"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/liuchenjane">liuchenjane</a></li>
                        <li class="time">2017-02-16 21:56</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>185</span></li>
                    </ul>
                </dd>
            </dl>
            
            <!--dl class="clearfix csdn-tracking-statistics" data-mod="popu_393">
                <dt><a href="http://edu.csdn.net/huiyiCourse/series_detail/64?utm_source=blog10" target="_blank"><img class="maxwidth" src="http://img.blog.csdn.net/20170928113144608" alt="" title=""></a></dt>
                <dd>
                    <div class="summary">
                        <h2><a href='http://edu.csdn.net/topic/python1?utm_source=blog10' target='_blank'>伤心啊！年度热门编程语言排行榜出来了...</a></h2>  <div class="summary">近期，IEEE Spectrum 发布了第四届顶级编程语言交互排行榜。结合 10 个线上数据源的 12 个标准，对 48 种语言进行了排行！此外，七牛云许式伟曾说过Go语言会取代Java...气氛... </div> 
                    </div>
                </dd>
            </dl-->
	<script>
		(function() {
		    var s = "_" + Math.random().toString(36).slice(2);
		    document.write('<div id="' + s + '"></div>');
		    (window.slotbydup=window.slotbydup || []).push({
			id: '4765209',
			container: s,
			size: '808,120',
			display: 'inlay-fix'
		    });
		})();
	</script>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/tri_color_flag/article/details/53213941"  target="_blank" strategy="BlogCommendFromCsdn_2">439.Segment Tree Build II-线段树的构造 II（中等题）</a></h2>
                    <div class="summary">
                        线段树的构造 II 
题目线段树是一棵二叉树，他的每个节点包含了两个额外的属性start和end用于表示该节点所代表的区间。start和end都是整数，并按照如下的方式赋值:根节点的 start 和 ...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/Tri_Color_Flag" target="_blank" strategy="BlogCommendFromCsdn_2"><img src="http://avatar.csdn.net/A/0/B/2_tri_color_flag.jpg" alt="Tri_Color_Flag" title="Tri_Color_Flag"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/Tri_Color_Flag">Tri_Color_Flag</a></li>
                        <li class="time">2016-11-18 11:00</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>228</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/u010372095/article/details/46489113"  target="_blank" strategy="BlogCommendFromCsdn_3">XTU1238Segment Tree(线段树)解题思想必较经典</a></h2>
                    <div class="summary">
                        Segment Tree



Accepted : 9
&#160;
Submit : 123


Time Limit : 9000 MS
&#160;
Memory Limit : 65536...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/u010372095" target="_blank" strategy="BlogCommendFromCsdn_3"><img src="http://avatar.csdn.net/1/E/4/2_u010372095.jpg" alt="u010372095" title="u010372095"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/u010372095">u010372095</a></li>
                        <li class="time">2015-06-14 08:12</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>682</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/fanfank/article/details/8930394"  target="_blank" strategy="BlogCommendFromCsdn_4">Sicily 1136 山海经 （SOJ 1136） 【Segment Tree 线段树】</a></h2>
                    <div class="summary">
                        原题地址：点击打开链接
这题花了整整一天来做，错误基本都是TLE，但是做完非常哈皮，因为感觉比较好地运用了线段树这个数据结构。话说这几天广东不是一般热，中午根本睡不着，满身黏糊糊，课室和图书馆倒成了...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/fanfanK" target="_blank" strategy="BlogCommendFromCsdn_4"><img src="http://avatar.csdn.net/C/9/E/2_fanfank.jpg" alt="fanfanK" title="fanfanK"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/fanfanK">fanfanK</a></li>
                        <li class="time">2013-05-15 15:34</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>1361</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/apathecrazyfan/article/details/53647784"  target="_blank" strategy="BlogCommendFromCsdn_5">Java基础 - 线段树Java版的链式存储结构（Segment Tree）</a></h2>
                    <div class="summary">
                        区间[i,i+1]表示第i个元素。
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/ApatheCrazyFan" target="_blank" strategy="BlogCommendFromCsdn_5"><img src="http://avatar.csdn.net/A/F/0/2_apathecrazyfan.jpg" alt="ApatheCrazyFan" title="ApatheCrazyFan"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/ApatheCrazyFan">ApatheCrazyFan</a></li>
                        <li class="time">2016-12-18 20:09</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>120</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/apathecrazyfan/article/details/53647416"  target="_blank" strategy="BlogCommendFromCsdn_6">Java基础 - 线段树C/C++版（Segment Tree）三</a></h2>
                    <div class="summary">
                        本文转载自JustDoIt 的一片博文，下面是链接地址：
http://www.cnblogs.com/TenosDoIt/p/3453089.html



一 概述

线段树，类似区间树，它在各个...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/ApatheCrazyFan" target="_blank" strategy="BlogCommendFromCsdn_6"><img src="http://avatar.csdn.net/A/F/0/2_apathecrazyfan.jpg" alt="ApatheCrazyFan" title="ApatheCrazyFan"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/ApatheCrazyFan">ApatheCrazyFan</a></li>
                        <li class="time">2016-12-14 21:42</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>127</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/hyforthy/article/details/17724241"  target="_blank" strategy="BlogCommendFromCsdn_7">线段树(segment tree) code</a></h2>
                    <div class="summary">
                        线段树(segment tree)


线段树是一棵二叉树，记为T(a, b)，参数a,b表示区间[a,b]，其中b-a称为区间的长度，记为L。

线段树T(a,b)也可递归定义为：

若L&gt;1 : ...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/WMJ75617718" target="_blank" strategy="BlogCommendFromCsdn_7"><img src="http://avatar.csdn.net/C/F/B/2_wmj75617718.jpg" alt="WMJ75617718" title="WMJ75617718"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/WMJ75617718">WMJ75617718</a></li>
                        <li class="time">2014-01-01 01:05</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>796</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/libin56842/article/details/46493003"  target="_blank" strategy="BlogCommendFromCsdn_8">XTU1238:Segment Tree(线段树)</a></h2>
                    <div class="summary">
                        Segment Tree

Problem Description:

A contest is not integrity without problems about data struc...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/libin56842" target="_blank" strategy="BlogCommendFromCsdn_8"><img src="http://avatar.csdn.net/7/8/C/2_libin56842.jpg" alt="libin56842" title="libin56842"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/libin56842">libin56842</a></li>
                        <li class="time">2015-06-14 18:27</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>1544</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/tri_color_flag/article/details/53042201"  target="_blank" strategy="BlogCommendFromCsdn_9">247.Segment Tree Query II-线段树查询 II（中等题）</a></h2>
                    <div class="summary">
                        线段树查询 II 
题目对于一个数组，我们可以对其建立一棵 线段树, 每个结点存储一个额外的值 count 来代表这个结点所指代的数组区间内的元素个数. (数组中并不一定每个位置上都有元素)实现一个 ...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/Tri_Color_Flag" target="_blank" strategy="BlogCommendFromCsdn_9"><img src="http://avatar.csdn.net/A/0/B/2_tri_color_flag.jpg" alt="Tri_Color_Flag" title="Tri_Color_Flag"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/Tri_Color_Flag">Tri_Color_Flag</a></li>
                        <li class="time">2016-11-05 01:44</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>169</span></li>
                    </ul>
                </dd>
            </dl>
            

	   

            

            
        </div>
    </main>
    <aside>
        <div class="right_box user_info">
            <dl class="inf_bar clearfix">
                <dt class="csdn-tracking-statistics" data-mod="popu_381">
                    <a href="http://blog.csdn.net/ltyqljhwcm" target="_blank">
                        <img src="http://avatar.csdn.net/A/7/0/1_ltyqljhwcm.jpg" class="avatar_pic">
                    </a>
                    <span class="medals" title="">
                <svg class="icon" aria-hidden="true">
                    
                </svg>
              </span>
                </dt>
                <dd>
                    <h3 class="csdn-tracking-statistics"  data-mod="popu_380"><a href="http://blog.csdn.net/ltyqljhwcm" target="_blank" id="uid">ltyqljhwcm</a></h3>
                    <span  class="csdn-tracking-statistics" data-mod="popu_379"><a class="btn btn-redborder-small "  id="span_add_follow" target="_self">＋关注</a></span>
                </dd>
            </dl>
            <div class="inf_number_box clearfix">
                <dl>
                    <dt>原创</dt>
                    <dd>219</dd>
                </dl>
                <dl>
                    <dt>粉丝</dt>
                    <dd id='fan'>39</dd>
                </dl>
                <dl>
                    <dt>喜欢</dt>
                    <dd>0</dd>
                </dl>
								 <dl>
              <dt>码云</dt>
              <dd>&nbsp;</dd>
            </dl>

            </div>
	    <div class="writings">
              <div class="public_signal clearfix">
                <h3>他的最新文章</h3>
                <a href="http://blog.csdn.net/ltyqljhwcm" target="_blank" class="more_z"><span>更多文章</span></a>
              </div>
                <ul class="inf_list clearfix csdn-tracking-statistics" data-mod="popu_382">
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53454971" target="_blank">POJ 3295 - 位运算 + 模拟 +递归</a>
                    </li>
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53444306" target="_blank">NYOJ 118 次小生成树</a>
                    </li>
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53434466" target="_blank">胜者树 败者树 K-路最佳归并树 高效外部排序</a>
                    </li>
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53411183" target="_blank">POJ 1062 - 昂贵的聘礼 - 经典题</a>
                    </li>
                    
                </ul>
            </div>
        </div>
        <div class="extension_other csdn-tracking-statistics" data-mod="popu_389">
						<!--u3032528-->
			<div class="flashrecommend">
            <script type="text/javascript" src="http://mpb1.iteye.com/bwocoltlyzdec.js"></script>
		    </div>
        </div>

		<div class="host-column">
          <h3>博主专栏</h3>
          <ul class="column-list">

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/13704.html">
                  <img src="http://img.blog.csdn.net/20161126164008952" alt="">
                  <div>15</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/13704.html">NYOJ 好题总结</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>3080</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/13628.html">
                  <img src="http://img.blog.csdn.net/20161121124730884" alt="">
                  <div>56</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/13628.html">POJ 专项题解</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>19375</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/13409.html">
                  <img src="http://img.blog.csdn.net/20161102193750895" alt="">
                  <div>4</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/13409.html">Leetcode</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>1266</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/12932.html">
                  <img src="http://img.blog.csdn.net/20160915093249392" alt="">
                  <div>8</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/12932.html">读书笔记</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2246</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/12704.html">
                  <img src="http://img.blog.csdn.net/20160826002037987" alt="">
                  <div>37</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/12704.html">算法与数据结构</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>41992</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/mystudyrecord001.html">
                  <img src="http://img.blog.csdn.net/20160809183336359" alt="">
                  <div>15</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/mystudyrecord001.html">微软面试百题</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>8448</span></div>
              </div>
            </li>

          </ul>
          <div class="unfold-btn">
            <span>展开</span><i class="icon iconfont icon-xiajiantou"></i>
          </div>
        </div>
		
        
        <div class="fixRight">
            <div class="right_box padb0 csdn-tracking-statistics" data-mod="popu_391">
                <h3 class="tit"><span><em>在线课程</em></span></h3>
                <ul class="edu_li clearfix">
                  
                  <li>
                    <div>
                      <a href="http://edu.csdn.net/huiyiCourse/series_detail/64?utm_source=blog7" target="_blank">
                        <img src="http://img.bss.csdn.net/201710111134087930.png" alt="Presto服务治理与架构优化在京东的实践应用" title="Presto服务治理与架构优化在京东的实践应用">
                      </a>
                    </div>
                    <div>
                      <p><a href="http://edu.csdn.net/huiyiCourse/series_detail/64?utm_source=blog7" target="_blank">Presto服务治理与架构优化在京东的实践应用</a></p>
                      <p>讲师：王哲涵</p>
                    </div>
                  </li>
                  
                  <li>
                    <div>
                      <a href="http://edu.csdn.net/huiyiCourse/detail/581?utm_source=blog7" target="_blank">
                        <img src="http://img.bss.csdn.net/201710111123195350.png" alt="【免费直播】Python最佳学习路线" title="【免费直播】Python最佳学习路线">
                      </a>
                    </div>
                    <div>
                      <p><a href="http://edu.csdn.net/huiyiCourse/detail/581?utm_source=blog7" target="_blank">【免费直播】Python最佳学习路线</a></p>
                      <p>讲师：韦玮</p>
                    </div>
                  </li>
                  
                </ul>
            </div>
			<!--u3032529-->
            <!-- <div class="extension_other csdn-tracking-statistics baidu_box" data-mod="popu_395">
								
                <script type="text/javascript" src="http://mpb1.iteye.com/cxpdpmumfaedgm.js"></script>
            </div> -->
			<div class="extension_other csdn-tracking-statistics bottomRcom" data-mod="popu_389" style="position:absolute;z-index:-5;opacity:0;pointer-events:none">
						<!--u3032528-->
				<div class="flashrecommend">
				<script type="text/javascript" src="http://mpb1.iteye.com/bwocoltlyzdec.js"></script>
				</div>
			</div>
        </div>
		<div class="user-hotArticle">
          <h3>热门文章</h3>
          <ul class="hotArticle-list">
 
            <li>
              <a href="/ltyqljhwcm/article/details/53043646">快速幂取模算法详解</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>5853</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/51952942">最短路径算法汇总</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>4540</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/52966874">ELFhash - 优秀的字符串哈希算法</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2787</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/52145746">快速排序全面讲解（含复杂度证明）——即将引出八大排序算法</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2041</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/52497853">2016BIT小学期——电话号码问题（哈希+位运算）</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>1921</span></div>
            </li>
 
          </ul>
        </div>


    </aside>
</div>

<div class="left_fixed">
      <div class="left_show_button">
        <span>
          <i class="icon iconfont icon-youjiantou"></i>
        </span>
      </div>
    <ul class="left_menu">

        <li>
            <button class="left-fixed-btn btn-like csdn-tracking-statistics" data-mod="popu_373" target="_self">
                <span class="iconbox border_red"><i class="icon iconfont icon-dianzan"></i></span>
				<span class="txt">1</span>
            </button>
        </li>
		<li id="blog_artical_directory">
            <button class="left-fixed-btn left_menu_btn csdn-tracking-statistics" data-mod="popu_372" target="_self">
                <span class="iconbox border_black"><i class="icon iconfont icon-mulu"></i></span>
            </button>
        </li>
        <li class="menu_con">
            <div class="list_father">
                <div class="arr_box">
                    <button class="btn-noborder arr-btn scroll-down  left_scroll_down"><i class="icon iconfont icon-xiajiantou"></i></button>
                    <button class="btn-noborder arr-btn scroll-up left_scroll_top"><i class="icon iconfont icon-shangjiantou"></i></button>
                </div>
                <div class="arr"></div>
                <div id="csdnBlogDir"></div>
            </div>
        </li>
        <li>
            <button class="left-fixed-btn csdn-tracking-statistics" data-mod="popu_374"  id="com-quick-collect" target="_self">
                <span class="iconbox border_purple"><i class="icon iconfont icon-shoucang"></i></span>
    
            </button>
        </li>
		<li>
          <button class="left-fixed-btn btn-pinglun" >
            <span class="iconbox border_purple"><i class="icon iconfont icon-pinglun"></i></span>
          </button>
        </li>
        <li id="share_box">
            <button class="left-fixed-btn  csdn-tracking-statistics"  data-mod="popu_375" target="_self">
                <span class="iconbox border_orange"><i class="icon iconfont icon-fenxiang"></i></span>
            </button>
            <div class="bdsharebuttonbox csdn-tracking-statistics" data-mod="popu_172">
                <div class="outside">
                    <span class="iconbox border_red2"><i class="icon iconfont icon-xinlang"></i></span>
                    <a href="#" class="bds_tsina" data-cmd="tsina" title="分享到新浪微博"> </a>
                </div>
                <div class="outside">
                    <span class="iconbox border_green"><i class="icon iconfont icon-weixin"></i></span>
                    <a href="#" class="bds_weixin" data-cmd="weixin" title="分享到微信"> </a>
                </div>
                <div class="outside">
                    <span class="iconbox border_blue"><i class="icon iconfont icon-QQ"></i></span>
                    <a href="#" class="bds_qzone" data-cmd="qzone" title="分享到QQ空间"> </a>
                </div>
            </div>
        </li>
    </ul>
</div>
<div class="right_fixed">
  <div class="r_ico">
	<i class="icon iconfont icon-jubao"></i>
	<span class="txt" id="reportBtn">内容举报</span>
  </div>
  <div class="returnTop">
   <i class="icon iconfont icon-fanhuidingbu"></i>
   <span>返回顶部</span>
 </div>
</div>
<div id="pop_win"></div>
<div id="popup_mask"></div>
<div class="pop_CA_cover" ></div>
<div class="pop pop_CA" >
    <div class="CA_header">
        收藏助手
        <span class="cancel_icon"  id="fapancle" ></span>
    </div>
    <iframe src="" id="collectIframe" frameborder="0" width="100%" height="360"  scrolling="no" ></iframe>
</div>
<!--举报-->
<div id="report_dialog" style="top: 250px; left: 343.5px;"><div id="panel_report">
    <div class="panel_head">不良信息举报</div>
    <form method="post" id="frmReport" class="panel_body">
        <table border="0" cellpadding="0" cellspacing="4" class="pop_table">
            <tbody><tr><td colspan="2">您举报文章：<a href="http://blog.csdn.net/raintungli/article/details/76583070" target="_blank">深度学习：神经网络中的前向传播和反向传播算法推导</a></td></tr>
            <tr>
                <th style="width:60px;">举报原因：</th>
                <td id="panel_reporttype">
                    <label><input type="radio" class="report_type" id="report_sex" name="report_type" value="1">色情</label>
                    <label><input type="radio" class="report_type" id="report_Politics" name="report_type" value="2">政治</label>
                    <label><input type="radio" class="report_type" id="report_copy" name="report_type" value="3">抄袭</label>
                    <label><input type="radio" class="report_type" id="report_ad" name="report_type" value="4">广告</label>
                    <label><input type="radio" class="report_type" id="report_want" name="report_type" value="5">招聘</label>
                    <label><input type="radio" class="report_type" id="report_call" name="report_type" value="6">骂人</label>
                    <br>
                    <label><input type="radio" class="report_type" id="report_other" name="report_type" value="7">其他</label>
                    <input type="text" name="report_other_content" id="report_other_content" maxlength="30" style="display: none;">
                </td>
            </tr>
            <tr id="panel_originalurl" style="display: none;">
                <th>原文地址：</th>
                <td>
                    <input id="originalurl" value="http://" name="originalurl" type="text" style="width: 90%;">
                </td>
            </tr>
            <tr>
                <th id="sp_reason">原因补充：</th>
                <td>
                    <textarea id="report_description" style="width: 300px;" rows="3" name="report_description"></textarea>
                    <p id="sp_n" style="color:#999;margin:0px;padding:0px;">(最多只允许输入30个字)</p>
                </td>
            </tr>
            <tr>
                <td></td>
                <td>
                    <input id="btnSubmitReport" name="submit" type="image" align="middle" class="btn_1" src="http://static.blog.csdn.net/images/btn_submit.jpg">
                    <span style="padding-left:20px;"></span>
                    <img id="btnCloseReportDialog" src="http://static.blog.csdn.net/images/btn_cancel.jpg" align="middle">
                    <div id="error" style="color: Red">
                    </div>
                </td>
            </tr>
            </tbody></table>
    </form>
</div>
    <script language="javascript" type="text/javascript">
        var isComment=0;
        //显示隐藏地址
        $(function () {
            if(isComment){
                $("#report_description").attr("disabled",true);
                $("#sp_n").hide();
                $("#sp_reason").html("评论内容：");
            }
            $(".report_type").click(function () {
                $("#panel_originalurl,#report_other_content").hide();
                switch ($(this).val()) {
                    case '3':
                        $("#panel_originalurl").show();
                        $("#originalurl").focus();
                        break;
                    case '7':
                        if(isComment){
                            $("#report_other_content").show().focus();
                        }
                        break;
                }

            });

            $("#frmReport").submit(function () {
                if (!currentUserName) {

                    if (confirm("您的操作必须登录，是否登录？")) {
                        location.href = "http://passport.csdn.net/account/login?from=" + encodeURIComponent(location.href);
                        return false;
                    }
                    return false;
                }

                var reportType = $("input[name=report_type]:checked").val();
                if(!reportType){
                    alert("请选择举报原因！");
                    return false;
                }
                var otherInfo = "";
                switch (reportType) {
                    case '3':
                        otherInfo = $("#originalurl").val();
                        if (otherInfo == ""||otherInfo=="http://") {
                            alert("举报抄袭必须提供原创文章地址！");
                            $("#originalurl").focus();
                            return false;
                        } else if(!checkeURL(otherInfo)) {
                            alert("请输入正确的原创文章地址！");
                            $("#originalurl").focus();
                            return false;
                        }
                        break;
                    case '7':
                        otherInfo = $("#report_other_content").val();
                        if (isComment && !otherInfo) {
                            alert("请填写举报的具体原因！");
                            $("#report_other_content").focus();
                            return false;
                        }
                        if(!isComment){
                            if(!$("#report_description").val()){
                                alert("请填写举报的具体原因！");
                                $("#report_description").focus();
                                return false;
                            }
                        }
                        break;
                }
                if(!isComment){
                    if($("#report_description").val().length>30){
                        alert("举报原因最多只允许输入30个字！");
                        return false;
                    }
                }

                var data = {
                    articleId: 76583070,
                    commentId: 0,
                    reportType: reportType,
                    originalurl: $("#originalurl").val(),
                    report_other_content: $("#report_other_content").val(),
                    report_description: $("#report_description").val(),
                    currentUserName: currentUserName,
                    updatetime: "2017/8/8 16:54:12",
                    blogUser: "raintungli"
                };
                if(!isComment){//如果是举报文章
                    data.report_other_content = data.report_description;
                    data.report_description = "1. 神经网络这是一个常见的神经网络的图：这是一个常见的三层神经网络的基本构成，Layer L1是输入层，Layer L2是隐含层";
                }

                $.post(blog_address + "/common/report?id=76583070&t=2", data, function (data) {
                    if (data.result == 1){
                        SetError("感谢您的举报，我们会尽快审核！");
                    }else{
                        if (data.content) alert(data.content);
                    }

                });
                return false;
            });

            $("#btnCloseReportDialog").click(function () {
                CloseDiv();
            });

        });

        //提示后关闭方法
        function SetError(error) {
            $("#btnCloseReportDialog").trigger("click");
            alert(error);
            CloseDiv();
        }

        //关闭方法
        function CloseDiv() {

            $.removeMask();
            $("#report_dialog").hide().html("");
            return false;
        }

        //验证url
        function checkeURL(url){
            return /^http(s)?:\/\/([\w-]+\.)+[\w-]+/i.test(url);
        }
    </script>
</div>

<script src="http://c.csdnimg.cn/public/common/libs/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/public/res/bower-libs/MathJax/MathJax.js?config=TeX-AMS_HTML"></script>
<script type="text/javascript" src="http://passport.csdn.net/content/loginbox/login.js"></script>

<script type="text/javascript" src="http://static.blog.csdn.net/Skin/skin3-template/js/blog_ver.js?v=3"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/Skin/skin3-template/js/skin2017.js?v=2017.032"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/cnick.js"></script>
<script>window._bd_share_config = { "common": { "bdSnsKey": {}, "bdText": "", "bdMini": "1", "bdMiniList": false, "bdPic": "", "bdStyle": "0", "bdSize": "16" }, "share": {} }; with (document) 0[(getElementsByTagName('head')[0] || body).appendChild(createElement('script')).src = 'http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion=' + ~(-new Date() / 36e5)];</script>
<script type="text/javascript" >
    if($(".article_collect li").length==1){$(".article_collect").hide();}
    if($(".article_tags li").length==1){$(".article_tags").hide();}
    $(".edit a").attr("href","http://write.blog.csdn.net/postedit/"+fileName);
    $.each($(".edu_li a"),function(){$(this).attr("href",$(this).attr("href").replace("blog7","blog9"))});
    new CNick('#uid').showNickname();
if($("#fan").html()=="")
{
$("#fan").html(0);	
}
</script>
</body>

<script  type="text/javascript">
    var fromjs=$("#fromjs");
    if(fromjs.length>0)
    {                  
        $("#fromjs .markdown_views pre").addClass("prettyprint");       
        prettyPrint();

        $('pre.prettyprint code').each(function () {
            var lines = $(this).text().split('\n').length;
            var $numbering = $('<ul/>').addClass('pre-numbering').hide();
            $(this).addClass('has-numbering').parent().append($numbering);
            for (i = 1; i <= lines; i++) {
                $numbering.append($('<li/>').text(i));
            };
            $numbering.fadeIn(1700);
        });

        $('.pre-numbering li').css("color","#999");             
    }

    $(function(){
        setTimeout(function(){
            $(".math").each(function(index,value){$(this).find("span").last().css("color","#fff"); })
        },500);         
       

    });

    setTimeout(function () {
        $(".toc a[target='_blank']").attr("target", "");
    }, 500);

</script>
</html>

