
<!DOCTYPE html>
<html>
<head>
            <link rel="canonical" href="http://blog.csdn.net/ltyqljhwcm/article/details/52772002"/> 

    <script type="text/javascript">
        var username = "ltyqljhwcm";var _blogger = username;var blog_address = "http://blog.csdn.net/ltyqljhwcm";var static_host = "http://static.blog.csdn.net";
        var currentUserName = ""; var fileName = '52772002';var commentscount = 0; var islock = false
        window.quickReplyflag = true;
        var totalFloor=0;
                
                 var isBole = false;
                
                
                 var isDigg = false;
                
          
             var isExpert=false;
          
    </script>

<meta http-equiv="content-type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <script src="http://c.csdnimg.cn/public/common/libs/jquery/jquery-1.9.1.min.js" type="text/javascript"></script>
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/common/libs/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/static/css/avatar.css">
    <link type="text/css" rel="stylesheet" href="http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/default.css" />
    <link rel="stylesheet" href="http://static.blog.csdn.net/Skin/skin3-template/css/style.css?v=2017.032">
    <link rel="stylesheet" href="http://c.csdnimg.cn/public/common/toolbar/content_toolbar_css/content_toolbar.css">

    <script type="text/javascript" src="http://static.blog.csdn.net/Skin/skin3-template/fonts/iconfont.js"></script>
    <script src="//csdnimg.cn/rabbit/exposure-click/main.js?v1.15.23"></script>
    <script type="text/javascript" src="http://c.csdnimg.cn/pubfooter/js/tracking_for_recommend.js?v=0911" charset="utf-8"></script>
    <script type="text/javascript" src="http://csdnimg.cn/pubfooter/js/tracking.js" charset="utf-8"></script>
    <script type="text/javascript" src="http://static.blog.csdn.net/scripts/cnick.js" charset="utf-8"></script>
 
    <link rel="stylesheet" href="http://static.blog.csdn.net/code/prettify.css" />
    <script type="text/javascript" src="http://static.blog.csdn.net/code/prettify.js"></script>
<script src="http://dup.baidustatic.com/js/ds.js"></script>
    <script type="text/javascript">

        // Traffic Stats of the entire Web site By baidu
        var _hmt = _hmt || [];
        (function() {
            var hm = document.createElement("script");
            hm.src = "https://hm.baidu.com/hm.js?6bcd52f51e9b3dce32bec4a3997715ac";
            var s = document.getElementsByTagName("script")[0];
            s.parentNode.insertBefore(hm, s);
        })();
        // Traffic Stats of the entire Web site By baidu end



    </script>
    <meta name="description" content="1.二分查找介绍
在进行开始之前，我们县要来正确的认识一下什么是二分查找算法
上过数值分析这门课的同学一定在迭代那一刻里面清楚的了解过一个名词叫做对分法
实际上，对分法的本质就是二分查找
下面我们来介绍一下二分查找算法
Binary-Search
是不同于顺序扫描的一种极其高效的查找算法
首先我们县要来了解一下二分查找算法相对于朴素的顺序查找算法的优劣
对于朴素的顺序查找算法（不局" />
    <meta name="keywords" content="二叉树,算法" />
    <meta http-equiv="Cache-Control" content="no-siteapp" /><link rel="alternate" media="handheld" href="#" />
    <meta name="shenma-site-verification" content="5a59773ab8077d4a62bf469ab966a63b_1497598848">


    <title>巧用循环不变式书写正确的二分查找算法(看不懂我撞墙) - CSDN博客</title>
</head>
<body>
<script id="toolbar-tpl-scriptId" prod="download" skin="black" src="http://c.csdnimg.cn/public/common/toolbar/js/content_toolbar.js" type="text/javascript" domain="http://blog.csdn.net"></script>

<div class="container clearfix">
    <main>
        <article>
            <h1 class="csdn_top">巧用循环不变式书写正确的二分查找算法(看不懂我撞墙)</h1>
            <div class="article_bar clearfix">
                <div class="artical_tag">
                    <span class="original">原创</span>
                    <span class="time">2016年10月10日 00:25:27</span>
                </div>
				<ul class="article_tags clearfix csdn-tracking-statistics" data-mod="popu_377">
					<li class="tit">标签：</li>
					
					<li><a href="http://so.csdn.net/so/search/s.do?q=二叉树&t=blog" target="_blank">二叉树</a> <span>/</span></li>
					
					<li><a href="http://so.csdn.net/so/search/s.do?q=算法&t=blog" target="_blank">算法</a> <span>/</span></li>
					
					<li><a href="http://so.csdn.net/so/search/s.do?q=c语言&t=blog" target="_blank">c语言</a> <span>/</span></li>
					
					<li><a href="http://so.csdn.net/so/search/s.do?q=遍历&t=blog" target="_blank">遍历</a> <span>/</span></li>
					
					<li><a href="http://so.csdn.net/so/search/s.do?q=数据结构&t=blog" target="_blank">数据结构</a> <span>/</span></li>
					
				</ul>
                <ul class="right_bar">
                    <li><button class="btn-noborder"><i class="icon iconfont icon-read"></i><span class="txt">764</span></button></li>
                    <!--<li><button class="btn-noborder"><i class="icon iconfont icon-dashang-"></i><span class="txt">0</span></button></li>-->

                    <li class="edit">
                        <a class="btn-noborder" href="" >
                            <i class="icon iconfont icon-bianji"></i><span class="txt">编辑</span>
                        </a>
                    </li>
                    <li class="del">
                        <a class="btn-noborder" onclick="javascript:deleteArticle(fileName);return false;">
                            <i class="icon iconfont icon-shanchu"></i><span class="txt">删除</span>
                        </a>
                    </li>
                </ul>
            </div>
            <div id="article_content" class="article_content csdn-tracking-statistics" data-mod="popu_307" data-dsm="post">
                
<h2>1.二分查找介绍</h2>
<div>在进行开始之前，我们县要来正确的认识一下什么是二分查找算法</div>
<div>上过数&#20540;分析这门课的同学一定在迭代那一刻里面清楚的了解过一个名词叫做对分法</div>
<div>实际上，对分法的本质就是二分查找</div>
<div>下面我们来介绍一下二分查找算法</div>
<div>Binary-Search</div>
<div>是不同于顺序扫描的一种极其高效的查找算法</div>
<div>首先我们县要来了解一下二分查找算法相对于朴素的顺序查找算法的优劣</div>
<div>对于朴素的顺序查找算法（不局限于数据的逻辑存储方式，链式或者顺序都可以），我们从顺序表的头开始一直遍历到顺序表的尾知道找到我们需要查找的元素即可跳出，时间复杂度是O(n)，对于数据量一旦过于庞大的话，该算法会显得力不从心</div>
<div>二分查找算法（受限制与数据的逻辑存储方式，仅限制于顺序存储结构），前提是被查找的内存区域数据域必须是有序的，这是二分法开始的先决条件（对于交换式排序的O(n*logn)的时间复杂度可能大家会觉得还不如朴素的算法，但是实际中我们常常会遇到类&#20284;插入排序那样的情况，我们的二分查找开始就没必要进行排序，所以说仅从查找的角度来看的话，二分还是非常高效的）</div>
<div>每一次，我们以中点作为分界点，明确我们的待插元素的位置，舍弃另一半区域从而将我们的算法的查找区域大大缩小</div>
<div>计算其时间复杂度的话</div>
<div><pre code_snippet_id="1920720" snippet_file_name="blog_20161010_1_3117054"  name="code" class="cpp">T(n)=T(n/2)+O(C)
...一共进行了k=logn次迭代
T(n)=T(1)+O(C)*logn=O(logn)</pre>因为是对数的原因，在数据两大的情况下，我们的比较次数依然会变的无限趋近于常数阶，所以说，二分查找是非常的高效的</div>
<h2>2.二分查找为什么难</h2>
<div>虽然我们看着二分查找非常的简单，但是实际上，二分查找的正确书写需要一个非常精细的数学和逻辑推导过程（我在下面会用几个例题来模拟一下思考的思路）</div>
<div>
<p><span style="font-family:宋体">《编程珠玑》第四章提到：</span><span style="color:rgb(255,0,0)"><span style="font-family:宋体">提供充足的时间，仅有约</span>10%<span style="font-family:宋体">的专业程序员能够完成一个正确的二分查找。</span></span></p>
<p>为什么难在于这么几点：</p>
<p>1.终止条件不清晰</p>
<p>2.不正确的转换边界容易导致死循环</p>
<p>3.二分查找的变体相当庞杂，死记硬背绝对不可能</p>
<p><br>
</p>
<p>既然二分查找这么难写，有没有好一点的方法可以帮助我们理解</p>
<p>下面我引入一种思路叫做循环不变式</p>
<h2>3.循环不变式</h2>
</div>
<div>什么是循环不变式，在《算法导论》和《编程之美》中大神都有队循环不变式进行了详细的讲解</div>
<div>个人在这里只是描述个人的见解，如有纰漏和误解，还烦请大神指出</div>
<div>循环不变式相当于是严谨的附加了终止条件的数学归纳法</div>
<div>学过数学归纳法的同学应该都知道，数学归纳法处理的问题往往都是没有上界的，但是作为一个算法，我们的第一根本原则就是有穷性</div>
<div><br>
</div>
<div>定义如下：</div>
<div>初始：循环第一次迭代开始之前，我们的描述和假设必须正确</div>
<div><br>
</div>
<div>维护（也有的叫保持）：在某次迭代是正确的，在下次迭代还是正确的</div>
<div><br>
</div>
<div>终止：循环可以终止，并返回正确的结果</div>
<div><br>
</div>
<div>循环不变式其实不仅仅在本问题中可以大显身手，其实在 循环不变式 是一种思想，在以后的很多问题中，我们要证明算法的正确性等等都需要用到这个强有力的工具</div>
<h2>4.若干变体描述以及代码示例</h2>
<div>我们二分查找描述操作的区域设定为1-right的数组区域</div>
<div><br>
</div>
<div>循环不变式的初始是left-right</div>
<h3>1.二分查找&#20540;为key的下标不存在则返回-1</h3>
<div>初始：待查数组范围是left(1)-right(n)，待查元素key如果存在必定在该范围内</div>
<div><br>
</div>
<div>保持：</div>
<div><pre code_snippet_id="1920720" snippet_file_name="blog_20161010_2_2703133"  name="code" class="cpp">if(data[mid]&gt;key) right=mid-1;   //1
else if(data[mid]&lt;key) left=mid-1;    //2
else if(data[mid]==key) return mid;    //3</pre>解释：1.当data[mid]&gt;key说明mid-right中必定没有key，那么我们的超照范围就变成了left-(mid-1)，该判断语句是查找范围缩小了right-mid&#43;1</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2.同理，查找范围缩小了mid-left&#43;1</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3.超找到了位置，直接返回</div>
<div>在保持环节中，显然，我们每次都确保了key必定在我们的查找范围内，保持性证明完成</div>
<div><span style="font-size:13.3333px">我们始终保证了待插元素落在left-right区域范围内</span><br>
</div>
<div><br>
</div>
<div>终止：</div>
<div>本例题中，因为每次只要没有找到的话我们的待查区域是必定会至少减少1个长度的，所以说，我们的程序必定会正确的终止，不会出现死循环的情况</div>
<div>在最后，如果left&gt;right的话,我们返回-1就好</div>
<div><br>
</div>
<div>示例代码：</div>
<div><pre code_snippet_id="1920720" snippet_file_name="blog_20161010_3_3052580"  name="code" class="cpp">int Binary_Search(int left,int right)
{
	int mid=left+(right-left)/2;
	while(left&lt;=right)
	{
		if(data[mid]&lt;key) left=mid+1;
		else if(data[mid]&gt;key) right=mid-1;
		else return mid;
	} 
	return -1;
}</pre>
<h3>2.二分查找key第一次出现的下标（可能有重复），不存在返回-1</h3>
<div>初始：<span style="font-size:13.3333px">待查数组范围是left(1)-right(n)，待查元素key如果存在必定在该范围内</span></div>
<div><span style="font-size:13.3333px"><br>
</span></div>
<div><span style="font-size:13.3333px">保持：</span></div>
<div><span style="font-size:13.3333px"></span><pre code_snippet_id="1920720" snippet_file_name="blog_20161010_4_8701162"  name="code" class="cpp">if(data[mid]&gt;key) right=mid-1;   //1
else if(data[mid]&lt;key) left=mid+1;   //2
else right=mid;   //3</pre>解释：</div>
<div><span style="font-size:13.3333px">1.data[mid]&gt;key,说明必然第一次出现的下标在left-（mid-1）范围内，该轮判断查找区域缩小了right-mid&#43;1</span></div>
<div>2.同理，盖伦判断的查找区域缩小了mid-left&#43;1</div>
<div>3.当相同的时候，我们会发现我们要找第一次出现的下表，显然第一次出现的下表必然在left-mid之间，该轮判断查找区域缩小了right-mid</div>
<div>其实1,3是可以合并的，合并起来我们可以减小我们的代码量和分支语句，提高判断效率，并且合并之后是不会出现错误的，毕竟按照1来说合并之后right=mid,我们的待插元素key还在left-mid范围内，只不过是收缩的精确度的问题，这个不影响结果</div>
<div><br>
</div>
<div><span style="font-size:13.3333px">我们始终保证了待插元素落在left-right区域范围内</span><br>
</div>
<div><br>
</div>
<div>终止：</div>
<div>在该例题中，我们会发现，第1,3,的分支检查的区域缩小的范围是right-mid，也就是说，我们有可能会存在一次判断之后，待查区域大小没有变化的情况，即当left=right的时候，我们的待查区域缩小量始终是right-mid=right-right=0</div>
<div>这种情况下，会造成死循环，满足不了我们的循环不变式种植的要求，这时候，我们就要对循环的控制进入的条件进行巧妙地修改了</div>
<div><span style="font-size:12px">先来看：</span></div>
<div>left=right-1:mid始终等于left，会1,3情况缩小范围，可以正确运行</div>
<div>left=right:mid始终等于left和right，1,3情况缩小范围是0，回不正确终止</div>
<div>这时候，我们只要让终止条件是left&lt;right就可以了</div>
<div>之后，我们对data[left]进行判断，等于key，返回left，否则返回-1</div>
<div><br>
</div>
<div>示例代码：</div>
<div><pre code_snippet_id="1920720" snippet_file_name="blog_20161010_5_7065742"  name="code" class="cpp">int Binary_Search(int left,int right)
{
	int mid=left+(right-left)/2;
	while(left&lt;right)
	{
		if(data[mid]&lt;key) left=mid+1;
		else right=mid;
	} 
	if(data[left]==key) return left;
	else return -1;
}</pre>
<h3>3.二分查找key（有可能重复）的最后一次出现的下表，没有返回-1</h3>
</div>
1.初始：<span style="font-size:13.3333px">待查数组范围是left(1)-right(n)，待查元素key如果存在必定在该范围内</span></div>
<div><span style="font-size:13.3333px"><br>
</span></div>
<div><span style="font-size:13.3333px">2.保持：</span></div>
<div><span style="font-size:13.3333px"></span><pre code_snippet_id="1920720" snippet_file_name="blog_20161010_6_9890424"  name="code" class="cpp">if(data[mid]&gt;key) right=mid-1;   //1
else if(data[mid]&lt;key) left=mid+1;   //2
else left=mid;   //3</pre>解释：</div>
<div><span style="font-size:13.3333px">1.显然，我们的待查范围缩小了right-mid&#43;1</span></div>
<div><span style="font-size:13.3333px">2.同理，我们的待查范围缩小了mid-left&#43;1</span></div>
<div><span style="font-size:13.3333px">3.相同的时候，我们发现我们要查找最后一个元素，那么显然最后一个key的下表必然在mid-right之间，该轮缩小待查区域为mid-right</span></div>
<div>同上2,3可以合并，减少代码量</div>
<div><span style="font-size:13.3333px">我们始终保证了待插元素落在left-right区域范围内</span><br>
</div>
<div><br>
</div>
<div>3.终止</div>
<div>我们发现left=right-1，或者left=right的时候，我们的mid始终等于left，那么对于判断3,很容易出现死循环</div>
<div>我们对终止条件进行修正left&lt;right-1</div>
<div>最后我们对left，right进行判断就好了</div>
<div><br>
</div>
<div>代码示例：</div>
<div><pre code_snippet_id="1920720" snippet_file_name="blog_20161010_7_1111924"  name="code" class="cpp">int Binary_Search(int left,int right)
{
	int mid=left+(right-left)/2;
	while(left&lt;right-1)
	{
		if(data[mid]&gt;key) right=mid-1;
		else left=mid;
	} 
	if(data[right]==key) return right;
	else if(data[left]==key) return left;
	else return -1;
}</pre><br>
<h3>4.二分查找刚好小于key的元素的下表，不存在返回-1</h3>
</div>
<div>1.初始：<span style="font-size:13.3333px">待查数组范围是left(1)-right(n)，待查元素key如果存在必定在该范围内</span></div>
<div><span style="font-size:13.3333px"><br>
</span></div>
<div><span style="font-size:13.3333px">2.保持：</span></div>
<div><span style="font-size:13.3333px"></span><pre code_snippet_id="1920720" snippet_file_name="blog_20161010_8_5681493"  name="code" class="cpp">if(data[mid]&lt;key) left=mid;    //1
else if(data[mid]&gt;=key) right=mid-1;    //2</pre>对于1来说，显然小于的话，我们的待插元素必定在mid-right中间，那么缩小的区域大小就是mid-left</div>
<div><span style="font-size:13.3333px">对于2，显然缩小范围是right-mid&#43;1</span></div>
<div><span style="font-size:13.3333px">我们始终保证了待插元素落在left-right区域范围内</span></div>
<div><span style="font-size:13.3333px"><br>
</span></div>
<div><span style="font-size:13.3333px">3.终止：</span></div>
<div><span style="font-size:13.3333px">对于情况一来说，如果left=right-1/left=right的话，显然会出现死循环的情况，所以说我们就需要修改终止情况left&lt;right-1</span></div>
<div><span style="font-size:13.3333px">最后判断一下就好了</span></div>
<div><span style="font-size:13.3333px"><br>
</span></div>
<div><span style="font-size:13.3333px">代码示例：</span></div>
<div><span style="font-size:13.3333px"></span><pre code_snippet_id="1920720" snippet_file_name="blog_20161010_9_6902992"  name="code" class="cpp">int Binary_Search(int left,int right)
{
	int mid=left+(right-left)/2;
	while(left&lt;right-1)
	{
		if(data[mid]&gt;=key) right=mid-1;
		else left=mid;
	} 
	if(data[right]&lt;key) return right;
	else if(data[left]&lt;key) return left;
	else return -1;
}</pre><br>
<h3><span style="font-size:13.3333px">5.二分查找干好大于key的元素的下表不存在返回-1</span></h3>
<div><span style="font-size:13.3333px">1.初始：<span style="font-size:13.3333px">待查数组范围是left(1)-right(n)，待查元素key如果存在必定在该范围内</span></span></div>
<div><span style="font-size:13.3333px"><span style="font-size:13.3333px"><br>
</span></span></div>
<div><span style="font-size:13.3333px"><span style="font-size:13.3333px">2.维护：</span></span></div>
<div><span style="font-size:13.3333px"><span style="font-size:13.3333px"></span></span><pre code_snippet_id="1920720" snippet_file_name="blog_20161010_10_6172643"  name="code" class="cpp">if(data[mid]&gt;key) right=mid;
else left=mid+1;</pre>
<div><span style="font-size:13.3333px"><span style="font-size:13.3333px"><br>
</span></span></div>
3.终止：</div>
<div><span style="font-size:13.3333px"><span style="font-size:13.3333px">对于情况left=right来说，容易出现死循环的情况，我们left&lt;right就可以了</span></span></div>
<div><span style="font-size:13.3333px"><span style="font-size:13.3333px">最后判断</span></span></div>
<div><span style="font-size:13.3333px"><span style="font-size:13.3333px"><br>
</span></span></div>
<div><span style="font-size:13.3333px"><span style="font-size:13.3333px">代码示例：</span></span></div>
<div><span style="font-size:13.3333px"><span style="font-size:13.3333px"></span></span><pre code_snippet_id="1920720" snippet_file_name="blog_20161010_11_218043"  name="code" class="cpp">int Binary_Search(int left,int right)
{
	int mid=left+(right-left)/2;
	while(left&lt;right)
	{
		if(data[mid]&gt;key) right=mid;
		else left=mid+1;
	} 
	if(data[left]&lt;key) return left;
	else return -1;
}</pre>
<h2>5.总结：</h2>
<div>思路，利用循环不变式不断的缩小我们的待查区域</div>
<div>最后我们需要对left=right和left=right-1等特殊情况进行考虑，避免因为缩小的区域大小可能为0导致的死循环的情况出现，修改终止条件</div>
<div>最后额外判断就好了</div>
<span style="font-size:13.3333px"><span style="font-size:13.3333px"><br>
<br>
</span></span></div>
<span style="font-size:13.3333px"><br>
</span></div>
<link rel="stylesheet" href="http://static.blog.csdn.net/public/res-min/markdown_views.css?v=2.0" />
            </div>
        </article>
        <div class="readall_box csdn-tracking-statistics" data-mod="popu_376">
			<div class="read_more_mask"></div>
            <a class="btn btn-large btn-gray-fred read_more_btn" target="_self">阅读全文</a>
        </div>
        <div class="article_copyright">
            版权声明：本文为博主原创文章，未经博主允许不得转载。
        </div>
        <!--  <div class="reward_box">
            <div class="tit">
              <button class="btn_reward"><i class="icon iconfont icon-dashang-"></i></button>
            </div>
            <dl class="clearfix">
              <dt><a href="#" target="_blank">近期打赏</a></dt>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
              <dd><a href="#" target="_blank"><img src="http://avatar.csdn.net/9/3/2/2_nzf_001.jpg" alt="聂兆芳" title="聂兆芳"></a></dd>
            </dl>
          </div>-->

        <ul class="article_collect clearfix csdn-tracking-statistics"  data-mod="popu_378">
            <li class="tit">本文已收录于以下专栏：</li>
            
            <li><a href="http://blog.csdn.net/column/details/12704.html" target="_blank">算法与数据结构</a></li>
            
        </ul>
        <div class="comment_box clearfix">
            <div id="comment_form">
                <div id="commentsbmitarear">
                    <!-- <h6><span>0</span>条评论</h6> -->
           <!--          <dl class="clearfix" id="commentbox">
                        <dt>
                            <a href="http://my.csdn.net/"><img src="" ></a>
                        </dt>
                        <dd>
                            <a href="http://my.csdn.net/" target="_blank"></a>
                        </dd>
                        <dd class="txt_tip"><span id="tip_comment" class="tip"></span></dd>
                    </dl> -->
                    <div class="comment_area clearfix">
						<div class="userimg"><a href="http://my.csdn.net/"><img src=""></a></div>
                        <form action="/ltyqljhwcm/comment/submit?id=52772002" method="post" onsubmit="return subform(this);" id="commentform">
                            <textarea class="comment_content" name="comment_content" id="comment_content" placeholder="发表你的评论"></textarea>
                            <div class="bot_bar clearfix">
                                <div id="ubbtools" class="add_code">
                                    <a href="#insertcode" code="code" target="_self"><i class="icon iconfont icon-daima"></i></a>
                                </div>

                                <input type="hidden" id="comment_replyId" name="comment_replyId">
                                <input type="hidden" id="comment_userId" name="comment_userId" value="">
                                <input type="hidden" id="commentId" name="commentId" value="">
                                <input type="submit" class="btn btn-redborder" value="发表评论">
								<span id="tip_comment" class="tip">
                                <div style="display: none;" class="csdn-tracking-statistics" data-mod="popu_384"><a href="#" target="_blank" class="comment_area_btn">发表评论</a></div>

                                <div id="lang_list" code="code">
                                    <a href="#html" style="width:95px;" class="long_name" target="_self">HTML/XML</a>
                                    <a href="#objc" style="width:95px;" class="long_name" target="_self">objective-c</a>
                                    <a href="#delphi" style="width:58px;" class="zhong_name" target="_self">Delphi</a>
                                    <a href="#ruby" class="zhong_name" target="_self">Ruby</a>
                                    <a href="#php" target="_self">PHP</a>
                                    <a href="#csharp" class="duan_name" target="_self">C#</a>
                                    <a style=" border-right: none;" href="#cpp" class="duan_name" target="_self">C++</a>
                                    <a style=" border-bottom:none;width:95px;" href="#javascript" class="long_name" target="_self">JavaScript</a>
                                    <a style=" border-bottom:none;width:95px;" href="#vb" class="long_name" target="_self">Visual Basic</a>
                                    <a style=" border-bottom:none;" href="#python" class="zhong_name" target="_self">Python</a>
                                    <a style=" border-bottom:none;" href="#java" class="zhong_name" target="_self">Java</a>
                                    <a style="border-bottom:none;" href="#css" class="duan_name" target="_self">CSS</a>
                                    <a style="border-bottom:none;" href="#sql" class="duan_name" target="_self">SQL</a>
                                    <a style="border:none; " href="#plain" class="duan_name" target="_self">其它</a>
                                    <span class="arrb"></span>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="comment_li_outbox">
            <div id="comment_list"></div>
        </div>

        <div class="more_comment">
            <div id="comment_bar" class="trackgin-ad" data-mod="popu_385"></div>
        </div>

        <h3 class="recommend_tit">相关文章推荐</h3>
        <div class="recommend_list clearfix">
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/u011386173/article/details/48827211"  target="_blank" strategy="BlogCommendFromBaidu_0">二分查找之美：二分查找及其变体的正确性以及构造方式</a></h2>
                    <div class="summary">
                        参考：http://www.cr173.com/html/20428_1.html

二分查找究竟有多重要？《编程之美》第2.16节的最长递增子序列算法，如果想实现O(n2)到O(nlogn)的时...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/u011386173" target="_blank" strategy="BlogCommendFromBaidu_0"><img src="http://avatar.csdn.net/F/6/F/2_u011386173.jpg" alt="u011386173" title="u011386173"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/u011386173">u011386173</a></li>
                        <li class="time">2015-09-30 11:50</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>296</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/kelvinmao/article/details/52130470"  target="_blank" strategy="BlogCommendFromBaidu_1">利用循环不变式写出正确的二分查找及其衍生算法</a></h2>
                    <div class="summary">
                        一.你能准确写出二分查找吗？先看看定义
  二分查找的搜索过程从数组的中间元素开始，如果中间元素正好是要查找的元素，则查找成功；如果某一特定元素大于或者小于中间元素，则在数组大于或小于中间元素的那一半...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/kelvinmao" target="_blank" strategy="BlogCommendFromBaidu_1"><img src="http://avatar.csdn.net/C/9/7/2_kelvinmao.jpg" alt="kelvinmao" title="kelvinmao"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/kelvinmao">kelvinmao</a></li>
                        <li class="time">2016-08-05 16:34</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>428</span></li>
                    </ul>
                </dd>
            </dl>
            
            <!--dl class="clearfix csdn-tracking-statistics" data-mod="popu_393">
                <dt><a href="http://edu.csdn.net/huiyiCourse/series_detail/64?utm_source=blog10" target="_blank"><img class="maxwidth" src="http://img.blog.csdn.net/20170928113144608" alt="" title=""></a></dt>
                <dd>
                    <div class="summary">
                        <h2><a href='http://edu.csdn.net/topic/python1?utm_source=blog10' target='_blank'>伤心啊！年度热门编程语言排行榜出来了...</a></h2>  <div class="summary">近期，IEEE Spectrum 发布了第四届顶级编程语言交互排行榜。结合 10 个线上数据源的 12 个标准，对 48 种语言进行了排行！此外，七牛云许式伟曾说过Go语言会取代Java...气氛... </div> 
                    </div>
                </dd>
            </dl-->
	<script>
		(function() {
		    var s = "_" + Math.random().toString(36).slice(2);
		    document.write('<div id="' + s + '"></div>');
		    (window.slotbydup=window.slotbydup || []).push({
			id: '4765209',
			container: s,
			size: '808,120',
			display: 'inlay-fix'
		    });
		})();
	</script>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/yexiaohhjk/article/details/46894437"  target="_blank" strategy="BlogCommendFromCsdn_2">把二分查找算法写正确需要注意的地方&lt;转&gt;</a></h2>
                    <div class="summary">
                        原地址：http://www.cppblog.com/converse/archive/2009/09/21/96893.html把二分查找算法写正确需要注意的地方 
今天再次解决一个需要使用二分查找...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/yexiaohhjk" target="_blank" strategy="BlogCommendFromCsdn_2"><img src="http://avatar.csdn.net/A/D/C/2_yexiaohhjk.jpg" alt="yexiaohhjk" title="yexiaohhjk"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/yexiaohhjk">yexiaohhjk</a></li>
                        <li class="time">2015-07-15 15:51</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>295</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics downloadElement" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
               	<dt><a href="http://download.csdn.net/detail/qq_25772617/8416235" target="_blank" strategy="BlogCommendFromCsdn_3"><img class="maxwidth" src="http://download.csdn.net/images/minetype/unkonw.svg" alt="" title=""></a></dt>
		<dd>
			<div class="summary">
				<h2><a href="http://download.csdn.net/detail/qq_25772617/8416235" target="_blank" strategy="BlogCommendFromCsdn_3">二分查找算法</a></h2>
				<div class="summary">
				  <ul>
					  <li class="time">2015-02-02 11:51</li>
					  <li class="visited_num fileSize">334B</li>
					  <li class="download_btn"><a href="http://download.csdn.net/detail/qq_25772617/8416235">下载</a></li>
				  </ul>
				</div> 
			</div>
		</dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics downloadElement" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
               	<dt><a href="http://download.csdn.net/detail/u014719458/7194185" target="_blank" strategy="BlogCommendFromCsdn_4"><img class="maxwidth" src="http://download.csdn.net/images/minetype/txt.svg" alt="" title=""></a></dt>
		<dd>
			<div class="summary">
				<h2><a href="http://download.csdn.net/detail/u014719458/7194185" target="_blank" strategy="BlogCommendFromCsdn_4">二分查找算法</a></h2>
				<div class="summary">
				  <ul>
					  <li class="time">2014-04-15 05:21</li>
					  <li class="visited_num fileSize">1KB</li>
					  <li class="download_btn"><a href="http://download.csdn.net/detail/u014719458/7194185">下载</a></li>
				  </ul>
				</div> 
			</div>
		</dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/awdszxtanwei/article/details/75330554"  target="_blank" strategy="BlogCommendFromCsdn_5">算法导论学习-数学归纳法与循环不变式理解</a></h2>
                    <div class="summary">
                        数学归纳法：

最简单和常见的数学归纳法是证明当n等于任意一个自然数时某命题成立。证明分下面两步：


证明当n= 1时命题成立。

假设n=m时命题成立，那么可以推导出在n=m+1时命...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/awdszxtanwei" target="_blank" strategy="BlogCommendFromCsdn_5"><img src="http://avatar.csdn.net/7/B/9/2_awdszxtanwei.jpg" alt="awdszxtanwei" title="awdszxtanwei"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/awdszxtanwei">awdszxtanwei</a></li>
                        <li class="time">2017-07-18 20:51</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>53</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics downloadElement" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
               	<dt><a href="http://download.csdn.net/detail/fg100emil/443941" target="_blank" strategy="BlogCommendFromCsdn_6"><img class="maxwidth" src="http://download.csdn.net/images/minetype/unkonw.svg" alt="" title=""></a></dt>
		<dd>
			<div class="summary">
				<h2><a href="http://download.csdn.net/detail/fg100emil/443941" target="_blank" strategy="BlogCommendFromCsdn_6">二分查找算法</a></h2>
				<div class="summary">
				  <ul>
					  <li class="time">2008-05-06 21:24</li>
					  <li class="visited_num fileSize">120KB</li>
					  <li class="download_btn"><a href="http://download.csdn.net/detail/fg100emil/443941">下载</a></li>
				  </ul>
				</div> 
			</div>
		</dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics downloadElement" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
               	<dt><a href="http://download.csdn.net/detail/u013780583/9352481" target="_blank" strategy="BlogCommendFromCsdn_7"><img class="maxwidth" src="http://download.csdn.net/images/minetype/pdf.svg" alt="" title=""></a></dt>
		<dd>
			<div class="summary">
				<h2><a href="http://download.csdn.net/detail/u013780583/9352481" target="_blank" strategy="BlogCommendFromCsdn_7">一种改进的二分查找算法</a></h2>
				<div class="summary">
				  <ul>
					  <li class="time">2015-12-13 22:01</li>
					  <li class="visited_num fileSize">219KB</li>
					  <li class="download_btn"><a href="http://download.csdn.net/detail/u013780583/9352481">下载</a></li>
				  </ul>
				</div> 
			</div>
		</dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
                <dd>
                    <h2><a href="/xiaozhuaixifu/article/details/9131821"  target="_blank" strategy="BlogCommendFromCsdn_8">一些重要的算法------启发式搜索，束搜索(beam search)，二分查找算法 and so on............</a></h2>
                    <div class="summary">
                        转自：http://coolshell.cn/articles/2583.html


下面是一些比较重要的算法，原文罗列了32个，但我觉得有很多是数论里的，和计算机的不相干，所以没有选取。下面...
                    </div>
                    <ul>
                        <li class="avatar_img"><a href="http://blog.csdn.net/xiaozhuaixifu" target="_blank" strategy="BlogCommendFromCsdn_8"><img src="http://avatar.csdn.net/3/8/7/2_xiaozhuaixifu.jpg" alt="xiaozhuaixifu" title="xiaozhuaixifu"></a></li>
                        <li class="user_name"><a href="http://blog.csdn.net/xiaozhuaixifu">xiaozhuaixifu</a></li>
                        <li class="time">2013-06-19 19:40</li>
                        <li class="visited_num"><i class="icon iconfont icon-read"></i><span>5763</span></li>
                    </ul>
                </dd>
            </dl>
            
            <dl class="clearfix csdn-tracking-statistics downloadElement" data-mod="popu_387" data-poputype="feed"  data-feed-show="false"  data-dsm="post">
               	<dt><a href="http://download.csdn.net/detail/zswyh/7265339" target="_blank" strategy="BlogCommendFromCsdn_9"><img class="maxwidth" src="http://download.csdn.net/images/minetype/zip.svg" alt="" title=""></a></dt>
		<dd>
			<div class="summary">
				<h2><a href="http://download.csdn.net/detail/zswyh/7265339" target="_blank" strategy="BlogCommendFromCsdn_9">二分查找算法</a></h2>
				<div class="summary">
				  <ul>
					  <li class="time">2014-04-28 15:39</li>
					  <li class="visited_num fileSize">4.43MB</li>
					  <li class="download_btn"><a href="http://download.csdn.net/detail/zswyh/7265339">下载</a></li>
				  </ul>
				</div> 
			</div>
		</dd>
            </dl>
            

	   

            

            
        </div>
    </main>
    <aside>
        <div class="right_box user_info">
            <dl class="inf_bar clearfix">
                <dt class="csdn-tracking-statistics" data-mod="popu_381">
                    <a href="http://blog.csdn.net/ltyqljhwcm" target="_blank">
                        <img src="http://avatar.csdn.net/A/7/0/1_ltyqljhwcm.jpg" class="avatar_pic">
                    </a>
                    <span class="medals" title="">
                <svg class="icon" aria-hidden="true">
                    
                </svg>
              </span>
                </dt>
                <dd>
                    <h3 class="csdn-tracking-statistics"  data-mod="popu_380"><a href="http://blog.csdn.net/ltyqljhwcm" target="_blank" id="uid">ltyqljhwcm</a></h3>
                    <span  class="csdn-tracking-statistics" data-mod="popu_379"><a class="btn btn-redborder-small "  id="span_add_follow" target="_self">＋关注</a></span>
                </dd>
            </dl>
            <div class="inf_number_box clearfix">
                <dl>
                    <dt>原创</dt>
                    <dd>219</dd>
                </dl>
                <dl>
                    <dt>粉丝</dt>
                    <dd id='fan'>39</dd>
                </dl>
                <dl>
                    <dt>喜欢</dt>
                    <dd>0</dd>
                </dl>
								 <dl>
              <dt>码云</dt>
              <dd>&nbsp;</dd>
            </dl>

            </div>
	    <div class="writings">
              <div class="public_signal clearfix">
                <h3>他的最新文章</h3>
                <a href="http://blog.csdn.net/ltyqljhwcm" target="_blank" class="more_z"><span>更多文章</span></a>
              </div>
                <ul class="inf_list clearfix csdn-tracking-statistics" data-mod="popu_382">
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53454971" target="_blank">POJ 3295 - 位运算 + 模拟 +递归</a>
                    </li>
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53444306" target="_blank">NYOJ 118 次小生成树</a>
                    </li>
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53434466" target="_blank">胜者树 败者树 K-路最佳归并树 高效外部排序</a>
                    </li>
                    
                    <li class="clearfix">
                      
                        <a href="/ltyqljhwcm/article/details/53411183" target="_blank">POJ 1062 - 昂贵的聘礼 - 经典题</a>
                    </li>
                    
                </ul>
            </div>
        </div>
        <div class="extension_other csdn-tracking-statistics" data-mod="popu_389">
						<!--u3032528-->
			<div class="flashrecommend">
            <script type="text/javascript" src="http://mpb1.iteye.com/bwocoltlyzdec.js"></script>
		    </div>
        </div>

		<div class="host-column">
          <h3>博主专栏</h3>
          <ul class="column-list">

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/13704.html">
                  <img src="http://img.blog.csdn.net/20161126164008952" alt="">
                  <div>15</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/13704.html">NYOJ 好题总结</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>3080</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/13628.html">
                  <img src="http://img.blog.csdn.net/20161121124730884" alt="">
                  <div>56</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/13628.html">POJ 专项题解</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>19375</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/13409.html">
                  <img src="http://img.blog.csdn.net/20161102193750895" alt="">
                  <div>4</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/13409.html">Leetcode</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>1266</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/12932.html">
                  <img src="http://img.blog.csdn.net/20160915093249392" alt="">
                  <div>8</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/12932.html">读书笔记</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2246</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/12704.html">
                  <img src="http://img.blog.csdn.net/20160826002037987" alt="">
                  <div>37</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/12704.html">算法与数据结构</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>41992</span></div>
              </div>
            </li>

            <li class="clearfix">
              <div class="img list-left">
                <a href="http://blog.csdn.net/column/details/mystudyrecord001.html">
                  <img src="http://img.blog.csdn.net/20160809183336359" alt="">
                  <div>15</div>
                </a>
              </div>
              <div class="content list-left">
                <h4 class="title"><a href="http://blog.csdn.net/column/details/mystudyrecord001.html">微软面试百题</a></h4>
                <div class="read list-left"><i class="icon iconfont icon-read"></i><span>8448</span></div>
              </div>
            </li>

          </ul>
          <div class="unfold-btn">
            <span>展开</span><i class="icon iconfont icon-xiajiantou"></i>
          </div>
        </div>
		
        
        <div class="fixRight">
            <div class="right_box padb0 csdn-tracking-statistics" data-mod="popu_391">
                <h3 class="tit"><span><em>在线课程</em></span></h3>
                <ul class="edu_li clearfix">
                  
                  <li>
                    <div>
                      <a href="http://edu.csdn.net/huiyiCourse/series_detail/64?utm_source=blog7" target="_blank">
                        <img src="http://img.bss.csdn.net/201710111134087930.png" alt="Presto服务治理与架构优化在京东的实践应用" title="Presto服务治理与架构优化在京东的实践应用">
                      </a>
                    </div>
                    <div>
                      <p><a href="http://edu.csdn.net/huiyiCourse/series_detail/64?utm_source=blog7" target="_blank">Presto服务治理与架构优化在京东的实践应用</a></p>
                      <p>讲师：王哲涵</p>
                    </div>
                  </li>
                  
                  <li>
                    <div>
                      <a href="http://edu.csdn.net/huiyiCourse/detail/581?utm_source=blog7" target="_blank">
                        <img src="http://img.bss.csdn.net/201710111123195350.png" alt="【免费直播】Python最佳学习路线" title="【免费直播】Python最佳学习路线">
                      </a>
                    </div>
                    <div>
                      <p><a href="http://edu.csdn.net/huiyiCourse/detail/581?utm_source=blog7" target="_blank">【免费直播】Python最佳学习路线</a></p>
                      <p>讲师：韦玮</p>
                    </div>
                  </li>
                  
                </ul>
            </div>
			<!--u3032529-->
            <!-- <div class="extension_other csdn-tracking-statistics baidu_box" data-mod="popu_395">
								
                <script type="text/javascript" src="http://mpb1.iteye.com/cxpdpmumfaedgm.js"></script>
            </div> -->
			<div class="extension_other csdn-tracking-statistics bottomRcom" data-mod="popu_389" style="position:absolute;z-index:-5;opacity:0;pointer-events:none">
						<!--u3032528-->
				<div class="flashrecommend">
				<script type="text/javascript" src="http://mpb1.iteye.com/bwocoltlyzdec.js"></script>
				</div>
			</div>
        </div>
		<div class="user-hotArticle">
          <h3>热门文章</h3>
          <ul class="hotArticle-list">
 
            <li>
              <a href="/ltyqljhwcm/article/details/53043646">快速幂取模算法详解</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>5853</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/51952942">最短路径算法汇总</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>4540</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/52966874">ELFhash - 优秀的字符串哈希算法</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2787</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/52145746">快速排序全面讲解（含复杂度证明）——即将引出八大排序算法</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>2041</span></div>
            </li>
 
            <li>
              <a href="/ltyqljhwcm/article/details/52497853">2016BIT小学期——电话号码问题（哈希+位运算）</a>
              <div class="read list-left"><i class="icon iconfont icon-read"></i><span>1921</span></div>
            </li>
 
          </ul>
        </div>


    </aside>
</div>

<div class="left_fixed">
      <div class="left_show_button">
        <span>
          <i class="icon iconfont icon-youjiantou"></i>
        </span>
      </div>
    <ul class="left_menu">

        <li>
            <button class="left-fixed-btn btn-like csdn-tracking-statistics" data-mod="popu_373" target="_self">
                <span class="iconbox border_red"><i class="icon iconfont icon-dianzan"></i></span>
				<span class="txt">1</span>
            </button>
        </li>
		<li id="blog_artical_directory">
            <button class="left-fixed-btn left_menu_btn csdn-tracking-statistics" data-mod="popu_372" target="_self">
                <span class="iconbox border_black"><i class="icon iconfont icon-mulu"></i></span>
            </button>
        </li>
        <li class="menu_con">
            <div class="list_father">
                <div class="arr_box">
                    <button class="btn-noborder arr-btn scroll-down  left_scroll_down"><i class="icon iconfont icon-xiajiantou"></i></button>
                    <button class="btn-noborder arr-btn scroll-up left_scroll_top"><i class="icon iconfont icon-shangjiantou"></i></button>
                </div>
                <div class="arr"></div>
                <div id="csdnBlogDir"></div>
            </div>
        </li>
        <li>
            <button class="left-fixed-btn csdn-tracking-statistics" data-mod="popu_374"  id="com-quick-collect" target="_self">
                <span class="iconbox border_purple"><i class="icon iconfont icon-shoucang"></i></span>
    
            </button>
        </li>
		<li>
          <button class="left-fixed-btn btn-pinglun" >
            <span class="iconbox border_purple"><i class="icon iconfont icon-pinglun"></i></span>
          </button>
        </li>
        <li id="share_box">
            <button class="left-fixed-btn  csdn-tracking-statistics"  data-mod="popu_375" target="_self">
                <span class="iconbox border_orange"><i class="icon iconfont icon-fenxiang"></i></span>
            </button>
            <div class="bdsharebuttonbox csdn-tracking-statistics" data-mod="popu_172">
                <div class="outside">
                    <span class="iconbox border_red2"><i class="icon iconfont icon-xinlang"></i></span>
                    <a href="#" class="bds_tsina" data-cmd="tsina" title="分享到新浪微博"> </a>
                </div>
                <div class="outside">
                    <span class="iconbox border_green"><i class="icon iconfont icon-weixin"></i></span>
                    <a href="#" class="bds_weixin" data-cmd="weixin" title="分享到微信"> </a>
                </div>
                <div class="outside">
                    <span class="iconbox border_blue"><i class="icon iconfont icon-QQ"></i></span>
                    <a href="#" class="bds_qzone" data-cmd="qzone" title="分享到QQ空间"> </a>
                </div>
            </div>
        </li>
    </ul>
</div>
<div class="right_fixed">
  <div class="r_ico">
	<i class="icon iconfont icon-jubao"></i>
	<span class="txt" id="reportBtn">内容举报</span>
  </div>
  <div class="returnTop">
   <i class="icon iconfont icon-fanhuidingbu"></i>
   <span>返回顶部</span>
 </div>
</div>
<div id="pop_win"></div>
<div id="popup_mask"></div>
<div class="pop_CA_cover" ></div>
<div class="pop pop_CA" >
    <div class="CA_header">
        收藏助手
        <span class="cancel_icon"  id="fapancle" ></span>
    </div>
    <iframe src="" id="collectIframe" frameborder="0" width="100%" height="360"  scrolling="no" ></iframe>
</div>
<!--举报-->
<div id="report_dialog" style="top: 250px; left: 343.5px;"><div id="panel_report">
    <div class="panel_head">不良信息举报</div>
    <form method="post" id="frmReport" class="panel_body">
        <table border="0" cellpadding="0" cellspacing="4" class="pop_table">
            <tbody><tr><td colspan="2">您举报文章：<a href="http://blog.csdn.net/raintungli/article/details/76583070" target="_blank">深度学习：神经网络中的前向传播和反向传播算法推导</a></td></tr>
            <tr>
                <th style="width:60px;">举报原因：</th>
                <td id="panel_reporttype">
                    <label><input type="radio" class="report_type" id="report_sex" name="report_type" value="1">色情</label>
                    <label><input type="radio" class="report_type" id="report_Politics" name="report_type" value="2">政治</label>
                    <label><input type="radio" class="report_type" id="report_copy" name="report_type" value="3">抄袭</label>
                    <label><input type="radio" class="report_type" id="report_ad" name="report_type" value="4">广告</label>
                    <label><input type="radio" class="report_type" id="report_want" name="report_type" value="5">招聘</label>
                    <label><input type="radio" class="report_type" id="report_call" name="report_type" value="6">骂人</label>
                    <br>
                    <label><input type="radio" class="report_type" id="report_other" name="report_type" value="7">其他</label>
                    <input type="text" name="report_other_content" id="report_other_content" maxlength="30" style="display: none;">
                </td>
            </tr>
            <tr id="panel_originalurl" style="display: none;">
                <th>原文地址：</th>
                <td>
                    <input id="originalurl" value="http://" name="originalurl" type="text" style="width: 90%;">
                </td>
            </tr>
            <tr>
                <th id="sp_reason">原因补充：</th>
                <td>
                    <textarea id="report_description" style="width: 300px;" rows="3" name="report_description"></textarea>
                    <p id="sp_n" style="color:#999;margin:0px;padding:0px;">(最多只允许输入30个字)</p>
                </td>
            </tr>
            <tr>
                <td></td>
                <td>
                    <input id="btnSubmitReport" name="submit" type="image" align="middle" class="btn_1" src="http://static.blog.csdn.net/images/btn_submit.jpg">
                    <span style="padding-left:20px;"></span>
                    <img id="btnCloseReportDialog" src="http://static.blog.csdn.net/images/btn_cancel.jpg" align="middle">
                    <div id="error" style="color: Red">
                    </div>
                </td>
            </tr>
            </tbody></table>
    </form>
</div>
    <script language="javascript" type="text/javascript">
        var isComment=0;
        //显示隐藏地址
        $(function () {
            if(isComment){
                $("#report_description").attr("disabled",true);
                $("#sp_n").hide();
                $("#sp_reason").html("评论内容：");
            }
            $(".report_type").click(function () {
                $("#panel_originalurl,#report_other_content").hide();
                switch ($(this).val()) {
                    case '3':
                        $("#panel_originalurl").show();
                        $("#originalurl").focus();
                        break;
                    case '7':
                        if(isComment){
                            $("#report_other_content").show().focus();
                        }
                        break;
                }

            });

            $("#frmReport").submit(function () {
                if (!currentUserName) {

                    if (confirm("您的操作必须登录，是否登录？")) {
                        location.href = "http://passport.csdn.net/account/login?from=" + encodeURIComponent(location.href);
                        return false;
                    }
                    return false;
                }

                var reportType = $("input[name=report_type]:checked").val();
                if(!reportType){
                    alert("请选择举报原因！");
                    return false;
                }
                var otherInfo = "";
                switch (reportType) {
                    case '3':
                        otherInfo = $("#originalurl").val();
                        if (otherInfo == ""||otherInfo=="http://") {
                            alert("举报抄袭必须提供原创文章地址！");
                            $("#originalurl").focus();
                            return false;
                        } else if(!checkeURL(otherInfo)) {
                            alert("请输入正确的原创文章地址！");
                            $("#originalurl").focus();
                            return false;
                        }
                        break;
                    case '7':
                        otherInfo = $("#report_other_content").val();
                        if (isComment && !otherInfo) {
                            alert("请填写举报的具体原因！");
                            $("#report_other_content").focus();
                            return false;
                        }
                        if(!isComment){
                            if(!$("#report_description").val()){
                                alert("请填写举报的具体原因！");
                                $("#report_description").focus();
                                return false;
                            }
                        }
                        break;
                }
                if(!isComment){
                    if($("#report_description").val().length>30){
                        alert("举报原因最多只允许输入30个字！");
                        return false;
                    }
                }

                var data = {
                    articleId: 76583070,
                    commentId: 0,
                    reportType: reportType,
                    originalurl: $("#originalurl").val(),
                    report_other_content: $("#report_other_content").val(),
                    report_description: $("#report_description").val(),
                    currentUserName: currentUserName,
                    updatetime: "2017/8/8 16:54:12",
                    blogUser: "raintungli"
                };
                if(!isComment){//如果是举报文章
                    data.report_other_content = data.report_description;
                    data.report_description = "1. 神经网络这是一个常见的神经网络的图：这是一个常见的三层神经网络的基本构成，Layer L1是输入层，Layer L2是隐含层";
                }

                $.post(blog_address + "/common/report?id=76583070&t=2", data, function (data) {
                    if (data.result == 1){
                        SetError("感谢您的举报，我们会尽快审核！");
                    }else{
                        if (data.content) alert(data.content);
                    }

                });
                return false;
            });

            $("#btnCloseReportDialog").click(function () {
                CloseDiv();
            });

        });

        //提示后关闭方法
        function SetError(error) {
            $("#btnCloseReportDialog").trigger("click");
            alert(error);
            CloseDiv();
        }

        //关闭方法
        function CloseDiv() {

            $.removeMask();
            $("#report_dialog").hide().html("");
            return false;
        }

        //验证url
        function checkeURL(url){
            return /^http(s)?:\/\/([\w-]+\.)+[\w-]+/i.test(url);
        }
    </script>
</div>

<script src="http://c.csdnimg.cn/public/common/libs/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/public/res/bower-libs/MathJax/MathJax.js?config=TeX-AMS_HTML"></script>
<script type="text/javascript" src="http://passport.csdn.net/content/loginbox/login.js"></script>

<script type="text/javascript" src="http://static.blog.csdn.net/Skin/skin3-template/js/blog_ver.js?v=3"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/Skin/skin3-template/js/skin2017.js?v=2017.032"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/cnick.js"></script>
<script>window._bd_share_config = { "common": { "bdSnsKey": {}, "bdText": "", "bdMini": "1", "bdMiniList": false, "bdPic": "", "bdStyle": "0", "bdSize": "16" }, "share": {} }; with (document) 0[(getElementsByTagName('head')[0] || body).appendChild(createElement('script')).src = 'http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion=' + ~(-new Date() / 36e5)];</script>
<script type="text/javascript" >
    if($(".article_collect li").length==1){$(".article_collect").hide();}
    if($(".article_tags li").length==1){$(".article_tags").hide();}
    $(".edit a").attr("href","http://write.blog.csdn.net/postedit/"+fileName);
    $.each($(".edu_li a"),function(){$(this).attr("href",$(this).attr("href").replace("blog7","blog9"))});
    new CNick('#uid').showNickname();
if($("#fan").html()=="")
{
$("#fan").html(0);	
}
</script>
</body>

<script  type="text/javascript">
    var fromjs=$("#fromjs");
    if(fromjs.length>0)
    {                  
        $("#fromjs .markdown_views pre").addClass("prettyprint");       
        prettyPrint();

        $('pre.prettyprint code').each(function () {
            var lines = $(this).text().split('\n').length;
            var $numbering = $('<ul/>').addClass('pre-numbering').hide();
            $(this).addClass('has-numbering').parent().append($numbering);
            for (i = 1; i <= lines; i++) {
                $numbering.append($('<li/>').text(i));
            };
            $numbering.fadeIn(1700);
        });

        $('.pre-numbering li').css("color","#999");             
    }

    $(function(){
        setTimeout(function(){
            $(".math").each(function(index,value){$(this).find("span").last().css("color","#fff"); })
        },500);         
       

    });

    setTimeout(function () {
        $(".toc a[target='_blank']").attr("target", "");
    }, 500);

</script>
</html>

